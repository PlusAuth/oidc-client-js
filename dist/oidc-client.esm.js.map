{"version":3,"file":"oidc-client.esm.js","sources":["../src/constants/events.ts","../src/errors.ts","../src/helpers/state_manager/state_store.ts","../src/helpers/state_manager/local_storage.ts","../src/helpers/state_manager/in_memory.ts","../src/helpers/event_emitter.ts","../src/helpers/timer.ts","../src/utils/iframe.ts","../node_modules/base64-js/index.js","../src/utils/url.ts","../src/utils/request.ts","../src/utils/jose.ts","../src/utils/check_session_iframe.ts","../src/utils/object.ts","../src/utils/oidc.ts","../src/utils/popup.ts","../src/utils/tab_utils.ts","../src/client.ts","../src/index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/indent */\nexport const Events = {\n  USER_LOGOUT:          'user_logout',\n  USER_LOGIN:           'user_login',\n  SILENT_RENEW_SUCCESS: 'silent_renew_success',\n  SILENT_RENEW_ERROR:   'silent_renew_error',\n  SESSION_CHANGE:       'session_change'\n} as const\n\nexport type EventTypes = 'user_logout' | 'user_login' | 'silent_renew_success' |\n                          'silent_renew_error' | 'session_change' | 'session_error'\n","export class OIDCClientError extends Error {\n  error: string;\n\n  error_description?: string;\n\n  public constructor( error: string, error_description?: string ) {\n    super( `${ error }${ error_description && ` - ${ error_description }` || '' }` );\n    this.name = 'OIDCClientError'\n    this.error = error\n    this.error_description = error_description\n  }\n}\n\nexport class AuthenticationError extends OIDCClientError {\n  state?: string;\n\n  error_uri?: string;\n\n  constructor( error: string, error_description?: string, state?: string, error_uri?: string ) {\n    super( error, error_description );\n    this.name = 'AuthenticationError'\n    this.state = state;\n    this.error_uri = error_uri;\n  }\n}\n\nexport class InvalidJWTError extends OIDCClientError {\n  constructor( details: string ) {\n    super( details );\n    this.name = 'InvalidJWTError'\n    this.error_description = details\n  }\n}\nexport class InvalidIdTokenError extends InvalidJWTError {\n  constructor( details: string ) {\n    super( details );\n    this.name = 'InvalidIdTokenError'\n  }\n}\n\nexport class InteractionCancelled extends OIDCClientError {\n  constructor( details: string ) {\n    super( details );\n    this.name = 'InteractionCancelled'\n  }\n}\n","export interface StateStore<T = Record<string, any>> {\n  init?(): Promise<StateStore<T>>\n}\nexport abstract class StateStore<T = Record<string, any>> {\n  prefix: string;\n\n  constructor( prefix = '' ) {\n    this.prefix = prefix\n  }\n\n  public abstract get( key: string ): Promise<T | null>;\n\n  public abstract set( key: string, value: T ): Promise<void>;\n\n  public abstract del( key: string ): Promise<void>;\n\n  public abstract clear( maxAge?: number ): Promise<void>;\n}\n","import { StateStore } from './state_store';\n\nexport class LocalStorageStateStore<T = any> extends StateStore<T> {\n  constructor( prefix = 'pa_oidc.' ) {\n    super( prefix )\n  }\n\n  get( key: string ) {\n    return new Promise<T | null>( ( resolve ) => {\n      const value = window.localStorage.getItem( this.prefix + key );\n      if ( value ) {\n        resolve( JSON.parse( value ) );\n      } else {\n        resolve( null );\n      }\n    } );\n  }\n\n  set( key: string, value: T ) {\n    return new Promise<void>( ( resolve ) => {\n      window.localStorage.setItem( this.prefix + key, JSON.stringify( value ) );\n      resolve();\n    } );\n  }\n\n  del( key: string ) {\n    return new Promise<void>( ( resolve ) => {\n      window.localStorage.removeItem( this.prefix + key );\n      resolve();\n    } );\n  }\n\n  clear( before?: number ): Promise<void> {\n    return new Promise<void>( ( resolve ) => {\n      let i;\n      const storedKeys: string[] = [];\n      for ( i = 0; i < window.localStorage.length; i++ ) {\n        const key = window.localStorage.key( i )\n        // items only created by oidc client\n        if ( key?.substring( 0, this.prefix.length ) == this.prefix ) {\n          storedKeys.push( key );\n        }\n      }\n      for ( i = 0; i < storedKeys.length; i++ ) {\n        if ( before ) {\n          try {\n            const storedItem = JSON.parse( window.localStorage.getItem( storedKeys[i] )! )\n            if ( storedItem.created_at < before ) {\n              window.localStorage.removeItem( storedKeys[i] )\n            }\n          } catch ( e ) {\n          }\n        } else {\n          window.localStorage.removeItem( storedKeys[i] )\n        }\n      }\n      resolve();\n    } );\n  }\n}\n","import { StateStore } from './state_store';\n\nexport class InMemoryStateStore<T = any> extends StateStore<T> {\n  map = new Map()\n\n  clear( before?: number ) {\n    if ( before ){\n      this.map.forEach( ( val, ind ) => {\n        if ( val.created_at < before ){\n          this.map.delete( ind )\n        }\n      } )\n      return Promise.resolve()\n    } else {\n      return Promise.resolve( this.map.clear() );\n    }\n  }\n\n  del( key: string ) {\n    this.map.delete( key )\n    return Promise.resolve( );\n  }\n\n  get( key: string ) {\n    return Promise.resolve( this.map.get( key ) || null );\n  }\n\n  set( key: string, value: any ) {\n    this.map.set( key, value )\n    return Promise.resolve();\n  }\n}\n","export type Listener = ( ...args: any ) => void\n\nexport class EventEmitter<T extends string>{\n  callbacks: Record<string, any[] >;\n\n  constructor(){\n    this.callbacks = {}\n  }\n\n  once( event: T, fn: ( ...args: any[] ) => void ){\n    function on( this: EventEmitter<any>, ...onArgs: any[] ) {\n      this.off( event, on );\n      fn.apply( this, onArgs );\n    }\n    on.fn = fn\n    this.on( event, on );\n    return this;\n  }\n\n  on( event: T, cb: ( ...args: any[] ) => void ){\n    if ( !this.callbacks[`$${ event }`] ) this.callbacks[`$${ event }`] = [];\n    this.callbacks[`$${ event }`].push( cb )\n    return this\n  }\n\n  off( event?: T, fn?: ( ...args: any[] ) => void ){\n    if ( !event ) {\n      this.callbacks = {};\n      return this;\n    }\n\n    // specific event\n    const callbacks = this.callbacks[`$${ event }`];\n    if ( !callbacks ) return this;\n\n    // remove all handlers\n    if ( !fn ) {\n      delete this.callbacks[`$${ event }`];\n      return this;\n    }\n\n    for ( let i = 0; i < callbacks.length; i++ ) {\n      const cb = callbacks[i];\n      if ( cb === fn || cb.fn === fn ) {\n        callbacks.splice( i, 1 );\n        break;\n      }\n    }\n\n    // Remove event specific arrays for event types that no\n    // one is subscribed for to avoid memory leak.\n    if ( callbacks.length === 0 ) {\n      delete this.callbacks[`$${ event }`];\n    }\n\n    return this;\n  }\n\n  emit( event: T, ...args: any[] ){\n    let cbs = this.callbacks[`$${ event }`]\n    if ( cbs ) {\n      cbs = cbs.slice( 0 );\n      for ( let i = 0, len = cbs.length; i < len; ++i ) {\n        cbs[i].apply( this, args );\n      }\n    }\n    return this\n  }\n}\n","export class Timer {\n  private now: () => number;\n\n  private _timerHandle: any;\n\n  private _expiration!: number;\n\n  constructor( currentTimeInMillisFunc = () => Date.now() ) {\n    this.now = currentTimeInMillisFunc\n  }\n\n  start( duration: number, callback: () => void ){\n    if ( duration <= 0 ) {\n      duration = 1;\n    }\n    const expiration = this.now() / 1000 + duration;\n    if ( this._expiration === expiration && this._timerHandle ) {\n      return;\n    }\n\n    this.stop();\n\n    this._expiration = expiration;\n\n    // prevent device sleep and delayed timers\n    let timerDuration = 5;\n    if ( duration < timerDuration ) {\n      timerDuration = duration;\n    }\n    this._timerHandle = setInterval( ()=>{\n      if ( this._expiration <= this.now() / 1000 ) {\n        this.stop();\n        callback()\n      }\n    }, timerDuration * 1000 );\n  }\n\n  stop() {\n    if ( this._timerHandle ) {\n      clearInterval( this._timerHandle );\n      this._timerHandle = null;\n    }\n  }\n}\n","import { AuthenticationError, OIDCClientError } from '../errors';\nimport type { IFrameOptions } from '../interfaces';\n\nexport function createHiddenFrame() {\n  const iframe = window.document.createElement( 'iframe' );\n  iframe.style.width = '0';\n  iframe.style.height = '0';\n  iframe.style.position = 'absolute';\n  iframe.style.visibility = 'hidden';\n  iframe.style.display = 'none';\n\n  iframe.title = '__pa_helper__hidden'\n  iframe.ariaHidden = 'true'\n\n  return iframe\n}\n\nexport function runIframe(\n  url: string,\n  options: IFrameOptions\n) {\n  return new Promise<any>( ( resolve, reject ) => {\n    let onLoadTimeoutId: any = null;\n    const iframe = createHiddenFrame()\n\n    const timeoutSetTimeoutId = setTimeout( () => {\n      reject( new OIDCClientError( 'Timed out' ) );\n      removeIframe();\n    }, ( options.timeout || 10 ) * 1000 );\n\n    const iframeEventHandler =  ( e: MessageEvent ) => {\n      if ( e.origin != options.eventOrigin ) return;\n      if ( !e.data || e.data.type !== 'authorization_response' ) return;\n      const eventSource = e.source;\n      if ( eventSource ) {\n        ( <any>eventSource ).close();\n      }\n\n      const resp = e.data.response || e.data\n      resp.error\n        ? reject( new AuthenticationError( resp.error, resp.error_description, resp.state, resp.error_uri ) )\n        : resolve( e.data );\n      clearTimeout( timeoutSetTimeoutId );\n      removeIframe();\n    };\n\n    const removeIframe = () => {\n      if ( onLoadTimeoutId != null ){\n        clearTimeout( onLoadTimeoutId )\n      }\n      if ( window.document.body.contains( iframe ) ) {\n        window.document.body.removeChild( iframe );\n      }\n      window.removeEventListener( 'message', iframeEventHandler, false );\n    };\n\n    const onLoadTimeout = () => setTimeout( ()=>{\n      reject( new OIDCClientError( 'Could not complete silent authentication', url ) )\n      removeIframe();\n    }, 300 )\n\n\n\n    window.addEventListener( 'message', iframeEventHandler, false );\n    window.document.body.appendChild( iframe );\n    iframe.setAttribute( 'src', url );\n\n    /**\n     * In case of wrong client id, wrong redirect_uri, in short when redirect did not happen\n     * we assume flow failed.\n     */\n    iframe.onload = function () {\n      onLoadTimeoutId = onLoadTimeout()\n    }\n  } );\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","import { fromByteArray } from 'base64-js';\n\nexport function isValidIssuer( issuer: string ){\n  try {\n    const url = new URL( issuer )\n    if ( !['http:', 'https:'].includes( url.protocol ) ){\n      return false\n    }\n    if ( url.search !== '' || url.hash !== '' ){\n      return false\n    }\n    return true\n  } catch ( e ){\n    return false\n  }\n}\nexport function buildEncodedQueryString( obj?: Record<string, any>,\n                                         appendable = true, ) {\n  if ( !obj ) return '';\n  const ret: string[] = [];\n  for ( const d in obj ) {\n    if ( obj.hasOwnProperty( d ) && obj[d] ) {\n      ret.push( `${\n        encodeURIComponent( d )\n      }=${\n        encodeURIComponent( typeof obj[d] === 'object' ? JSON.stringify( obj[d] ) : obj[d]! )\n      }` );\n    }\n  }\n  return `${ appendable ? '?' : '' }${ ret.join( '&' ) }`;\n}\n\nexport function parseQueryUrl( value: string ) {\n  const result: Record<string, string> = {};\n  value = value.trim().replace( /^(\\?|#|&)/, '' );\n  const params = value.split( '&' );\n  for ( let i = 0; i < params.length; i += 1 ) {\n    const paramAndValue = params[i];\n    const parts = paramAndValue.split( '=' );\n    const key = decodeURIComponent( parts.shift()! );\n    const value = parts.length > 0 ? parts.join( '=' ) : '';\n    result[key] = decodeURIComponent( value );\n  }\n  return result;\n}\n\nexport function urlSafe( buffer: Uint8Array ): string {\n  const encoded = fromByteArray( new Uint8Array( buffer ) );\n  return encoded.replace( /\\+/g, '-' ).replace( /\\//g, '_' ).replace( /=/g, '' );\n}\n","import { buildEncodedQueryString } from './url';\n\nexport interface RequestOptions {\n  body?: Record<string, string | number | null | undefined>;\n  headers?: Record<string, string>,\n  method: 'GET' | 'POST' | 'PATCH' | 'TRACE' | 'OPTIONS' | 'HEAD',\n  requestType?: 'form' | 'json',\n  url: string\n}\n\nexport function request( options: RequestOptions ): Promise<any>{\n  let body: any = null\n  let headers = options.headers || {}\n  if ( options.method === 'POST' ){\n    headers = {\n      'Content-Type': options.requestType === 'form' ? 'application/x-www-form-urlencoded;charset=UTF-8' :\n        'application/json;charset=UTF-8',\n      ...headers\n    }\n  }\n  if ( options.body ){\n    body = options.requestType === 'form' ? buildEncodedQueryString( options.body, false )\n      : JSON.stringify( options.body )\n  }\n\n  return new Promise( ( resolve, reject ) => {\n    fetch( options.url, {\n      method: options.method,\n      body:   body,\n      headers\n    } )\n      .then( ( value: Response ) => resolve( value.json() ) )\n      .catch( reject )\n  } )\n}\n","import { InvalidIdTokenError, InvalidJWTError, OIDCClientError } from '../errors';\nimport type { IPlusAuthClientOptions, JWTValidationOptions, ParsedJWT } from '../interfaces';\n\nimport { urlSafe } from './url';\n\nconst CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\nfunction getRandomBytes( n: number ){\n  // @ts-ignore\n  const crypto = self.crypto || self.msCrypto, QUOTA = 65536;\n  const a = new Uint8Array( n );\n  for ( let i = 0; i < n; i += QUOTA ) {\n    crypto.getRandomValues( a.subarray( i, i + Math.min( n - i, QUOTA ) ) );\n  }\n  return a;\n}\n\nexport function generateRandom( length: number ){\n  let out = '';\n  const charsLen = CHARSET.length;\n  const maxByte = 256 - 256 % charsLen;\n  while ( length > 0 ) {\n    const buf = getRandomBytes( Math.ceil( length * 256 / maxByte ) );\n    for ( let i = 0; i < buf.length && length > 0; i++ ) {\n      const randomByte = buf[i];\n      if ( randomByte < maxByte ) {\n        out += CHARSET.charAt( randomByte % charsLen );\n        length--;\n      }\n    }\n  }\n  return out;\n}\n\n\nexport function deriveChallenge( code: string ): Promise<string>{\n  if ( code.length < 43 || code.length > 128 ) {\n    return Promise.reject( new OIDCClientError( `Invalid code length: ${ code.length }` ) );\n  }\n\n  return new Promise( ( resolve, reject ) => {\n    crypto.subtle.digest( 'SHA-256', new TextEncoder().encode( code ) )\n      .then( buffer => {\n        return resolve( urlSafe( new Uint8Array( buffer ) ) );\n      }, function ( error ) {\n        /* istanbul ignore next */\n        return reject( error );\n      } );\n  } );\n}\n// https://datatracker.ietf.org/doc/html/rfc4648#section-5\nexport const urlDecodeB64 = ( input: string ) => decodeURIComponent(\n  atob( input.replace( /_/g, '/' ).replace( /-/g, '+' ) )\n    .split( '' )\n    .map( c => {\n      return `%${ `00${ c.charCodeAt( 0 ).toString( 16 ) }`.slice( -2 ) }`;\n    } )\n    .join( '' )\n);\n\n\n\nexport function parseJwt( jwt: string ): ParsedJWT {\n  try {\n    const parts = jwt.split( '.' )\n    if ( parts.length !== 3 ){\n      throw new Error( 'Wrong JWT format' )\n    }\n    return {\n      header:  JSON.parse( urlDecodeB64( parts[0] ) ),\n      payload: JSON.parse( urlDecodeB64( parts[1] ) )\n    }\n  } catch ( e ){\n    throw new InvalidJWTError( 'Failed to parse jwt' )\n  }\n}\n\nexport function validateIdToken( id_token: string, nonce: string, options: IPlusAuthClientOptions ) {\n  if ( !nonce ) {\n    throw new OIDCClientError( 'No nonce on state' );\n  }\n\n  try {\n    const jwt = parseJwt( id_token );\n\n    if ( nonce !== jwt.payload.nonce ) {\n      throw new Error( `Invalid nonce in id_token: ${ jwt.payload.nonce }` );\n    }\n\n    validateJwt( id_token, options, true )\n\n    // @ts-ignore\n    if ( !jwt.payload['sub'] ) {\n      throw new Error( 'No Subject (sub) present in id_token' );\n    }\n\n    return jwt.payload;\n  } catch ( e ){\n    throw new InvalidIdTokenError( e.message )\n  }\n}\n\nexport function validateJwt( jwt: string, options: JWTValidationOptions, isIdToken = false ) {\n  // eslint-disable-next-line prefer-const\n  let { clockSkew, currentTimeInMillis, issuer, audience, client_id } = options\n  if ( !clockSkew ){\n    clockSkew = 0\n  }\n  const now = ( currentTimeInMillis && currentTimeInMillis() || Date.now() ) / 1000;\n\n  const payload = parseJwt( jwt ).payload;\n\n  if ( !payload.iss ) {\n    throw new InvalidJWTError( 'Issuer (iss) was not provided' );\n  }\n  if ( payload.iss !== issuer ) {\n    throw new InvalidJWTError( `Invalid Issuer (iss) in token: ${ payload.iss }` );\n  }\n\n  if ( !payload.aud ) {\n    throw new InvalidJWTError( 'Audience (aud) was not provided' );\n  }\n\n  // Audience must be equal to client_id in id_token\n  // https://openid.net/specs/openid-connect-core-1_0.html#IDToken\n  if ( Array.isArray( payload.aud ) ?\n    payload.aud.indexOf( isIdToken ? client_id : audience || client_id ) == -1 :\n    payload.aud !== ( isIdToken ? client_id : audience || client_id )\n  ) {\n    throw new InvalidJWTError( `Invalid Audience (aud) in token: ${ payload.aud }` );\n  }\n\n  if ( payload.azp && payload.azp !== client_id ) {\n    throw new InvalidJWTError( `Invalid Authorized Party (azp) in token: ${ payload.azp }` );\n  }\n\n  const lowerNow = Math.ceil( now + clockSkew );\n  const upperNow = Math.floor( now - clockSkew );\n\n  if ( !payload.iat ) {\n    throw new InvalidJWTError( 'Issued At (iat) was not provided' );\n  }\n\n  if ( lowerNow < Number( payload.iat ) ) {\n    throw new InvalidJWTError( `Issued At (iat) is in the future: ${ payload.iat }` );\n  }\n\n  if ( payload.nbf && lowerNow < Number( payload.nbf ) ) {\n    throw new InvalidJWTError( `Not Before time (nbf) is in the future: ${ payload.nbf }` );\n  }\n\n  if ( !payload.exp ) {\n    throw new InvalidJWTError( 'Expiration Time (exp) was not provided' );\n  }\n  if ( Number( payload.exp ) < upperNow ) {\n    throw new InvalidJWTError( `Expiration Time (exp) is in the past: ${ payload.exp }` );\n  }\n\n  return payload;\n}\n\n// Retrieved from https://www.iana.org/assignments/jwt/jwt.xhtml\nexport const nonUserClaims = [\n  'iss',\n  // 'sub',\n  'aud',\n  'exp',\n  'nbf',\n  'iat',\n  'jti',\n  'azp',\n  'nonce',\n  'auth_time',\n  'at_hash',\n  'c_hash',\n  'acr',\n  'amr',\n  'sub_jwk',\n  'cnf',\n  'sip_from_tag',\n  'sip_date',\n  'sip_callid',\n  'sip_cseq_num',\n  'sip_via_branch',\n  'orig',\n  'dest',\n  'mky',\n  'events',\n  'toe',\n  'txn',\n  'rph',\n  'sid',\n  'vot',\n  'vtm',\n  'attest',\n  'origid',\n  'act',\n  'scope',\n  'client_id',\n  'may_act',\n  'jcard',\n  'at_use_nbr',\n] as const\n","import type { SessionChecker, SessionCheckerOptions } from '../interfaces';\n\nimport { createHiddenFrame } from './iframe';\n\nconst DEFAULT_CHECK_INTERVAL = 2000\n\nexport function createSessionCheckerFrame( options: SessionCheckerOptions ): SessionChecker{\n  const { url, callback, client_id, checkInterval } = options\n  let internalSessionState: string | null;\n  const idx = url.indexOf( '/', url.indexOf( '//' ) + 2 );\n  const frameOrigin = url.substr( 0, idx );\n\n  const frame = createHiddenFrame()\n\n  let timer: any\n\n  const load = () => {\n    return new Promise( resolve => {\n      window.document.body.appendChild( frame );\n      window.addEventListener( 'message', iframeEventHandler, false );\n      frame.onload = () => {\n        resolve( null )\n      }\n    } )\n  }\n\n  const start = ( sessionState: string ) => {\n    load().then( () => {\n      if ( sessionState && internalSessionState !== sessionState ) {\n        stop();\n        internalSessionState = sessionState;\n        const send = () => {\n          frame.contentWindow!.postMessage( `${ client_id } ${ internalSessionState }`, frameOrigin );\n        };\n        send();\n        timer = window.setInterval( send, checkInterval || DEFAULT_CHECK_INTERVAL );\n      }\n    } )\n  }\n\n  const stop = () => {\n    internalSessionState = null;\n    if ( timer ) {\n      window.clearInterval( timer );\n      timer = null;\n    }\n  }\n\n  const iframeEventHandler = ( e: MessageEvent ) => {\n    if ( e.origin === frameOrigin && e.source === frame.contentWindow ) {\n      if ( e.data === 'error' ) {\n        stop();\n        callback( e.data );\n      } else if ( e.data === 'changed' ) {\n        stop();\n        callback();\n      }\n    }\n  }\n\n  frame.setAttribute( 'src', url );\n\n  return {\n    stop,\n    start\n  }\n}\n","type RequiredAndNotNull<T> = {\n  [P in keyof T]-?: Exclude<T[P], undefined>\n}\n\n/**\n * not suitable for every object but it is enough for this library\n * @param object\n */\nexport function cleanUndefined<T extends Record<string, any>>( object: T ) {\n  if ( !object || typeof object !== 'object' ) {\n    return object\n  }\n  return JSON.parse( JSON.stringify( object ) ) as RequiredAndNotNull<T>\n}\n\nfunction merge( previousValue: any, currentValue: any ) {\n  for ( const p in currentValue ) {\n    if ( currentValue[p] !== undefined ) {\n      if ( typeof currentValue[p] === 'object' && currentValue[p].constructor.name === 'Object' ) {\n        previousValue[p] = merge( previousValue[p] || {}, currentValue[p] );\n      } else {\n        previousValue[p] = currentValue[p];\n      }\n    }\n  }\n  return previousValue\n}\nexport function mergeObjects<T extends object, U>( obj1: T, obj2: U ): RequiredAndNotNull<T & U>;\nexport function mergeObjects<T extends object, U, K>( obj1: T, obj2: U, obj3: K ): RequiredAndNotNull<T & U & K>;\nexport function mergeObjects( ...objects: any[] ) {\n  return objects.reduce( ( previousValue, currentValue ) => {\n    return merge( previousValue || {}, currentValue )\n  }, {} ) as any\n}\n","export const isResponseType = ( type: string, response_type?: string ) =>\n  response_type && response_type.split( /\\s+/g ).filter( rt => rt === type ).length > 0\n\nexport const isScopeIncluded = ( scope: string, scopes?: string ) =>\n  scopes && scopes.split( ' ' ).indexOf( scope ) > -1\n","import { InteractionCancelled, OIDCClientError } from '../errors';\nimport type { PopupOptions } from '../interfaces';\n\nconst openPopup = ( url: string, width = 400, height = 600 ) => {\n  const left = window.screenX + ( window.innerWidth - width ) / 2;\n  const top = window.screenY + ( window.innerHeight - height ) / 2;\n\n  return window.open(\n    url,\n    'oidc-login-popup',\n    `left=${ left },top=${ top },width=${ width },height=${ height },resizable,scrollbars=yes,status=1`\n  );\n};\n\nexport function runPopup( url: string, options: PopupOptions ) {\n  let popup = options.popup;\n\n  if ( popup ) {\n    popup.location.href = url;\n  } else {\n    popup = openPopup( url );\n  }\n\n  if ( !popup ) {\n    /* istanbul ignore next */\n    throw new Error( 'Could not open popup' );\n  }\n\n  let timeoutId: any ;\n  let closeId: any ;\n\n  return new Promise<{ response: any, state: string }>( ( resolve, reject ) => {\n    function clearHandlers(){\n      clearInterval( closeId );\n      clearTimeout( timeoutId )\n      window.removeEventListener( 'message', messageListener )\n    }\n\n    timeoutId = setTimeout( () => {\n      clearHandlers()\n      reject( new OIDCClientError( 'Timed out' ) );\n    }, options.timeout || 60 * 1000 )\n\n    closeId = setInterval( function () {\n      if ( popup!.closed ) {\n        clearHandlers()\n        reject( new InteractionCancelled( 'user closed popup' ) )\n      }\n    }, 300 );\n\n    window.addEventListener( 'message', messageListener );\n\n    function messageListener( e: MessageEvent ){\n      if ( !e.data || e.data.type !== 'authorization_response' ) return;\n      clearHandlers();\n      popup!.close();\n      const data = e.data.response || e.data\n      data.error ? reject( new OIDCClientError( data.error, data.error_description ) )\n        : resolve( e.data );\n    }\n  } );\n}\n","/*\nJitbit TabUtils - helper for multiple browser tabs. version 1.0\nhttps://github.com/jitbit/TabUtils\n- executing \"interlocked\" function call - only once per multiple tabs\n- broadcasting a message to all tabs (including the current one) with some message \"data\"\n- handling a broadcasted message\nMIT license: https://github.com/jitbit/TabUtils/blob/master/LICENSE\n*/\n\nconst currentTabId = `${ performance.now() }:${ Math.random() * 1000000000 | 0 }`;\nconst handlers: Record<string, any> = {};\n\nexport class TabUtils {\n  keyPrefix: string;\n\n  constructor( kid: string ) {\n    this.keyPrefix = kid;\n  }\n\n  //runs code only once in multiple tabs\n  //the lock holds for 4 seconds (in case the function is async and returns right away, for example, an ajax call intiated)\n  //then it is cleared\n  CallOnce( lockname: string, fn: () => void, timeout = 3000 ): void{\n    if ( !lockname ) throw 'empty lockname';\n\n    if ( !window.localStorage ) { //no local storage. old browser. screw it, just run the function\n      fn();\n      return;\n    }\n\n    const localStorageKey = this.keyPrefix + lockname;\n\n    localStorage.setItem( localStorageKey, currentTabId );\n    //re-read after a delay (after all tabs have saved their tabIDs into ls)\n    setTimeout( () => {\n      if ( localStorage.getItem( localStorageKey ) == currentTabId )\n        fn();\n    }, 150 );\n\n    //cleanup - release the lock after 3 seconds and on window unload (just in case user closed the window while the lock is still held)\n    setTimeout( function () { localStorage.removeItem( localStorageKey ); }, timeout );\n  }\n\n  BroadcastMessageToAllTabs( messageId: string, eventData: any ): void{\n    //now we also need to manually execute handler in the current tab too, because current tab does not get 'storage' events\n    try { handlers[messageId]( eventData ); } //\"try\" in case handler not found\n    catch ( x ) { }\n\n    if ( !window.localStorage ) return; //no local storage. old browser\n\n    const data = {\n      data:      eventData,\n      timeStamp: new Date().getTime()\n    }; //add timestamp because overwriting same data does not trigger the event\n\n    //this triggers 'storage' event for all other tabs except the current tab\n    localStorage.setItem( `${ this.keyPrefix }event${ messageId }`, JSON.stringify( data ) );\n\n    //cleanup\n    setTimeout( () => { localStorage.removeItem( `${ this.keyPrefix }event${ messageId }` ); }, 3000 );\n  }\n\n  OnBroadcastMessage( messageId: string, fn: ( data: any ) => void ): void{\n    handlers[messageId] = fn;\n    if ( !window.localStorage ) return; //no local storage. old browser\n\n    //first register a handler for \"storage\" event that we trigger above\n    window.addEventListener( 'storage', ( ev ) => {\n      if ( ev.key != `${ this.keyPrefix }event${ messageId }` ) return; // ignore other keys\n      if ( !ev.newValue ) return; //called by cleanup?\n      const messageData = JSON.parse( ev.newValue );\n      fn( messageData.data );\n    } );\n  }\n}\n","import type { EventTypes } from './constants';\nimport { Events } from './constants';\n\nimport {\n  AuthenticationError, InvalidIdTokenError,\n  OIDCClientError\n} from './errors';\n\nimport type {\n  StateStore } from './helpers';\nimport {\n  EventEmitter,\n  InMemoryStateStore,\n  LocalStorageStateStore\n} from './helpers';\n\n\n\nimport { Timer } from './helpers/timer';\nimport type { AuthRecord,\n  AuthRequestOptions, IEndpointConfiguration,\n  IPlusAuthClientOptions,\n  LogoutRequestOptions, PopupOptions, RevokeOptions, SessionChecker,\n  SessionMonitorOptions, StateRecord,\n  TokenRequestOption, TokenResponse, TokenType\n} from './interfaces';\n\nimport type {\n  RequestOptions } from './utils';\nimport {\n  request,\n  runIframe,\n  buildEncodedQueryString,\n  parseQueryUrl,\n  validateIdToken,\n  createSessionCheckerFrame,\n  nonUserClaims, generateRandom, deriveChallenge, isValidIssuer,\n} from './utils';\nimport { cleanUndefined, mergeObjects } from './utils/object';\n\nimport { isResponseType, isScopeIncluded } from './utils/oidc';\nimport { runPopup } from './utils/popup';\nimport { TabUtils } from './utils/tab_utils';\n\n/**\n * `OIDCClient` provides methods for interacting with OIDC/OAuth2 authorization server. Those methods are signing a\n * user in, signing out, managing the user's claims, checking session and managing tokens returned from the\n * OIDC/OAuth2 provider.\n *\n */\nexport class OIDCClient extends EventEmitter<EventTypes>{\n  options: IPlusAuthClientOptions\n\n  user?: any;\n\n  scopes?: string[];\n\n  accessToken?: string;\n\n  refreshToken?: string;\n\n  idToken?: string;\n\n  idTokenRaw?: string;\n\n  issuer_metadata?: Record<string, any>;\n\n  private readonly http: ( options: RequestOptions ) => Promise<any> | never;\n\n  private synchronizer: TabUtils;\n\n  private stateStore: StateStore<StateRecord>\n\n  private authStore: StateStore<AuthRecord>;\n\n  private sessionCheckerFrame?: SessionChecker\n\n  private _accessTokenExpireTimer?: Timer;\n\n  private initialized!: boolean;\n\n  private __initializePromise!: Promise<any> | undefined;\n\n  constructor( options: IPlusAuthClientOptions ) {\n    super()\n    if ( !isValidIssuer( options.issuer ) ){\n      throw new OIDCClientError( '\"issuer\" must be a valid uri.' )\n    }\n\n    this.synchronizer = new TabUtils( btoa( options.issuer ) )\n\n    this.options = mergeObjects( {\n      secondsToRefreshAccessTokenBeforeExp: 60,\n      autoSilentRenew:                      true,\n      checkSession:                         true,\n    }, options, {\n      // remove last slash for consistency across the lib\n      issuer: options.issuer.endsWith( '/' ) ? options.issuer.slice( 0, -1 ) : options.issuer\n    } )\n\n    this.http = this.options.httpClient || request\n    this.stateStore = this.options.stateStore || new LocalStorageStateStore<StateRecord>( 'pa_oidc.state.' )\n    this.authStore = this.options.authStore || new InMemoryStateStore<AuthRecord>()\n\n\n    if ( this.options.autoSilentRenew ){\n      this._accessTokenExpireTimer = new Timer()\n    }\n\n    this.on( Events.USER_LOGOUT, async ()=>{\n      this.user = undefined\n      this.scopes = undefined;\n      this.accessToken = undefined\n      this.idToken = undefined\n      this.refreshToken = undefined\n      await this.authStore.clear()\n    } )\n\n    this.synchronizer.OnBroadcastMessage( Events.USER_LOGIN, this.onUserLogin.bind( this ) )\n  }\n\n  /**\n   * Initialize the library with this method. It resolves issuer configuration, jwks keys which are necessary for\n   * validating tokens returned from provider and checking if a user is already authenticated in provider.\n   *\n   * @param checkLogin Make this `false` if you don't want to check user authorization status in provider while\n   * initializing. Defaults to `true`\n   */\n  async initialize( checkLogin = true ): Promise<OIDCClient> | never {\n    if ( this.initialized ){\n      return this\n    }\n\n    if ( this.__initializePromise ){\n      return this.__initializePromise\n    } else {\n      this.__initializePromise = new Promise( async ( resolve, reject ) => {\n        try {\n          if ( this.stateStore.init ){\n            await this.stateStore.init()\n          }\n          if ( this.authStore.init ){\n            await this.authStore.init()\n          }\n\n          if ( !this.options.endpoints || Object.keys( this.options.endpoints ).length === 0 ){\n            await this.fetchFromIssuer()\n          }\n          this.initialized = true\n\n          try {\n            if ( checkLogin ){\n              if ( !window?.frameElement ){\n                await this.silentLogin()\n              }\n            }\n          } catch ( e ) {\n            this.emit( Events.SILENT_RENEW_ERROR, e )\n            await this.authStore.clear()\n          }\n          resolve( this )\n        } catch ( e ) {\n          if ( e instanceof OIDCClientError ){\n            reject( e )\n          } else {\n            reject( new OIDCClientError( e.message ) )\n          }\n        } finally {\n          this.__initializePromise = undefined\n        }\n      } )\n    }\n\n    return this.__initializePromise\n  }\n\n  /**\n   * Redirect to provider's authorization endpoint using provided parameters. You can override any parameter defined\n   * in `OIDCClient`. If you don't provide `state`, `nonce` or `code_verifier` they will be generated automatically\n   * in a random and secure way.\n   *\n   * @param options\n   * @param localState\n   */\n  async login( options: Partial<AuthRequestOptions> = {}, localState: Record<string, any> = {} ){\n    window.location.assign( await this.createAuthRequest( options, localState ) )\n  }\n\n  /**\n   * Open a popup with the provider's authorization endpoint using provided parameters. You can override any\n   * parameter defined in `OIDCClient`. If you don't provide `state`, `nonce` or `code_verifier` they will be\n   * generated automatically in a random and secure way. You can also override popup options.\n   *\n   * NOTE: Most browsers block popups if they are not happened as a result of user actions. In order to display\n   * login popup you must call this method in an event handler listening for a user action like button click.\n   *\n   * @param options\n   * @param popupOptions\n   */\n  async loginWithPopup( options: Partial<AuthRequestOptions> = {}, popupOptions: PopupOptions = {} ){\n    const url = await this.createAuthRequest( {\n      response_mode: 'fragment',\n      ...options,\n      display:       'popup',\n      request_type:  'p'\n    } )\n    const { response, state } = await runPopup( url, popupOptions )\n    const { authParams, localState } = !state || typeof state === 'string' ?\n      await this.loadState( state || response.state )\n      : state;\n    const tokenResult = await this.handleAuthResponse( response, authParams, localState )\n    const authObject = await this.handleTokenResult(\n      tokenResult,\n      authParams,\n      mergeObjects( this.options, authParams )\n    )\n    authObject.session_state= response.session_state;\n    this.synchronizer.BroadcastMessageToAllTabs( Events.USER_LOGIN, authObject )\n    return localState\n  }\n\n  /**\n   * After a user successfully authorizes an application, the authorization server will redirect the user back to\n   * the application with either an authorization code or access token in the URL. In the callback page you should\n   * call this method.\n   *\n   * @param url Full url which contains authorization request result parameters. Defaults to `window.location.href`\n   */\n  async loginCallback( url: string= window?.location?.href ){\n    if ( !url ){\n      return Promise.reject( new OIDCClientError( 'Url must be passed to handle login redirect' ) )\n    }\n    let parsedUrl: URL;\n    try {\n      parsedUrl = new URL( url )\n    } catch ( e ){\n      return Promise.reject( new OIDCClientError( `Invalid callback url passed: \"${ url }\"` ) )\n    }\n\n    const responseParams = parseQueryUrl( parsedUrl.search || parsedUrl.hash )\n    const rawStoredState = await this.loadState( responseParams.state )\n    const { authParams, localState, request_type } = rawStoredState\n    url = url || window.location.href;\n    switch ( request_type ) {\n      case 's':\n        if ( window?.frameElement ) {\n          if ( url ) {\n            window.parent.postMessage( {\n              type:     'authorization_response',\n              response: responseParams,\n              state:    rawStoredState\n            }, `${ location.protocol }//${ location.host }` );\n          }\n        }\n        return\n      case 'p':\n        if ( window.opener && url ){\n          window.opener.postMessage( {\n            type:     'authorization_response',\n            response: responseParams,\n            state:    rawStoredState\n          }, `${ location.protocol }//${ location.host }` );\n        }\n        return\n      default:\n        if ( responseParams.error ){\n          return Promise.reject( new AuthenticationError( responseParams.error, responseParams.error_description ) )\n        }\n        const tokenResult = await this.handleAuthResponse( responseParams, authParams, localState )\n        const authObject = await this.handleTokenResult(\n          tokenResult,\n          authParams,\n          mergeObjects( this.options, authParams )\n        )\n        authObject.session_state= responseParams.session_state;\n        this.synchronizer.BroadcastMessageToAllTabs( Events.USER_LOGIN, authObject )\n        return localState\n    }\n  }\n\n  /**\n   * Redirect to provider's `end_session_endpoint` with provided parameters. After logout provider will redirect to\n   * provided `post_logout_redirect_uri` if it provided.\n   * @param options\n   */\n  async logout( options: LogoutRequestOptions = {} ){\n    if ( !options.localOnly ) {\n      const storedAuth = await this.authStore.get( 'auth' )\n      const id_token_hint = options.id_token_hint || storedAuth?.id_token_raw\n      window.location.assign( await this.createLogoutRequest( {\n        ...options,\n        id_token_hint\n      } ) )\n    }\n    await this.authStore.clear()\n  }\n\n  /**\n   * OAuth2 token revocation implementation method. See more at [tools.ietf.org/html/rfc7009](https://tools.ietf.org/html/rfc7009)\n   * @param token Token to be revoked\n   * @param type Passed token's type. It will be used to provide `token_type_hint` parameter.\n   * @param options If necessary override options passed to `OIDCClient` by defining them here.\n   */\n  async revokeToken( token: string, type: TokenType = 'access_token', options: RevokeOptions = {} ){\n    if ( !this.options.endpoints!.revocation_endpoint ){\n      return Promise.reject( new OIDCClientError( '\"revocation_endpoint\" doesn\\'t exist' ) )\n    }\n    const finalOptions = {\n      client_id:       options.client_id || this.options.client_id,\n      client_secret:   options.client_secret || this.options.client_secret,\n      token_type_hint: type,\n      token:           token\n    }\n\n    return this.http( {\n      method:      'POST',\n      requestType: 'form',\n      url:         this.options.endpoints!.revocation_endpoint,\n      body:        finalOptions\n    } )\n  }\n\n  /**\n   * Login without having an interaction. If refresh tokens are used and there is a stored refresh token it will\n   * exchange refresh token to receive new access token. If not it silently makes a request the provider's\n   * authorization endpoint using provided parameters. You can override any parameter defined in `OIDCClient`. If\n   * you don't provide `state`, `nonce` or `code_verifier` they will be generated automatically in a random and\n   * secure way.\n   *\n   * @param options\n   * @param localState\n   */\n  async silentLogin( options: AuthRequestOptions = {}, localState: Record<string, any> = {} ){\n    await this.initialize( false )\n    let tokenResult: any;\n    let finalState: any = {}\n\n    const storedAuth = await this.authStore.get( 'auth' ) || {}\n\n    const finalOptions = mergeObjects( {\n      response_mode: 'query',\n      display:       'page',\n      prompt:        'none'\n    }, this.options, options )\n\n    if ( finalOptions.silent_redirect_uri ){\n      finalOptions.redirect_uri = finalOptions.silent_redirect_uri\n    }\n\n    if ( this.options.useRefreshToken && storedAuth?.refresh_token ){\n      finalState.authParams = mergeObjects( storedAuth?.authParams || {}, finalState.authParams || {} )\n      tokenResult = await this.exchangeRefreshToken( {\n        ...finalOptions,\n        refresh_token: storedAuth.refresh_token,\n      } )\n    } else {\n      const authUrl = await this.createAuthRequest( {\n        ...finalOptions,\n        request_type: 's'\n      }, localState )\n\n      const { response, state } = await runIframe( authUrl, {\n        timeout:     finalOptions.silentRequestTimeout,\n        eventOrigin: window.location.origin\n      } )\n      tokenResult = await this.handleAuthResponse( response, finalOptions, localState )\n      storedAuth.session_state = response.session_state;\n      finalState = state\n    }\n\n    const authObject = await this.handleTokenResult( tokenResult, finalState.authParams, finalOptions )\n    authObject.session_state = storedAuth.session_state\n    this.synchronizer.BroadcastMessageToAllTabs( Events.USER_LOGIN, authObject )\n    return finalState.localState\n  }\n\n  /**\n   * Retrieve logged in user's access token if it exists.\n   */\n  async getAccessToken(){\n    return ( await this.authStore.get( 'auth' ) )?.access_token\n  }\n\n\n  /**\n   * Retrieve logged in user's refresh token if it exists.\n   */\n  async getRefreshToken(){\n    return ( await this.authStore.get( 'auth' ) )?.refresh_token\n  }\n\n  /**\n   * Retrieve logged in user's parsed id token if it exists.\n   */\n  async getIdToken(){\n    return ( await this.authStore.get( 'auth' ) )?.id_token\n  }\n\n  /**\n   * Retrieve access token's expiration.\n   */\n  async getExpiresAt(){\n    return ( await this.authStore.get( 'auth' ) )?.expires_at\n  }\n\n  /**\n   * Retrieve logged in user's id token in raw format if it exists.\n   */\n  async getIdTokenRaw(){\n    return ( await this.authStore.get( 'auth' ) )?.id_token_raw\n  }\n\n\n  /**\n   * Retrieve logged in user's scopes if it exists.\n   */\n  async getScopes(){\n    return ( await this.authStore.get( 'auth' ) )?.scope?.split( ' ' )\n  }\n\n\n  /**\n   * Retrieve logged in user's profile.\n   */\n  async getUser(){\n    return ( await this.authStore.get( 'auth' ) )?.user\n  }\n\n  /**\n   * If there is a user stored locally return true. Otherwise it will make a silentLogin to check if End-User is\n   * logged in provider.\n   *\n   * @param localOnly Don't check provider\n   */\n  async isLoggedIn( localOnly = false ){\n    const existsOnLocal = !!await this.getUser()\n    if ( !existsOnLocal && !localOnly ){\n      try {\n        await this.silentLogin()\n        return true\n      } catch ( e ){\n        return false\n      }\n    }\n    return existsOnLocal\n  }\n\n  /**\n   * Create authorization request with provided options.\n   *\n   * @param options\n   * @param localState\n   * @private\n   */\n  private async createAuthRequest( options: Partial<AuthRequestOptions> = {},\n    localState: Record<string, any> = {} ): Promise<string>{\n    if ( !this.options.endpoints?.authorization_endpoint ){\n      await this.initialize( false )\n    }\n    // TODO: deep merge for extra params\n    const finalOptions = Object.assign( {}, this.options, options )\n    localState.code_verifier = generateRandom( 72 )\n\n    const authParams = {\n      client_id:          finalOptions.client_id,\n      state:              generateRandom( 10 ),\n      scope:              finalOptions.scope,\n      audience:           finalOptions.audience,\n      redirect_uri:       finalOptions.redirect_uri,\n      response_mode:      finalOptions.response_mode,\n      response_type:      finalOptions.response_type || 'code',\n      ui_locales:         finalOptions.ui_locales,\n      prompt:             finalOptions.prompt,\n      display:            finalOptions.display,\n      claims:             finalOptions.claims,\n      claims_locales:     finalOptions.claims_locales,\n      acr_values:         finalOptions.acr_values,\n      registration:       finalOptions.registration,\n      login_hint:         finalOptions.login_hint,\n      id_token_hint:      finalOptions.id_token_hint,\n      web_message_uri:    finalOptions.web_message_uri,\n      web_message_target: finalOptions.web_message_target,\n      ...finalOptions.extraParams && finalOptions.extraParams\n    } as AuthRequestOptions;\n\n    if ( isResponseType( 'id_token', authParams.response_type ) ||\n      isScopeIncluded( 'openid', authParams.scope ) ){\n      authParams.nonce = generateRandom( 10 )\n    }\n\n    if ( isResponseType( 'code', authParams.response_type ) ){\n      authParams.code_challenge= await deriveChallenge( localState.code_verifier )\n      authParams.code_challenge_method= finalOptions.code_challenge_method || 'S256'\n    }\n\n    const now = this.options.currentTimeInMillis && this.options.currentTimeInMillis() || Date.now()\n    const fragment = finalOptions.fragment ? `#${ finalOptions.fragment }` : '';\n    const authParamsString = buildEncodedQueryString( authParams )\n    const url = `${ this.options.endpoints!.authorization_endpoint }${ authParamsString }${ fragment }`\n\n    // clear 1 day old state entries\n    this.stateStore.clear( now - 86400000 )\n\n\n    await this.stateStore.set( authParams.state!, cleanUndefined( {\n      created_at:   now,\n      authParams,\n      localState,\n      request_type: finalOptions.request_type\n    } ) )\n    return url\n  }\n\n  /**\n   * Create a logout request with given options\n   *\n   * @param options\n   * @private\n   */\n  private async createLogoutRequest( options: LogoutRequestOptions = {} ){\n    if ( !this.options.endpoints?.end_session_endpoint ){\n      await this.fetchFromIssuer();\n    }\n    const finalOptions = mergeObjects( this.options, options )\n    const logoutParams = {\n      id_token_hint:            finalOptions.id_token_hint,\n      post_logout_redirect_uri: finalOptions.post_logout_redirect_uri,\n      ...finalOptions.extraLogoutParams || {}\n    }\n    return `${ this.options.endpoints!.end_session_endpoint }${ buildEncodedQueryString( logoutParams ) }`\n  }\n\n  /**\n   * Exchange authorization code retrieved from auth request result.\n   * @param options\n   * @private\n   */\n  private async exchangeAuthorizationCode( options: TokenRequestOption ){\n    if ( !this.options.endpoints?.token_endpoint ){\n      await this.fetchFromIssuer();\n    }\n    const finalOptions = mergeObjects( this.options, options )\n    const { extraTokenHeaders, extraTokenParams, ...rest } = finalOptions\n    const mergedOptions = {\n      ...rest,\n      ...extraTokenParams || {},\n      grant_type: 'authorization_code',\n    }\n\n    for ( const req of ['code', 'redirect_uri', 'code_verifier', 'client_id'] as const ){\n      if ( !mergedOptions[req] ){\n        return Promise.reject( new Error( `\"${ req }\" is required` ) );\n      }\n    }\n\n    return this.http( {\n      url:         `${ this.options.endpoints!.token_endpoint }`,\n      method:      'POST',\n      requestType: 'form',\n      body:        mergedOptions as any,\n      headers:     extraTokenHeaders\n    } )\n  }\n\n  /**\n   * Exchange refresh token with given options\n   * @param options\n   * @private\n   */\n  private async exchangeRefreshToken( options: Partial<TokenRequestOption> ) {\n    if ( !this.options.endpoints?.token_endpoint ){\n      await this.fetchFromIssuer();\n    }\n    const { extraTokenHeaders, extraTokenParams, ...rest } = options\n    const mergedOptions = {\n      grant_type:    'refresh_token',\n      client_id:     this.options.client_id,\n      client_secret: this.options.client_secret,\n      ...rest,\n      ...extraTokenParams || {}\n    }\n\n    for ( const req of ['refresh_token', 'client_id'] as const ){\n      if ( !mergedOptions[req] ){\n        return Promise.reject( new Error( `\"${ req }\" is required` ) );\n      }\n    }\n\n    return this.http( {\n      url:         `${ this.options.endpoints!.token_endpoint }`,\n      method:      'POST',\n      requestType: 'form',\n      body:        mergedOptions as any,\n      headers:     extraTokenHeaders\n    } );\n  }\n\n  /**\n   * Fetch OIDC configuration from the issuer.\n   */\n  private async fetchFromIssuer(): Promise<Record<string, any>>{\n    try {\n      const requestUrl = `${ this.options.issuer }/.well-known/openid-configuration`\n      const response = await this.http( {\n        url:         requestUrl,\n        method:      'GET',\n        requestType: 'json'\n      } )\n      this.issuer_metadata = response as Record<string, any>\n      const endpoints = {} as any\n      for ( const prop of Object.keys( this.issuer_metadata ) ) {\n        if ( prop.endsWith( '_endpoint' ) || prop.indexOf( '_session' ) > -1 || prop.indexOf( '_uri' ) > -1 ) {\n          endpoints[prop as keyof IEndpointConfiguration] = this.issuer_metadata[prop];\n        }\n      }\n      this.options.endpoints = endpoints\n      return this.issuer_metadata;\n    } catch ( e ) {\n      throw new OIDCClientError( 'Loading metadata failed', e.message )\n    }\n  }\n\n  /**\n   * Handle auth request result. If there is `code` exchange it.\n   * @param response\n   * @param finalOptions\n   * @param localState\n   * @private\n   */\n  private async handleAuthResponse(\n    response: any,\n    finalOptions: AuthRequestOptions,\n    localState: Record<string, any> = {}\n  ){\n    if ( response.code ){\n      return this.exchangeAuthorizationCode( {\n        redirect_uri:  finalOptions.redirect_uri,\n        client_id:     finalOptions.client_id,\n        code_verifier: localState.code_verifier,\n        grant_type:    'authorization_code',\n        code:          response.code,\n      } );\n    } else {\n      return response\n    }\n  }\n\n  /**\n   * Handle OAuth2 auth request result\n   * @param tokenResult\n   * @param authParams\n   * @param finalOptions\n   * @private\n   */\n  private async handleTokenResult( tokenResult: TokenResponse, authParams: AuthRequestOptions,\n    finalOptions: IPlusAuthClientOptions ){\n    await this.initialize( false )\n    let user: any = {}\n    if ( tokenResult.error ){\n      throw new AuthenticationError( tokenResult.error, tokenResult.error_description )\n    }\n    let parsedIDToken: any;\n    if ( tokenResult.id_token ){\n      parsedIDToken = await validateIdToken( tokenResult.id_token, authParams.nonce!, finalOptions )\n      if ( finalOptions.idTokenValidator && !await finalOptions.idTokenValidator( tokenResult.id_token ) ){\n        return Promise.reject( new InvalidIdTokenError( 'Id Token validation failed' ) )\n      }\n      Object.keys( parsedIDToken ).forEach( key => {\n        if ( !nonUserClaims.includes( key as any ) ){\n          user[key] = parsedIDToken[key]\n        }\n      } )\n    }\n\n    if ( tokenResult.access_token ) {\n      if ( finalOptions.requestUserInfo && this.options.endpoints?.userinfo_endpoint ) {\n        const userInfoResult = await this.fetchUserInfo( tokenResult.access_token )\n        if ( !userInfoResult.error ){\n          user = { ...user, ...userInfoResult }\n        }\n      }\n    }\n\n    return {\n      authParams,\n      user,\n      ...tokenResult,\n      id_token:     parsedIDToken,\n      id_token_raw: tokenResult.id_token,\n      scope:        tokenResult.scope || authParams.scope,\n    }\n  }\n\n  /**\n   * Load stored state\n   *\n   * @param state\n   * @private\n   */\n  private async loadState( state: string ){\n    const rawStoredState = await this.stateStore.get( state )\n    if ( !rawStoredState ){\n      return Promise.reject( new AuthenticationError( `State not found: ${ state }` ) )\n    } else {\n      await this.stateStore.del( state )\n    }\n    return rawStoredState\n  }\n\n  /**\n   * Load user info by making request to providers `userinfo_endpoint`\n   *\n   * @param accessToken\n   * @private\n   */\n  private async fetchUserInfo( accessToken: string ){\n    return this.http( {\n      method:      'GET',\n      url:         `${ this.options.endpoints!.userinfo_endpoint }`,\n      requestType: 'json',\n      headers:     {\n        'Authorization': `Bearer ${ accessToken }`\n      }\n    } )\n  }\n\n  /**\n   * Start monitoring End-User's session if the OIDC provider supports session management. See more at [OIDC Session\n   * Management](https://openid.net/specs/openid-connect-session-1_0.html)\n   *\n   * @param sub End-User's id to for monitoring session\n   * @param session_state string that represents the End-User's login state at the OP\n   */\n  private monitorSession( { sub, session_state }: SessionMonitorOptions ){\n    const { client_id, endpoints } = this.options\n\n    if ( !endpoints?.check_session_iframe ){\n      console.warn( '\"check_session_iframe\" endpoint missing or session management is not supported by provider' )\n      return\n    }\n    if ( !this.sessionCheckerFrame ){\n      const sessionCheckCallback = async ( err: any )=>{\n        if ( err ){\n          this.emit( Events.USER_LOGOUT )\n        } else {\n          this.emit( Events.SESSION_CHANGE )\n          try {\n            await this.silentLogin( {}, {} )\n            const storedAuth = await this.authStore.get( 'auth' )\n            if ( storedAuth ){\n              if ( storedAuth.user?.sub === sub && storedAuth.session_state ){\n                this.sessionCheckerFrame!.start( storedAuth.session_state )\n              }\n            } else {\n              this.emit( Events.USER_LOGOUT, null )\n            }\n          } catch ( e ) {\n            this.emit( Events.USER_LOGOUT )\n            return\n          }\n        }\n      }\n\n      this.sessionCheckerFrame = createSessionCheckerFrame( {\n        url:           endpoints.check_session_iframe,\n        client_id:     client_id,\n        callback:      sessionCheckCallback,\n        checkInterval: this.options.checkSessionInterval,\n      } )\n    }\n\n    this.sessionCheckerFrame.start( session_state )\n  }\n\n  private async onUserLogin( authObj: any ){\n    const { expires_in, user, scope, access_token, id_token, refresh_token, session_state, id_token_raw } = authObj\n    await this.authStore.set( 'auth', authObj )\n\n    this.user = user\n    this.scopes = scope?.split( ' ' );\n    this.accessToken = access_token\n    this.idToken = id_token\n    this.idTokenRaw = id_token_raw\n    this.refreshToken = refresh_token\n\n    this.emit( Events.USER_LOGIN, authObj )\n    if ( !window?.frameElement ) {\n      if ( this.options.checkSession ) {\n        this.monitorSession( { sub: user.sub || user.id, session_state } )\n      }\n\n      if ( expires_in !== undefined && this.options.autoSilentRenew ){\n        const expiration = Number( expires_in ) - this.options.secondsToRefreshAccessTokenBeforeExp!\n        if ( expiration >= 0 ){\n          this._accessTokenExpireTimer!.start( expiration, async ()=> {\n            this.synchronizer.CallOnce( 'silent-login', async () => {\n              try {\n                await this.silentLogin()\n                this.emit( Events.SILENT_RENEW_SUCCESS, null )\n              } catch ( e ) {\n                this.emit( Events.SILENT_RENEW_ERROR, e )\n              }\n            } )\n          } )\n        }\n      }\n    }\n  }\n}\n","import { OIDCClient } from './client';\nimport type { IPlusAuthClientOptions } from './interfaces';\n\nexport * from './interfaces'\nexport * from './client'\nexport * from './constants'\nexport * from './helpers'\nexport * from './errors'\n\n/**\n * Create OIDC client with initializing it. It resolves issuer metadata, jwks keys and check if user is\n * authenticated in OpenId Connect provider.\n */\nexport default function createOIDCClient( options: IPlusAuthClientOptions ): Promise<OIDCClient>{\n  return new OIDCClient( options ).initialize()\n}\n"],"names":["Events","USER_LOGOUT","USER_LOGIN","SILENT_RENEW_SUCCESS","SILENT_RENEW_ERROR","SESSION_CHANGE","OIDCClientError","Error","error","error_description","name","AuthenticationError","constructor","state","error_uri","InvalidJWTError","details","InvalidIdTokenError","InteractionCancelled","StateStore","prefix","LocalStorageStateStore","get","key","Promise","resolve","value","window","localStorage","getItem","JSON","parse","set","setItem","stringify","del","removeItem","clear","before","i","storedKeys","length","substring","push","storedItem","created_at","e","InMemoryStateStore","map","forEach","val","ind","delete","Map","EventEmitter","once","event","fn","on","onArgs","off","apply","cb","callbacks","splice","emit","args","cbs","slice","len","Timer","start","duration","callback","expiration","now","_expiration","_timerHandle","stop","timerDuration","setInterval","clearInterval","currentTimeInMillisFunc","Date","_define_property","createHiddenFrame","iframe","document","createElement","style","width","height","position","visibility","display","title","ariaHidden","runIframe","url","options","reject","onLoadTimeoutId","timeoutSetTimeoutId","setTimeout","removeIframe","timeout","iframeEventHandler","origin","eventOrigin","data","type","eventSource","source","close","resp","response","clearTimeout","body","contains","removeChild","removeEventListener","onLoadTimeout","addEventListener","appendChild","setAttribute","onload","isValidIssuer","issuer","URL","includes","protocol","search","hash","buildEncodedQueryString","obj","appendable","ret","d","hasOwnProperty","encodeURIComponent","join","parseQueryUrl","result","trim","replace","params","split","paramAndValue","parts","decodeURIComponent","shift","urlSafe","buffer","encoded","fromByteArray","Uint8Array","request","headers","method","requestType","fetch","then","json","catch","CHARSET","getRandomBytes","n","crypto","self","msCrypto","QUOTA","a","getRandomValues","subarray","Math","min","generateRandom","out","charsLen","maxByte","buf","ceil","randomByte","charAt","deriveChallenge","code","subtle","digest","TextEncoder","encode","urlDecodeB64","input","atob","c","charCodeAt","toString","parseJwt","jwt","header","payload","validateIdToken","id_token","nonce","validateJwt","message","isIdToken","clockSkew","currentTimeInMillis","audience","client_id","iss","aud","Array","isArray","indexOf","azp","lowerNow","upperNow","floor","iat","Number","nbf","exp","nonUserClaims","DEFAULT_CHECK_INTERVAL","createSessionCheckerFrame","checkInterval","internalSessionState","idx","frameOrigin","substr","frame","timer","load","sessionState","send","contentWindow","postMessage","cleanUndefined","object","merge","previousValue","currentValue","p","undefined","mergeObjects","objects","reduce","isResponseType","response_type","filter","rt","isScopeIncluded","scope","scopes","openPopup","left","screenX","innerWidth","top","screenY","innerHeight","open","runPopup","popup","location","href","timeoutId","closeId","clearHandlers","messageListener","closed","currentTabId","performance","random","handlers","TabUtils","CallOnce","lockname","localStorageKey","keyPrefix","BroadcastMessageToAllTabs","messageId","eventData","x","timeStamp","getTime","OnBroadcastMessage","ev","newValue","messageData","kid","OIDCClient","initialize","checkLogin","initialized","__initializePromise","stateStore","init","authStore","endpoints","Object","keys","fetchFromIssuer","frameElement","silentLogin","login","localState","assign","createAuthRequest","loginWithPopup","popupOptions","response_mode","request_type","authParams","loadState","tokenResult","handleAuthResponse","authObject","handleTokenResult","session_state","synchronizer","loginCallback","parsedUrl","responseParams","rawStoredState","parent","host","opener","logout","localOnly","storedAuth","id_token_hint","id_token_raw","createLogoutRequest","revokeToken","token","revocation_endpoint","finalOptions","client_secret","token_type_hint","http","finalState","prompt","silent_redirect_uri","redirect_uri","useRefreshToken","refresh_token","exchangeRefreshToken","authUrl","silentRequestTimeout","getAccessToken","access_token","getRefreshToken","getIdToken","getExpiresAt","expires_at","getIdTokenRaw","getScopes","getUser","user","isLoggedIn","existsOnLocal","authorization_endpoint","code_verifier","ui_locales","claims","claims_locales","acr_values","registration","login_hint","web_message_uri","web_message_target","extraParams","code_challenge","code_challenge_method","fragment","authParamsString","end_session_endpoint","logoutParams","post_logout_redirect_uri","extraLogoutParams","exchangeAuthorizationCode","token_endpoint","extraTokenHeaders","extraTokenParams","rest","mergedOptions","grant_type","req","requestUrl","issuer_metadata","prop","endsWith","parsedIDToken","idTokenValidator","requestUserInfo","userinfo_endpoint","userInfoResult","fetchUserInfo","accessToken","sub","check_session_iframe","console","warn","sessionCheckerFrame","sessionCheckCallback","err","checkSessionInterval","onUserLogin","authObj","expires_in","idToken","idTokenRaw","refreshToken","checkSession","monitorSession","id","autoSilentRenew","secondsToRefreshAccessTokenBeforeExp","_accessTokenExpireTimer","btoa","httpClient","bind","createOIDCClient"],"mappings":"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","x_google_ignoreList":[8]}