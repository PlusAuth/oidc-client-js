{"version":3,"file":"oidc-client.esm.js","sources":["../src/constants/events.ts","../src/errors.ts","../src/helpers/state_manager/state_store.ts","../src/helpers/state_manager/local_storage.ts","../src/helpers/state_manager/in_memory.ts","../src/helpers/event_emitter.ts","../src/helpers/timer.ts","../src/utils/iframe.ts","../node_modules/unfetch/dist/unfetch.module.js","../node_modules/isomorphic-unfetch/browser.js","../node_modules/base64-js/index.js","../src/utils/url.ts","../src/utils/request.ts","../src/utils/jose.ts","../src/utils/check_session_iframe.ts","../src/utils/oidc.ts","../src/utils/popup.ts","../src/utils/tab_utils.ts","../src/client.ts","../src/index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/indent */\nexport const Events = {\n  USER_LOGOUT:          'user_logout',\n  USER_LOGIN:           'user_login',\n  SILENT_RENEW_SUCCESS: 'silent_renew_success',\n  SILENT_RENEW_ERROR:   'silent_renew_error',\n  SESSION_CHANGE:       'session_change'\n} as const\n\nexport type EventTypes = 'user_logout' | 'user_login' | 'silent_renew_success' |\n                          'silent_renew_error' | 'session_change' | 'session_error'\n","export class OIDCClientError extends Error {\n  error: string;\n\n  error_description?: string;\n\n  public constructor( error: string, error_description?: string ) {\n    super( `${ error }${ error_description && ` - ${ error_description }` || '' }` );\n    this.name = 'OIDCClientError'\n    this.error = error\n    this.error_description = error_description\n  }\n}\n\nexport class AuthenticationError extends OIDCClientError {\n  state?: string;\n\n  error_uri?: string;\n\n  constructor( error: string, error_description?: string, state?: string, error_uri?: string ) {\n    super( error, error_description );\n    this.name = 'AuthenticationError'\n    this.state = state;\n    this.error_uri = error_uri;\n  }\n}\n\nexport class InvalidJWTError extends OIDCClientError {\n  constructor( details: string ) {\n    super( details );\n    this.name = 'InvalidJWTError'\n    this.error_description = details\n  }\n}\nexport class InvalidIdTokenError extends InvalidJWTError {\n  constructor( details: string ) {\n    super( details );\n    this.name = 'InvalidIdTokenError'\n  }\n}\n\nexport class InteractionCancelled extends OIDCClientError {\n  constructor( details: string ) {\n    super( details );\n    this.name = 'InteractionCancelled'\n  }\n}\n","export interface StateStore {\n  init?(): Promise<StateStore>\n}\nexport abstract class StateStore {\n  prefix: string;\n\n  constructor( prefix = '' ) {\n    this.prefix = prefix\n  }\n\n  public abstract get( key: string ): Promise<Record<string, any> | null>;\n\n  public abstract set( key: string, value: Record<string, any> ): Promise<void>;\n\n  public abstract del( key: string ): Promise<void>;\n\n  public abstract clear( maxAge?: number ): Promise<void>;\n}\n","import { StateStore } from './state_store';\n\nexport class LocalStorageStateStore extends StateStore {\n  constructor( prefix = 'pa_oidc.' ) {\n    super( prefix )\n  }\n\n  get( key: string ) {\n    return new Promise<Record<string, any> | null>( ( resolve ) => {\n      const value = window.localStorage.getItem( this.prefix + key );\n      if ( value ) {\n        resolve( JSON.parse( value ) );\n      } else {\n        resolve( null );\n      }\n    } );\n  }\n\n  set( key: string, value: Record<string, any> ) {\n    return new Promise<void>( ( resolve ) => {\n      window.localStorage.setItem( this.prefix + key, JSON.stringify( value ) );\n      resolve();\n    } );\n  }\n\n  del( key: string ) {\n    return new Promise<void>( ( resolve ) => {\n      window.localStorage.removeItem( this.prefix + key );\n      resolve();\n    } );\n  }\n\n  clear( before?: number ): Promise<void> {\n    return new Promise<void>( ( resolve ) => {\n      let i;\n      const storedKeys: string[] = [];\n      for ( i = 0; i < window.localStorage.length; i++ ) {\n        const key = window.localStorage.key( i )\n        // items only created by oidc client\n        if ( key?.substring( 0, this.prefix.length ) == this.prefix ) {\n          storedKeys.push( key );\n        }\n      }\n      for ( i = 0; i < storedKeys.length; i++ ) {\n        if ( before ) {\n          try {\n            const storedItem = JSON.parse( window.localStorage.getItem( storedKeys[i] )! )\n            if ( storedItem.created_at < before ) {\n              window.localStorage.removeItem( storedKeys[i] )\n            }\n          } catch ( e ) {\n          }\n        } else {\n          window.localStorage.removeItem( storedKeys[i] )\n        }\n      }\n      resolve();\n    } );\n  }\n}\n","import { StateStore } from './state_store';\n\nexport class InMemoryStateStore extends StateStore {\n  map = new Map()\n\n  clear( before?: number ) {\n    if ( before ){\n      this.map.forEach( ( val, ind ) => {\n        if ( val.created_at < before ){\n          this.map.delete( ind )\n        }\n      } )\n      return Promise.resolve()\n    } else {\n      return Promise.resolve( this.map.clear() );\n    }\n  }\n\n  del( key: string ) {\n    this.map.delete( key )\n    return Promise.resolve( );\n  }\n\n  get( key: string ) {\n    return Promise.resolve( this.map.get( key ) || null );\n  }\n\n  set( key: string, value: any ) {\n    this.map.set( key, value )\n    return Promise.resolve();\n  }\n}\n","export type Listener = ( ...args: any ) => void\n\nexport class EventEmitter<T extends string>{\n  callbacks: Record<string, any[] >;\n\n  constructor(){\n    this.callbacks = {}\n  }\n\n  once( event: T, fn: ( ...args: any[] ) => void ){\n    function on( this: EventEmitter<any>, ...onArgs: any[] ) {\n      this.off( event, on );\n      fn.apply( this, onArgs );\n    }\n    on.fn = fn\n    this.on( event, on );\n    return this;\n  }\n\n  on( event: T, cb: ( ...args: any[] ) => void ){\n    if ( !this.callbacks[`$${ event }`] ) this.callbacks[`$${ event }`] = [];\n    this.callbacks[`$${ event }`].push( cb )\n    return this\n  }\n\n  off( event?: T, fn?: ( ...args: any[] ) => void ){\n    if ( !event ) {\n      this.callbacks = {};\n      return this;\n    }\n\n    // specific event\n    const callbacks = this.callbacks[`$${ event }`];\n    if ( !callbacks ) return this;\n\n    // remove all handlers\n    if ( !fn ) {\n      delete this.callbacks[`$${ event }`];\n      return this;\n    }\n\n    for ( let i = 0; i < callbacks.length; i++ ) {\n      const cb = callbacks[i];\n      if ( cb === fn || cb.fn === fn ) {\n        callbacks.splice( i, 1 );\n        break;\n      }\n    }\n\n    // Remove event specific arrays for event types that no\n    // one is subscribed for to avoid memory leak.\n    if ( callbacks.length === 0 ) {\n      delete this.callbacks[`$${ event }`];\n    }\n\n    return this;\n  }\n\n  emit( event: T, ...args: any[] ){\n    let cbs = this.callbacks[`$${ event }`]\n    if ( cbs ) {\n      cbs = cbs.slice( 0 );\n      for ( let i = 0, len = cbs.length; i < len; ++i ) {\n        cbs[i].apply( this, args );\n      }\n    }\n    return this\n  }\n}\n","export class Timer {\n  private now: () => number;\n\n  private _timerHandle: any;\n\n  private _expiration!: number;\n\n  constructor( currentTimeInMillisFunc = () => Date.now() ) {\n    this.now = currentTimeInMillisFunc\n  }\n\n  start( duration: number, callback: () => void ){\n    if ( duration <= 0 ) {\n      duration = 1;\n    }\n    const expiration = this.now() / 1000 + duration;\n    if ( this._expiration === expiration && this._timerHandle ) {\n      return;\n    }\n\n    this.stop();\n\n    this._expiration = expiration;\n\n    // prevent device sleep and delayed timers\n    let timerDuration = 5;\n    if ( duration < timerDuration ) {\n      timerDuration = duration;\n    }\n    this._timerHandle = setInterval( ()=>{\n      if ( this._expiration <= this.now() / 1000 ) {\n        this.stop();\n        callback()\n      }\n    }, timerDuration * 1000 );\n  }\n\n  stop() {\n    if ( this._timerHandle ) {\n      clearInterval( this._timerHandle );\n      this._timerHandle = null;\n    }\n  }\n}\n","import { AuthenticationError, OIDCClientError } from '../errors';\nimport { IFrameOptions } from '../interfaces';\n\nexport function createHiddenFrame() {\n  const iframe = window.document.createElement( 'iframe' );\n  iframe.style.width = '0';\n  iframe.style.height = '0';\n  iframe.style.position = 'absolute';\n  iframe.style.visibility = 'hidden';\n  iframe.style.display = 'none';\n\n  iframe.title = '__pa_helper__hidden'\n  iframe.ariaHidden = 'true'\n\n  return iframe\n}\n\nexport function runIframe(\n  url: string,\n  options: IFrameOptions\n) {\n  return new Promise<any>( ( resolve, reject ) => {\n    let onLoadTimeoutId: any = null;\n    const iframe = createHiddenFrame()\n\n    const timeoutSetTimeoutId = setTimeout( () => {\n      reject( new OIDCClientError( 'Timed out' ) );\n      removeIframe();\n    }, ( options.timeout || 10 ) * 1000 );\n\n    const iframeEventHandler =  ( e: MessageEvent ) => {\n      if ( e.origin != options.eventOrigin ) return;\n      if ( !e.data || e.data.type !== 'authorization_response' ) return;\n      const eventSource = e.source;\n      if ( eventSource ) {\n        ( <any>eventSource ).close();\n      }\n\n      const resp = e.data.response || e.data\n      resp.error\n        ? reject( new AuthenticationError( resp.error, resp.error_description, resp.state, resp.error_uri ) )\n        : resolve( e.data );\n      clearTimeout( timeoutSetTimeoutId );\n      removeIframe();\n    };\n\n    const removeIframe = () => {\n      if ( onLoadTimeoutId != null ){\n        clearTimeout( onLoadTimeoutId )\n      }\n      if ( window.document.body.contains( iframe ) ) {\n        window.document.body.removeChild( iframe );\n      }\n      window.removeEventListener( 'message', iframeEventHandler, false );\n    };\n\n    const onLoadTimeout = () => setTimeout( ()=>{\n      reject( new OIDCClientError( 'Could not complete silent authentication', url ) )\n      removeIframe();\n    }, 300 )\n\n\n\n    window.addEventListener( 'message', iframeEventHandler, false );\n    window.document.body.appendChild( iframe );\n    iframe.setAttribute( 'src', url );\n\n    /**\n     * In case of wrong client id, wrong redirect_uri, in short when redirect did not happen\n     * we assume flow failed.\n     */\n    iframe.onload = function () {\n      onLoadTimeoutId = onLoadTimeout()\n    }\n  } );\n}\n","export default function(e,n){return n=n||{},new Promise(function(t,r){var s=new XMLHttpRequest,o=[],u=[],i={},a=function(){return{ok:2==(s.status/100|0),statusText:s.statusText,status:s.status,url:s.responseURL,text:function(){return Promise.resolve(s.responseText)},json:function(){return Promise.resolve(s.responseText).then(JSON.parse)},blob:function(){return Promise.resolve(new Blob([s.response]))},clone:a,headers:{keys:function(){return o},entries:function(){return u},get:function(e){return i[e.toLowerCase()]},has:function(e){return e.toLowerCase()in i}}}};for(var l in s.open(n.method||\"get\",e,!0),s.onload=function(){s.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm,function(e,n,t){o.push(n=n.toLowerCase()),u.push([n,t]),i[n]=i[n]?i[n]+\",\"+t:t}),t(a())},s.onerror=r,s.withCredentials=\"include\"==n.credentials,n.headers)s.setRequestHeader(l,n.headers[l]);s.send(n.body||null)})}\n//# sourceMappingURL=unfetch.module.js.map\n","module.exports = self.fetch || (self.fetch = require('unfetch').default || require('unfetch'));\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","import { fromByteArray } from 'base64-js';\n\nexport function isValidIssuer( issuer: string ){\n  try {\n    const url = new URL( issuer )\n    if ( !['http:', 'https:'].includes( url.protocol ) ){\n      return false\n    }\n    if ( url.search !== '' || url.hash !== '' ){\n      return false\n    }\n    return true\n  } catch ( e ){\n    return false\n  }\n}\nexport function buildEncodedQueryString( obj?: Record<string, any>,\n                                         appendable = true, ) {\n  if ( !obj ) return '';\n  const ret: string[] = [];\n  for ( const d in obj ) {\n    if ( obj.hasOwnProperty( d ) && obj[d] ) {\n      ret.push( `${\n        encodeURIComponent( d )\n      }=${\n        encodeURIComponent( typeof obj[d] === 'object' ? JSON.stringify( obj[d] ) : obj[d]! )\n      }` );\n    }\n  }\n  return `${ appendable ? '?' : '' }${ ret.join( '&' ) }`;\n}\n\nexport function parseQueryUrl( value: string ) {\n  const result: Record<string, string> = {};\n  value = value.trim().replace( /^(\\?|#|&)/, '' );\n  const params = value.split( '&' );\n  for ( let i = 0; i < params.length; i += 1 ) {\n    const paramAndValue = params[i];\n    const parts = paramAndValue.split( '=' );\n    const key = decodeURIComponent( parts.shift()! );\n    const value = parts.length > 0 ? parts.join( '=' ) : '';\n    result[key] = decodeURIComponent( value );\n  }\n  return result;\n}\n\nexport function urlSafe( buffer: Uint8Array ): string {\n  const encoded = fromByteArray( new Uint8Array( buffer ) );\n  return encoded.replace( /\\+/g, '-' ).replace( /\\//g, '_' ).replace( /=/g, '' );\n}\n","import fetch from 'isomorphic-unfetch'\n\nimport { buildEncodedQueryString } from './url';\n\nexport interface RequestOptions {\n  body?: Record<string, string | number | null | undefined>;\n  headers?: Record<string, string>,\n  method: 'GET' | 'POST' | 'PATCH' | 'TRACE' | 'OPTIONS' | 'HEAD',\n  requestType?: 'form' | 'json',\n  url: string\n}\n\nexport function request( options: RequestOptions ): Promise<any>{\n  let body: any = null\n  let headers = options.headers || {}\n  if ( options.method === 'POST' ){\n    headers = {\n      'Content-Type': options.requestType === 'form' ? 'application/x-www-form-urlencoded;charset=UTF-8' :\n        'application/json;charset=UTF-8',\n      ...headers\n    }\n  }\n  if ( options.body ){\n    body = options.requestType === 'form' ? buildEncodedQueryString( options.body, false )\n      : JSON.stringify( options.body )\n  }\n\n  return new Promise( ( resolve, reject ) => {\n    fetch( options.url, {\n      method: options.method,\n      body:   body,\n      headers\n    } )\n      .then( value => resolve( value.json() ) )\n      .catch( reject )\n  } )\n}\n","import { InvalidIdTokenError, InvalidJWTError, OIDCClientError } from '../errors';\nimport { IPlusAuthClientOptions, JWTValidationOptions, ParsedJWT } from '../interfaces';\n\nimport { urlSafe } from './url';\n\nconst CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\nfunction getRandomBytes( n: number ){\n  // @ts-ignore\n  const crypto = self.crypto || self.msCrypto, QUOTA = 65536;\n  const a = new Uint8Array( n );\n  for ( let i = 0; i < n; i += QUOTA ) {\n    crypto.getRandomValues( a.subarray( i, i + Math.min( n - i, QUOTA ) ) );\n  }\n  return a;\n}\n\nexport function generateRandom( length: number ){\n  let out = '';\n  const charsLen = CHARSET.length;\n  const maxByte = 256 - 256 % charsLen;\n  while ( length > 0 ) {\n    const buf = getRandomBytes( Math.ceil( length * 256 / maxByte ) );\n    for ( let i = 0; i < buf.length && length > 0; i++ ) {\n      const randomByte = buf[i];\n      if ( randomByte < maxByte ) {\n        out += CHARSET.charAt( randomByte % charsLen );\n        length--;\n      }\n    }\n  }\n  return out;\n}\n\n\nexport function deriveChallenge( code: string ): Promise<string>{\n  if ( code.length < 43 || code.length > 128 ) {\n    return Promise.reject( new OIDCClientError( `Invalid code length: ${ code.length }` ) );\n  }\n\n  return new Promise( ( resolve, reject ) => {\n    crypto.subtle.digest( 'SHA-256', new TextEncoder().encode( code ) )\n      .then( buffer => {\n        return resolve( urlSafe( new Uint8Array( buffer ) ) );\n      }, function ( error ) {\n        /* istanbul ignore next */\n        return reject( error );\n      } );\n  } );\n}\n// https://datatracker.ietf.org/doc/html/rfc4648#section-5\nexport const urlDecodeB64 = ( input: string ) => decodeURIComponent(\n  atob( input.replace( /_/g, '/' ).replace( /-/g, '+' ) )\n    .split( '' )\n    .map( c => {\n      return `%${ `00${ c.charCodeAt( 0 ).toString( 16 ) }`.slice( -2 ) }`;\n    } )\n    .join( '' )\n);\n\n\n\nexport function parseJwt( jwt: string ): ParsedJWT {\n  try {\n    const parts = jwt.split( '.' )\n    if ( parts.length !== 3 ){\n      throw new Error( 'Wrong JWT format' )\n    }\n    return {\n      header:  JSON.parse( urlDecodeB64( parts[0] ) ),\n      payload: JSON.parse( urlDecodeB64( parts[1] ) )\n    }\n  } catch ( e ){\n    throw new InvalidJWTError( 'Failed to parse jwt' )\n  }\n}\n\nexport function validateIdToken( id_token: string, nonce: string, options: IPlusAuthClientOptions ) {\n  if ( !nonce ) {\n    throw new OIDCClientError( 'No nonce on state' );\n  }\n\n  try {\n    const jwt = parseJwt( id_token );\n\n    if ( nonce !== jwt.payload.nonce ) {\n      throw new Error( `Invalid nonce in id_token: ${ jwt.payload.nonce }` );\n    }\n\n    validateJwt( id_token, options, true )\n\n    // @ts-ignore\n    if ( !jwt.payload['sub'] ) {\n      throw new Error( 'No Subject (sub) present in id_token' );\n    }\n\n    return jwt.payload;\n  } catch ( e ){\n    throw new InvalidIdTokenError( e.message )\n  }\n}\n\nexport function validateJwt( jwt: string, options: JWTValidationOptions, isIdToken = false ) {\n  // eslint-disable-next-line prefer-const\n  let { clockSkew, currentTimeInMillis, issuer, audience, client_id } = options\n  if ( !clockSkew ){\n    clockSkew = 0\n  }\n  const now = ( currentTimeInMillis && currentTimeInMillis() || Date.now() ) / 1000;\n\n  const payload = parseJwt( jwt ).payload;\n\n  if ( !payload.iss ) {\n    throw new InvalidJWTError( 'Issuer (iss) was not provided' );\n  }\n  if ( payload.iss !== issuer ) {\n    throw new InvalidJWTError( `Invalid Issuer (iss) in token: ${ payload.iss }` );\n  }\n\n  if ( !payload.aud ) {\n    throw new InvalidJWTError( 'Audience (aud) was not provided' );\n  }\n\n  // Audience must be equal to client_id in id_token\n  // https://openid.net/specs/openid-connect-core-1_0.html#IDToken\n  if ( Array.isArray( payload.aud ) ?\n    payload.aud.indexOf( isIdToken ? client_id : audience || client_id ) == -1 :\n    payload.aud !== ( isIdToken ? client_id : audience || client_id )\n  ) {\n    throw new InvalidJWTError( `Invalid Audience (aud) in token: ${ payload.aud }` );\n  }\n\n  if ( payload.azp && payload.azp !== client_id ) {\n    throw new InvalidJWTError( `Invalid Authorized Party (azp) in token: ${ payload.azp }` );\n  }\n\n  const lowerNow = Math.ceil( now + clockSkew );\n  const upperNow = Math.floor( now - clockSkew );\n\n  if ( !payload.iat ) {\n    throw new InvalidJWTError( 'Issued At (iat) was not provided' );\n  }\n\n  if ( lowerNow < payload.iat ) {\n    throw new InvalidJWTError( `Issued At (iat) is in the future: ${ payload.iat }` );\n  }\n\n  if ( payload.nbf && lowerNow < payload.nbf ) {\n    throw new InvalidJWTError( `Not Before time (nbf) is in the future: ${ payload.nbf }` );\n  }\n\n  if ( !payload.exp ) {\n    throw new InvalidJWTError( 'Expiration Time (exp) was not provided' );\n  }\n  if ( payload.exp < upperNow ) {\n    throw new InvalidJWTError( `Expiration Time (exp) is in the past: ${ payload.exp }` );\n  }\n\n  return payload;\n}\n\n// Retrieved from https://www.iana.org/assignments/jwt/jwt.xhtml\nexport const nonUserClaims = [\n  'iss',\n  // 'sub',\n  'aud',\n  'exp',\n  'nbf',\n  'iat',\n  'jti',\n  'azp',\n  'nonce',\n  'auth_time',\n  'at_hash',\n  'c_hash',\n  'acr',\n  'amr',\n  'sub_jwk',\n  'cnf',\n  'sip_from_tag',\n  'sip_date',\n  'sip_callid',\n  'sip_cseq_num',\n  'sip_via_branch',\n  'orig',\n  'dest',\n  'mky',\n  'events',\n  'toe',\n  'txn',\n  'rph',\n  'sid',\n  'vot',\n  'vtm',\n  'attest',\n  'origid',\n  'act',\n  'scope',\n  'client_id',\n  'may_act',\n  'jcard',\n  'at_use_nbr',\n] as const\n","import { SessionChecker, SessionCheckerOptions } from '../interfaces';\n\nimport { createHiddenFrame } from './iframe';\n\nconst DEFAULT_CHECK_INTERVAL = 2000\n\nexport function createSessionCheckerFrame( options: SessionCheckerOptions ): SessionChecker{\n  const { url, callback, client_id, checkInterval } = options\n  let internalSessionState: string | null;\n  const idx = url.indexOf( '/', url.indexOf( '//' ) + 2 );\n  const frameOrigin = url.substr( 0, idx );\n\n  const frame = createHiddenFrame()\n\n  let timer: any\n\n  const load = () => {\n    return new Promise( resolve => {\n      window.document.body.appendChild( frame );\n      window.addEventListener( 'message', iframeEventHandler, false );\n      frame.onload = () => {\n        resolve( null )\n      }\n    } )\n  }\n\n  const start = ( sessionState: string ) => {\n    load().then( () => {\n      if ( sessionState && internalSessionState !== sessionState ) {\n        stop();\n        internalSessionState = sessionState;\n        const send = () => {\n          frame.contentWindow!.postMessage( `${ client_id } ${ internalSessionState }`, frameOrigin );\n        };\n        send();\n        timer = window.setInterval( send, checkInterval || DEFAULT_CHECK_INTERVAL );\n      }\n    } )\n  }\n\n  const stop = () => {\n    internalSessionState = null;\n    if ( timer ) {\n      window.clearInterval( timer );\n      timer = null;\n    }\n  }\n\n  const iframeEventHandler = ( e: MessageEvent ) => {\n    if ( e.origin === frameOrigin && e.source === frame.contentWindow ) {\n      if ( e.data === 'error' ) {\n        stop();\n        callback( e.data );\n      } else if ( e.data === 'changed' ) {\n        stop();\n        callback();\n      }\n    }\n  }\n\n  frame.setAttribute( 'src', url );\n\n  return {\n    stop,\n    start\n  }\n}\n","export const isResponseType = ( type: string, response_type?: string ) =>\n  response_type && response_type.split( /\\s+/g ).filter( rt => rt === type ).length > 0\n\nexport const isScopeIncluded = ( scope: string, scopes?: string ) =>\n  scopes && scopes.split( ' ' ).indexOf( scope ) > -1\n","import { InteractionCancelled, OIDCClientError } from '../errors';\nimport { PopupOptions } from '../interfaces';\n\nconst openPopup = ( url: string, width = 400, height = 600 ) => {\n  const left = window.screenX + ( window.innerWidth - width ) / 2;\n  const top = window.screenY + ( window.innerHeight - height ) / 2;\n\n  return window.open(\n    url,\n    'oidc-login-popup',\n    `left=${ left },top=${ top },width=${ width },height=${ height },resizable,scrollbars=yes,status=1`\n  );\n};\n\nexport function runPopup( url: string, options: PopupOptions ) {\n  let popup = options.popup;\n\n  if ( popup ) {\n    popup.location.href = url;\n  } else {\n    popup = openPopup( url );\n  }\n\n  if ( !popup ) {\n    /* istanbul ignore next */\n    throw new Error( 'Could not open popup' );\n  }\n\n  let timeoutId: any ;\n  let closeId: any ;\n\n  return new Promise<any>( ( resolve, reject ) => {\n    function clearHandlers(){\n      clearInterval( closeId );\n      clearTimeout( timeoutId )\n      window.removeEventListener( 'message', messageListener )\n    }\n\n    timeoutId = setTimeout( () => {\n      clearHandlers()\n      reject( new OIDCClientError( 'Timed out' ) );\n    }, options.timeout || 60 * 1000 )\n\n    closeId = setInterval( function () {\n      if ( popup!.closed ) {\n        clearHandlers()\n        reject( new InteractionCancelled( 'user closed popup' ) )\n      }\n    }, 300 );\n\n    window.addEventListener( 'message', messageListener );\n\n    function messageListener( e: MessageEvent ){\n      if ( !e.data || e.data.type !== 'authorization_response' ) return;\n      clearHandlers();\n      popup!.close();\n      const data = e.data.response || e.data\n      data.error ? reject( new OIDCClientError( data.error, data.error_description ) )\n        : resolve( e.data );\n    }\n  } );\n}\n","/*\nJitbit TabUtils - helper for multiple browser tabs. version 1.0\nhttps://github.com/jitbit/TabUtils\n- executing \"interlocked\" function call - only once per multiple tabs\n- broadcasting a message to all tabs (including the current one) with some message \"data\"\n- handling a broadcasted message\nMIT license: https://github.com/jitbit/TabUtils/blob/master/LICENSE\n*/\n\nconst currentTabId = `${ performance.now() }:${ Math.random() * 1000000000 | 0 }`;\nconst handlers: Record<string, any> = {};\n\nexport class TabUtils {\n  keyPrefix: string;\n\n  constructor( kid: string ) {\n    this.keyPrefix = kid;\n  }\n\n  //runs code only once in multiple tabs\n  //the lock holds for 4 seconds (in case the function is async and returns right away, for example, an ajax call intiated)\n  //then it is cleared\n  CallOnce( lockname: string, fn: () => void, timeout = 3000 ): void{\n    if ( !lockname ) throw 'empty lockname';\n\n    if ( !window.localStorage ) { //no local storage. old browser. screw it, just run the function\n      fn();\n      return;\n    }\n\n    const localStorageKey = this.keyPrefix + lockname;\n\n    localStorage.setItem( localStorageKey, currentTabId );\n    //re-read after a delay (after all tabs have saved their tabIDs into ls)\n    setTimeout( () => {\n      if ( localStorage.getItem( localStorageKey ) == currentTabId )\n        fn();\n    }, 150 );\n\n    //cleanup - release the lock after 3 seconds and on window unload (just in case user closed the window while the lock is still held)\n    setTimeout( function () { localStorage.removeItem( localStorageKey ); }, timeout );\n  }\n\n  BroadcastMessageToAllTabs( messageId: string, eventData: any ): void{\n    //now we also need to manually execute handler in the current tab too, because current tab does not get 'storage' events\n    try { handlers[messageId]( eventData ); } //\"try\" in case handler not found\n    catch ( x ) { }\n\n    if ( !window.localStorage ) return; //no local storage. old browser\n\n    const data = {\n      data:      eventData,\n      timeStamp: new Date().getTime()\n    }; //add timestamp because overwriting same data does not trigger the event\n\n    //this triggers 'storage' event for all other tabs except the current tab\n    localStorage.setItem( `${ this.keyPrefix }event${ messageId }`, JSON.stringify( data ) );\n\n    //cleanup\n    setTimeout( () => { localStorage.removeItem( `${ this.keyPrefix }event${ messageId }` ); }, 3000 );\n  }\n\n  OnBroadcastMessage( messageId: string, fn: ( data: any ) => void ): void{\n    handlers[messageId] = fn;\n    if ( !window.localStorage ) return; //no local storage. old browser\n\n    //first register a handler for \"storage\" event that we trigger above\n    window.addEventListener( 'storage', ( ev ) => {\n      if ( ev.key != `${ this.keyPrefix }event${ messageId }` ) return; // ignore other keys\n      if ( !ev.newValue ) return; //called by cleanup?\n      const messageData = JSON.parse( ev.newValue );\n      fn( messageData.data );\n    } );\n  }\n}\n","import { Events, EventTypes } from './constants';\n\nimport {\n  AuthenticationError, InvalidIdTokenError,\n  OIDCClientError\n} from './errors';\n\nimport {\n  EventEmitter,\n  InMemoryStateStore,\n  LocalStorageStateStore,\n  StateStore,\n} from './helpers';\n\n\n\nimport { Timer } from './helpers/timer';\nimport {\n  AuthRequestOptions, IEndpointConfiguration,\n  IPlusAuthClientOptions,\n  LogoutRequestOptions, PopupOptions, RevokeOptions, SessionChecker,\n  SessionMonitorOptions,\n  TokenRequestOption, TokenResponse, TokenType\n} from './interfaces';\n\nimport {\n  RequestOptions,\n  request,\n  runIframe,\n  buildEncodedQueryString,\n  parseQueryUrl,\n  validateIdToken,\n  createSessionCheckerFrame,\n  nonUserClaims, generateRandom, deriveChallenge, isValidIssuer,\n} from './utils';\n\nimport { isResponseType, isScopeIncluded } from './utils/oidc';\nimport { runPopup } from './utils/popup';\nimport { TabUtils } from './utils/tab_utils';\n\n/**\n * `OIDCClient` provides methods for interacting with OIDC/OAuth2 authorization server. Those methods are signing a\n * user in, signing out, managing the user's claims, checking session and managing tokens returned from the\n * OIDC/OAuth2 provider.\n *\n */\nexport class OIDCClient extends EventEmitter<EventTypes>{\n  options: IPlusAuthClientOptions\n\n  user?: any;\n\n  scopes?: string[];\n\n  accessToken?: string;\n\n  refreshToken?: string;\n\n  idToken?: string;\n\n  idTokenRaw?: string;\n\n  issuer_metadata?: Record<string, any>;\n\n  private readonly http: ( options: RequestOptions ) => Promise<any> | never;\n\n  private synchronizer: TabUtils;\n\n  private stateStore: StateStore\n\n  private authStore: StateStore;\n\n  private sessionCheckerFrame?: SessionChecker\n\n  private _accessTokenExpireTimer?: Timer;\n\n  private initialized!: boolean;\n\n  private __initializePromise!: Promise<any> | undefined;\n\n  constructor( options: IPlusAuthClientOptions ) {\n    super()\n    if ( !isValidIssuer( options.issuer ) ){\n      throw new OIDCClientError( '\"issuer\" must be a valid uri.' )\n    }\n\n    this.synchronizer = new TabUtils( btoa( options.issuer ) )\n\n    this.options = Object.assign( {\n      secondsToRefreshAccessTokenBeforeExp: 60,\n      autoSilentRenew:                      true,\n      checkSession:                         true,\n    }, options, {\n      // remove last slash for consistency across the lib\n      issuer: options.issuer.endsWith( '/' ) ? options.issuer.slice( 0, -1 ) : options.issuer\n    } )\n\n    this.http = this.options.httpClient || request\n    this.stateStore = this.options.stateStore || new LocalStorageStateStore( 'pa_oidc.state.' )\n    this.authStore = this.options.authStore || new InMemoryStateStore()\n\n\n    if ( this.options.autoSilentRenew ){\n      this._accessTokenExpireTimer = new Timer()\n    }\n\n    this.on( Events.USER_LOGOUT, async ()=>{\n      this.user = undefined\n      this.scopes = undefined;\n      this.accessToken = undefined\n      this.idToken = undefined\n      this.refreshToken = undefined\n      await this.authStore.clear()\n    } )\n\n    this.synchronizer.OnBroadcastMessage( Events.USER_LOGIN, this.onUserLogin.bind( this ) )\n  }\n\n  /**\n   * Initialize the library with this method. It resolves issuer configuration, jwks keys which are necessary for\n   * validating tokens returned from provider and checking if a user is already authenticated in provider.\n   *\n   * @param checkLogin Make this `false` if you don't want to check user authorization status in provider while\n   * initializing. Defaults to `true`\n   */\n  async initialize( checkLogin = true ): Promise<OIDCClient> | never {\n    if ( this.initialized ){\n      return this\n    }\n\n    if ( this.__initializePromise ){\n      return this.__initializePromise\n    } else {\n      this.__initializePromise = new Promise( async ( resolve, reject ) => {\n        try {\n          if ( this.stateStore.init ){\n            await this.stateStore.init()\n          }\n          if ( this.authStore.init ){\n            await this.authStore.init()\n          }\n\n          if ( !this.options.endpoints || Object.keys( this.options.endpoints ).length === 0 ){\n            await this.fetchFromIssuer()\n          }\n          this.initialized = true\n\n          try {\n            if ( checkLogin ){\n              if ( !window?.frameElement ){\n                await this.silentLogin()\n              }\n            }\n          } catch ( e ) {\n            await this.authStore.clear()\n          }\n          resolve( this )\n        } catch ( e ) {\n          if ( e instanceof OIDCClientError ){\n            reject( e )\n          } else {\n            reject( new OIDCClientError( e.message ) )\n          }\n        } finally {\n          this.__initializePromise = undefined\n        }\n      } )\n    }\n\n    return this.__initializePromise\n  }\n\n  /**\n   * Redirect to provider's authorization endpoint using provided parameters. You can override any parameter defined\n   * in `OIDCClient`. If you don't provide `state`, `nonce` or `code_verifier` they will be generated automatically\n   * in a random and secure way.\n   *\n   * @param options\n   * @param localState\n   */\n  async login( options: Partial<AuthRequestOptions> = {}, localState: Record<string, any> = {} ){\n    window.location.assign( await this.createAuthRequest( options, localState ) )\n  }\n\n  /**\n   * Open a popup with the provider's authorization endpoint using provided parameters. You can override any\n   * parameter defined in `OIDCClient`. If you don't provide `state`, `nonce` or `code_verifier` they will be\n   * generated automatically in a random and secure way. You can also override popup options.\n   *\n   * NOTE: Most browsers block popups if they are not happened as a result of user actions. In order to display\n   * login popup you must call this method in an event handler listening for a user action like button click.\n   *\n   * @param options\n   * @param popupOptions\n   */\n  async loginWithPopup( options: Partial<AuthRequestOptions> = {}, popupOptions: PopupOptions = {} ){\n    const url = await this.createAuthRequest( {\n      ...options,\n      response_mode: 'web_message',\n      display:       'popup',\n      request_type:  'p'\n    } )\n    const { response, state } = await runPopup( url, popupOptions )\n    const { authParams, localState } = state\n    const tokenResult = await this.handleAuthResponse( response, authParams, localState )\n    const authObject = await this.handleTokenResult(\n      tokenResult,\n      authParams,\n      Object.assign( {}, this.options, authParams )\n    )\n    authObject.session_state= response.session_state;\n    this.synchronizer.BroadcastMessageToAllTabs( Events.USER_LOGIN, authObject )\n    return localState\n  }\n\n  /**\n   * After a user successfully authorizes an application, the authorization server will redirect the user back to\n   * the application with either an authorization code or access token in the URL. In the callback page you should\n   * call this method.\n   *\n   * @param url Full url which contains authorization request result parameters. Defaults to `window.location.href`\n   */\n  async loginCallback( url: string= window?.location?.href ){\n    if ( !url ){\n      return Promise.reject( new OIDCClientError( 'Url must be passed to handle login redirect' ) )\n    }\n    let parsedUrl: URL;\n    try {\n      parsedUrl = new URL( url )\n    } catch ( e ){\n      return Promise.reject( new OIDCClientError( `Invalid callback url passed: \"${ url }\"` ) )\n    }\n\n    const responseParams = parseQueryUrl( parsedUrl.search || parsedUrl.hash )\n    const rawStoredState = await this.loadState( responseParams.state )\n    const { authParams, localState, request_type } = rawStoredState\n    url = url || window.location.href;\n    switch ( request_type ) {\n      case 's':\n        if ( window?.frameElement ) {\n          if ( url ) {\n            window.parent.postMessage( {\n              type:     'authorization_response',\n              response: responseParams,\n              state:    rawStoredState\n            }, `${ location.protocol }//${ location.host }` );\n          }\n        }\n        return\n      case 'p':\n        if ( window.opener && url ){\n          window.opener.postMessage( {\n            type:     'authorization_response',\n            response: responseParams,\n            state:    rawStoredState\n          }, `${ location.protocol }//${ location.host }` );\n        }\n        return\n      default:\n        if ( responseParams.error ){\n          return Promise.reject( new AuthenticationError( responseParams.error, responseParams.error_description ) )\n        }\n        const tokenResult = await this.handleAuthResponse( responseParams, authParams, localState )\n        const authObject = await this.handleTokenResult(\n          tokenResult,\n          authParams,\n          Object.assign( {}, this.options, authParams )\n        )\n        authObject.session_state= responseParams.session_state;\n        this.synchronizer.BroadcastMessageToAllTabs( Events.USER_LOGIN, authObject )\n        return localState\n    }\n  }\n\n  /**\n   * Redirect to provider's `end_session_endpoint` with provided parameters. After logout provider will redirect to\n   * provided `post_logout_redirect_uri` if it provided.\n   * @param options\n   */\n  async logout( options: LogoutRequestOptions = {} ){\n    if ( !options.localOnly ) {\n      const storedAuth = await this.authStore.get( 'auth' )\n      const id_token_hint = options.id_token_hint || storedAuth?.id_token_raw\n      window.location.assign( await this.createLogoutRequest( {\n        ...options,\n        id_token_hint\n      } ) )\n    }\n    await this.authStore.clear()\n  }\n\n  /**\n   * OAuth2 token revocation implementation method. See more at [tools.ietf.org/html/rfc7009](https://tools.ietf.org/html/rfc7009)\n   * @param token Token to be revoked\n   * @param type Passed token's type. It will be used to provide `token_type_hint` parameter.\n   * @param options If necessary override options passed to `OIDCClient` by defining them here.\n   */\n  async revokeToken( token: string, type: TokenType = 'access_token', options: RevokeOptions = {} ){\n    if ( !this.options.endpoints!.revocation_endpoint ){\n      return Promise.reject( new OIDCClientError( '\"revocation_endpoint\" doesn\\'t exist' ) )\n    }\n    const finalOptions = {\n      client_id:       options.client_id || this.options.client_id,\n      client_secret:   options.client_secret || this.options.client_secret,\n      token_type_hint: type,\n      token:           token\n    }\n\n    return this.http( {\n      method:      'POST',\n      requestType: 'form',\n      url:         this.options.endpoints!.revocation_endpoint,\n      body:        finalOptions\n    } )\n  }\n\n  /**\n   * Login without having an interaction. If refresh tokens are used and there is a stored refresh token it will\n   * exchange refresh token to receive new access token. If not it silently makes a request the provider's\n   * authorization endpoint using provided parameters. You can override any parameter defined in `OIDCClient`. If\n   * you don't provide `state`, `nonce` or `code_verifier` they will be generated automatically in a random and\n   * secure way.\n   *\n   * @param options\n   * @param localState\n   */\n  async silentLogin( options: AuthRequestOptions = {}, localState: Record<string, any> = {} ){\n    await this.initialize( false )\n    let tokenResult: any;\n    let finalState: any = {}\n\n    const storedAuth = await this.authStore.get( 'auth' ) || {}\n\n    const finalOptions = Object.assign( {}, this.options, options )\n\n    if ( finalOptions.silent_redirect_uri ){\n      finalOptions.redirect_uri = finalOptions.silent_redirect_uri\n    }\n\n    if ( this.options.useRefreshToken && storedAuth?.refresh_token ){\n      // TODO: deep merge\n      finalState.authParams = Object.assign( {}, storedAuth?.authParams || {}, finalState.authParams || {} )\n      tokenResult = await this.exchangeRefreshToken( {\n        ...finalOptions,\n        refresh_token: storedAuth.refresh_token,\n      } )\n    } else {\n      const authUrl = await this.createAuthRequest( {\n        ...finalOptions,\n        display:       'page',\n        response_mode: 'query',\n        prompt:        finalOptions.prompt || 'none',\n        request_type:  's'\n      }, localState )\n\n      const { response, state } = await runIframe( authUrl, {\n        timeout:     finalOptions.silentRequestTimeout,\n        eventOrigin: window.location.origin\n      } )\n      tokenResult = await this.handleAuthResponse( response, finalOptions, localState )\n      storedAuth.session_state = response.session_state;\n      finalState = state\n    }\n\n    const authObject = await this.handleTokenResult( tokenResult, finalState.authParams, finalOptions )\n    authObject.session_state = storedAuth.session_state\n    this.synchronizer.BroadcastMessageToAllTabs( Events.USER_LOGIN, authObject )\n    return finalState.localState\n  }\n\n  /**\n   * Retrieve logged in user's access token if it exists.\n   */\n  async getAccessToken(){\n    return ( await this.authStore.get( 'auth' ) )?.access_token\n  }\n\n\n  /**\n   * Retrieve logged in user's refresh token if it exists.\n   */\n  async getRefreshToken(){\n    return ( await this.authStore.get( 'auth' ) )?.refresh_token\n  }\n\n  /**\n   * Retrieve logged in user's parsed id token if it exists.\n   */\n  async getIdToken(){\n    return ( await this.authStore.get( 'auth' ) )?.id_token\n  }\n\n  /**\n   * Retrieve logged in user's id token in raw format if it exists.\n   */\n  async getIdTokenRaw(){\n    return ( await this.authStore.get( 'auth' ) )?.id_token_raw\n  }\n\n\n  /**\n   * Retrieve logged in user's scopes if it exists.\n   */\n  async getScopes(){\n    return ( await this.authStore.get( 'auth' ) )?.scope?.split( ' ' )\n  }\n\n\n  /**\n   * Retrieve logged in user's profile.\n   */\n  async getUser(){\n    return ( await this.authStore.get( 'auth' ) )?.user\n  }\n\n  /**\n   * If there is a user stored locally return true. Otherwise it will make a silentLogin to check if End-User is\n   * logged in provider.\n   *\n   * @param localOnly Don't check provider\n   */\n  async isLoggedIn( localOnly = false ){\n    const existsOnLocal = !!await this.getUser()\n    if ( !existsOnLocal && !localOnly ){\n      try {\n        await this.silentLogin()\n        return true\n      } catch ( e ){\n        return false\n      }\n    }\n    return existsOnLocal\n  }\n\n  /**\n   * Create authorization request with provided options.\n   *\n   * @param options\n   * @param localState\n   * @private\n   */\n  private async createAuthRequest( options: Partial<AuthRequestOptions> = {},\n    localState: Record<string, any> = {} ): Promise<string>{\n    if ( !this.options.endpoints?.authorization_endpoint ){\n      await this.initialize( false )\n    }\n    // TODO: deep merge for extra params\n    const finalOptions = Object.assign( {}, this.options, options )\n    localState.code_verifier = generateRandom( 72 )\n\n\n    const authParams: Record<string, any> = {\n      client_id:          finalOptions.client_id,\n      state:              generateRandom( 10 ),\n      scope:              finalOptions.scope,\n      audience:           finalOptions.audience,\n      redirect_uri:       finalOptions.redirect_uri,\n      response_type:      finalOptions.response_type || 'code',\n      ui_locales:         finalOptions.ui_locales,\n      prompt:             finalOptions.prompt,\n      display:            finalOptions.display,\n      claims:             finalOptions.claims,\n      claims_locales:     finalOptions.claims_locales,\n      acr_values:         finalOptions.acr_values,\n      registration:       finalOptions.registration,\n      login_hint:         finalOptions.login_hint,\n      id_token_hint:      finalOptions.id_token_hint,\n      web_message_uri:    finalOptions.web_message_uri,\n      web_message_target: finalOptions.web_message_target,\n      ...finalOptions.extraParams && finalOptions.extraParams\n    };\n\n    if ( isResponseType( 'id_token', authParams.response_type ) ||\n      isScopeIncluded( 'openid', authParams.scope ) ){\n      authParams.nonce = generateRandom( 10 )\n    }\n\n    if ( isResponseType( 'code', authParams.response_type ) ){\n      authParams.code_challenge= await deriveChallenge( localState.code_verifier )\n      authParams.code_challenge_method= finalOptions.code_challenge_method || 'S256'\n    }\n\n    const now = this.options.currentTimeInMillis && this.options.currentTimeInMillis() || Date.now()\n    const fragment = finalOptions.fragment ? `#${ finalOptions.fragment }` : '';\n    const authParamsString = buildEncodedQueryString( authParams )\n    const url = `${ this.options.endpoints!.authorization_endpoint }${ authParamsString }${ fragment }`\n\n    // clear 1 day old state entries\n    this.stateStore.clear( now - 86400000 )\n\n\n    await this.stateStore.set( authParams.state!, {\n      created_at:   now,\n      authParams,\n      localState,\n      request_type: finalOptions.request_type\n    } )\n    return url\n  }\n\n  /**\n   * Create a logout request with given options\n   *\n   * @param options\n   * @private\n   */\n  private async createLogoutRequest( options: LogoutRequestOptions = {} ){\n    if ( !this.options.endpoints?.end_session_endpoint ){\n      await this.fetchFromIssuer();\n    }\n    const finalOptions = Object.assign( {}, this.options, options )\n    const logoutParams = {\n      id_token_hint:            finalOptions.id_token_hint,\n      post_logout_redirect_uri: finalOptions.post_logout_redirect_uri,\n      ...finalOptions.extraLogoutParams && finalOptions.extraLogoutParams\n    }\n    return `${ this.options.endpoints!.end_session_endpoint }${ buildEncodedQueryString( logoutParams ) }`\n  }\n\n  /**\n   * Exchange authorization code retrieved from auth request result.\n   * @param options\n   * @private\n   */\n  private async exchangeAuthorizationCode( options: TokenRequestOption ){\n    if ( !this.options.endpoints?.token_endpoint ){\n      await this.fetchFromIssuer();\n    }\n    const extraTokenHeaders = options.extraTokenHeaders\n    options = Object.assign( {}, options, options.extraTokenParams || {} );\n\n    delete options.extraTokenParams\n    delete options.extraTokenHeaders\n\n    options.grant_type = options.grant_type || 'authorization_code';\n    options.client_id = options.client_id || this.options.client_id;\n    options.redirect_uri = options.redirect_uri || this.options.redirect_uri;\n\n    if ( !options.code ) {\n      return Promise.reject( new Error( '\"code\" is required' ) );\n    }\n    if ( !options.redirect_uri ) {\n      return Promise.reject( new Error( '\"redirect_uri\" is required' ) );\n    }\n    if ( !options.code_verifier ) {\n      return Promise.reject( new Error( '\"code_verifier\" is required' ) );\n    }\n    if ( !options.client_id ) {\n      return Promise.reject( new Error( '\"client_id\" is required' ) );\n    }\n\n    return this.http( {\n      url:         `${ this.options.endpoints!.token_endpoint }`,\n      method:      'POST',\n      requestType: 'form',\n      body:        options as any,\n      headers:     extraTokenHeaders\n    } )\n  }\n\n  /**\n   * Exchange refresh token with given options\n   * @param options\n   * @private\n   */\n  private async exchangeRefreshToken( options: Partial<TokenRequestOption> ) {\n    if ( !this.options.endpoints?.token_endpoint ){\n      await this.fetchFromIssuer();\n    }\n    const extraTokenHeaders = options.extraTokenHeaders\n    options = Object.assign( {}, options, options.extraTokenParams || {} );\n\n    options.grant_type = options.grant_type || 'refresh_token';\n    options.client_id = options.client_id || this.options.client_id;\n    options.client_secret = options.client_secret || this.options.client_secret;\n\n    if ( !options.refresh_token ) {\n      return Promise.reject( new Error( '\"refresh_token\" is required' ) );\n    }\n    if ( !options.client_id ) {\n      return Promise.reject( new Error( '\"client_id\" is required' ) );\n    }\n\n    return this.http( {\n      url:         `${ this.options.endpoints!.token_endpoint }`,\n      method:      'POST',\n      requestType: 'form',\n      body:        options as any,\n      headers:     extraTokenHeaders\n    } );\n  }\n\n  /**\n   * Fetch OIDC configuration from the issuer.\n   */\n  private async fetchFromIssuer(): Promise<Record<string, any>>{\n    try {\n      const requestUrl = `${ this.options.issuer }/.well-known/openid-configuration`\n      const response = await this.http( {\n        url:         requestUrl,\n        method:      'GET',\n        requestType: 'json'\n      } )\n      this.issuer_metadata = response as Record<string, any>\n      const endpoints = {} as any\n      for ( const prop of Object.keys( this.issuer_metadata ) ) {\n        if ( prop.endsWith( '_endpoint' ) || prop.indexOf( '_session' ) > -1 || prop.indexOf( '_uri' ) > -1 ) {\n          endpoints[prop as keyof IEndpointConfiguration] = this.issuer_metadata[prop];\n        }\n      }\n      this.options.endpoints = endpoints\n      return this.issuer_metadata;\n    } catch ( e ) {\n      throw new OIDCClientError( 'Loading metadata failed', e.message )\n    }\n  }\n\n  /**\n   * Handle auth request result. If there is `code` exchange it.\n   * @param response\n   * @param finalOptions\n   * @param localState\n   * @private\n   */\n  private async handleAuthResponse( response: any, finalOptions: IPlusAuthClientOptions,\n    localState: Record<string, any> = {} ){\n    if ( response.code ){\n      return this.exchangeAuthorizationCode( {\n        redirect_uri:  finalOptions.redirect_uri,\n        client_id:     finalOptions.client_id,\n        code_verifier: localState.code_verifier,\n        grant_type:    'authorization_code',\n        code:          response.code,\n      } );\n    } else {\n      return response\n    }\n  }\n\n  /**\n   * Handle OAuth2 auth request result\n   * @param tokenResult\n   * @param authParams\n   * @param finalOptions\n   * @private\n   */\n  private async handleTokenResult( tokenResult: TokenResponse, authParams: AuthRequestOptions,\n    finalOptions: IPlusAuthClientOptions ){\n    await this.initialize( false )\n    let user: any = {}\n    if ( tokenResult.error ){\n      throw new AuthenticationError( tokenResult.error, tokenResult.error_description )\n    }\n    let parsedIDToken: any;\n    if ( tokenResult.id_token ){\n      parsedIDToken = await validateIdToken( tokenResult.id_token, authParams.nonce!, finalOptions )\n      if ( finalOptions.idTokenValidator && !await finalOptions.idTokenValidator( tokenResult.id_token ) ){\n        return Promise.reject( new InvalidIdTokenError( 'Id Token validation failed' ) )\n      }\n      Object.keys( parsedIDToken ).forEach( key => {\n        if ( !nonUserClaims.includes( key as any ) ){\n          user[key] = parsedIDToken[key]\n        }\n      } )\n    }\n\n    if ( tokenResult.access_token ) {\n      if ( finalOptions.requestUserInfo && this.options.endpoints?.userinfo_endpoint ) {\n        const userInfoResult = await this.fetchUserInfo( tokenResult.access_token )\n        if ( !userInfoResult.error ){\n          user = { ...user, ...userInfoResult }\n        }\n      }\n    }\n\n    return {\n      authParams,\n      user,\n      ...tokenResult,\n      id_token:     parsedIDToken,\n      id_token_raw: tokenResult.id_token,\n      scope:        tokenResult.scope || authParams.scope,\n    }\n  }\n\n  /**\n   * Load stored state\n   *\n   * @param state\n   * @private\n   */\n  private async loadState( state: string ){\n    const rawStoredState = await this.stateStore.get( state )\n    if ( !rawStoredState ){\n      return Promise.reject( new AuthenticationError( 'State not found' ) )\n    } else {\n      await this.stateStore.del( state )\n    }\n    return rawStoredState\n  }\n\n  /**\n   * Load user info by making request to providers `userinfo_endpoint`\n   *\n   * @param accessToken\n   * @private\n   */\n  private async fetchUserInfo( accessToken: string ){\n    return this.http( {\n      method:      'GET',\n      url:         `${ this.options.endpoints!.userinfo_endpoint }`,\n      requestType: 'json',\n      headers:     {\n        'Authorization': `Bearer ${ accessToken }`\n      }\n    } )\n  }\n\n  /**\n   * Start monitoring End-User's session if the OIDC provider supports session management. See more at [OIDC Session\n   * Management](https://openid.net/specs/openid-connect-session-1_0.html)\n   *\n   * @param sub End-User's id to for monitoring session\n   * @param session_state string that represents the End-User's login state at the OP\n   */\n  private monitorSession( { sub, session_state }: SessionMonitorOptions ){\n    const { client_id, endpoints } = this.options\n\n    if ( !endpoints?.check_session_iframe ){\n      console.warn( '\"check_session_iframe\" endpoint missing or session management is not supported by provider' )\n      return\n    }\n    if ( !this.sessionCheckerFrame ){\n      const sessionCheckCallback = async ( err: any )=>{\n        if ( err ){\n          this.emit( Events.USER_LOGOUT )\n        } else {\n          this.emit( Events.SESSION_CHANGE )\n          try {\n            await this.silentLogin( {}, {} )\n            const storedAuth = await this.authStore.get( 'auth' )\n            if ( storedAuth ){\n              if ( storedAuth?.user.sub === sub ){\n                this.sessionCheckerFrame!.start( storedAuth.session_state )\n              }\n            } else {\n              this.emit( Events.USER_LOGOUT, null )\n            }\n          } catch ( e ) {\n            this.emit( Events.USER_LOGOUT )\n            return\n          }\n        }\n      }\n\n      this.sessionCheckerFrame = createSessionCheckerFrame( {\n        url:           endpoints.check_session_iframe,\n        client_id:     client_id,\n        callback:      sessionCheckCallback,\n        checkInterval: this.options.checkSessionInterval,\n      } )\n    }\n\n    this.sessionCheckerFrame.start( session_state )\n  }\n\n  private async onUserLogin( authObj: any ){\n    const { expires_in, user, scope, access_token, id_token, refresh_token, session_state, id_token_raw } = authObj\n    await this.authStore.set( 'auth', authObj )\n\n    this.user = user\n    this.scopes = scope?.split( ' ' );\n    this.accessToken = access_token\n    this.idToken = id_token\n    this.idTokenRaw = id_token_raw\n    this.refreshToken = refresh_token\n\n    this.emit( Events.USER_LOGIN, authObj )\n    if ( !window?.frameElement ) {\n      if ( this.options.checkSession ) {\n        this.monitorSession( { sub: user.sub || user.id, session_state } )\n      }\n\n      if ( expires_in !== undefined && this.options.autoSilentRenew ){\n        const expiration = Number( expires_in ) - this.options.secondsToRefreshAccessTokenBeforeExp!\n        if ( expiration >= 0 ){\n          this._accessTokenExpireTimer!.start( expiration, async ()=> {\n            this.synchronizer.CallOnce( 'silent-login', async () => {\n              try {\n                await this.silentLogin()\n                this.emit( Events.SILENT_RENEW_SUCCESS, null )\n              } catch ( e ) {\n                this.emit( Events.SILENT_RENEW_ERROR, e )\n              }\n            } )\n          } )\n        }\n      }\n    }\n  }\n}\n","import { OIDCClient } from './client';\nimport { IPlusAuthClientOptions } from './interfaces';\n\nexport * from './interfaces'\nexport * from './client'\nexport * from './constants'\nexport * from './helpers'\nexport * from './errors'\n\n/**\n * Create OIDC client with initializing it. It resolves issuer metadata, jwks keys and check if user is\n * authenticated in OpenId Connect provider.\n */\nexport default function createOIDCClient( options: IPlusAuthClientOptions ): Promise<OIDCClient>{\n  return new OIDCClient( options ).initialize()\n}\n"],"names":["Events","USER_LOGOUT","USER_LOGIN","SILENT_RENEW_SUCCESS","SILENT_RENEW_ERROR","SESSION_CHANGE","OIDCClientError","Error","error","error_description","name","AuthenticationError","constructor","state","error_uri","InvalidJWTError","details","InvalidIdTokenError","InteractionCancelled","StateStore","prefix","LocalStorageStateStore","get","key","Promise","resolve","value","window","localStorage","getItem","JSON","parse","set","setItem","stringify","del","removeItem","clear","before","i","storedKeys","length","substring","push","storedItem","created_at","e","InMemoryStateStore","map","forEach","val","ind","delete","Map","EventEmitter","once","event","fn","on","onArgs","off","apply","cb","callbacks","splice","emit","args","cbs","slice","len","Timer","start","duration","callback","expiration","now","_expiration","_timerHandle","stop","timerDuration","setInterval","clearInterval","currentTimeInMillisFunc","Date","createHiddenFrame","iframe","document","createElement","style","width","height","position","visibility","display","title","ariaHidden","runIframe","url","options","reject","onLoadTimeoutId","timeoutSetTimeoutId","setTimeout","removeIframe","timeout","iframeEventHandler","origin","eventOrigin","data","type","eventSource","source","close","resp","response","clearTimeout","body","contains","removeChild","removeEventListener","onLoadTimeout","addEventListener","appendChild","setAttribute","onload","isValidIssuer","issuer","URL","includes","protocol","search","hash","buildEncodedQueryString","obj","appendable","ret","d","hasOwnProperty","encodeURIComponent","join","parseQueryUrl","result","trim","replace","params","split","paramAndValue","parts","decodeURIComponent","shift","urlSafe","buffer","encoded","fromByteArray","Uint8Array","request","headers","method","requestType","fetch","then","json","catch","CHARSET","getRandomBytes","n","crypto","self","msCrypto","QUOTA","a","getRandomValues","subarray","Math","min","generateRandom","out","charsLen","maxByte","buf","ceil","randomByte","charAt","deriveChallenge","code","subtle","digest","TextEncoder","encode","urlDecodeB64","input","atob","c","charCodeAt","toString","parseJwt","jwt","header","payload","validateIdToken","id_token","nonce","validateJwt","message","isIdToken","clockSkew","currentTimeInMillis","audience","client_id","iss","aud","Array","isArray","indexOf","azp","lowerNow","upperNow","floor","iat","nbf","exp","nonUserClaims","DEFAULT_CHECK_INTERVAL","createSessionCheckerFrame","checkInterval","internalSessionState","idx","frameOrigin","substr","frame","timer","load","sessionState","send","contentWindow","postMessage","isResponseType","response_type","filter","rt","isScopeIncluded","scope","scopes","openPopup","left","screenX","innerWidth","top","screenY","innerHeight","open","runPopup","popup","location","href","timeoutId","closeId","clearHandlers","messageListener","closed","currentTabId","performance","random","handlers","TabUtils","CallOnce","lockname","localStorageKey","keyPrefix","BroadcastMessageToAllTabs","messageId","eventData","x","timeStamp","getTime","OnBroadcastMessage","ev","newValue","messageData","kid","OIDCClient","initialize","checkLogin","initialized","__initializePromise","stateStore","init","authStore","endpoints","Object","keys","fetchFromIssuer","frameElement","silentLogin","undefined","login","localState","assign","createAuthRequest","loginWithPopup","popupOptions","response_mode","request_type","authParams","tokenResult","handleAuthResponse","authObject","handleTokenResult","session_state","synchronizer","loginCallback","parsedUrl","responseParams","rawStoredState","loadState","parent","host","opener","logout","localOnly","storedAuth","id_token_hint","id_token_raw","createLogoutRequest","revokeToken","token","revocation_endpoint","finalOptions","client_secret","token_type_hint","http","finalState","silent_redirect_uri","redirect_uri","useRefreshToken","refresh_token","exchangeRefreshToken","authUrl","prompt","silentRequestTimeout","getAccessToken","access_token","getRefreshToken","getIdToken","getIdTokenRaw","getScopes","getUser","user","isLoggedIn","existsOnLocal","authorization_endpoint","code_verifier","ui_locales","claims","claims_locales","acr_values","registration","login_hint","web_message_uri","web_message_target","extraParams","code_challenge","code_challenge_method","fragment","authParamsString","end_session_endpoint","logoutParams","post_logout_redirect_uri","extraLogoutParams","exchangeAuthorizationCode","token_endpoint","extraTokenHeaders","extraTokenParams","grant_type","requestUrl","issuer_metadata","prop","endsWith","parsedIDToken","idTokenValidator","requestUserInfo","userinfo_endpoint","userInfoResult","fetchUserInfo","accessToken","sub","check_session_iframe","console","warn","sessionCheckerFrame","sessionCheckCallback","err","checkSessionInterval","onUserLogin","authObj","expires_in","idToken","idTokenRaw","refreshToken","checkSession","monitorSession","id","autoSilentRenew","Number","secondsToRefreshAccessTokenBeforeExp","_accessTokenExpireTimer","btoa","httpClient","bind","createOIDCClient"],"mappings":"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"}