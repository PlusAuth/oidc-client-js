{"version":3,"file":"oidc-client.esm.js","sources":["../src/constants/events.ts","../src/errors.ts","../src/helpers/state_manager/state_store.ts","../src/helpers/state_manager/local_storage.ts","../src/helpers/state_manager/in_memory.ts","../src/helpers/event_emitter.ts","../src/helpers/timer.ts","../src/utils/iframe.ts","../node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js","../src/utils/url.ts","../src/utils/request.ts","../src/utils/jose.ts","../src/utils/check_session_iframe.ts","../src/utils/object.ts","../src/utils/oidc.ts","../src/utils/popup.ts","../src/utils/tab_utils.ts","../src/client.ts","../src/index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/indent */\nexport const Events = {\n  USER_LOGOUT: \"user_logout\",\n  USER_LOGIN: \"user_login\",\n  SILENT_RENEW_SUCCESS: \"silent_renew_success\",\n  SILENT_RENEW_ERROR: \"silent_renew_error\",\n  SESSION_CHANGE: \"session_change\",\n} as const\n\nexport type EventTypes =\n  | \"user_logout\"\n  | \"user_login\"\n  | \"silent_renew_success\"\n  | \"silent_renew_error\"\n  | \"session_change\"\n  | \"session_error\"\n","export class OIDCClientError extends Error {\n  error: string\n\n  error_description?: string\n\n  public constructor(error: string, error_description?: string) {\n    super(`${error}${(error_description && ` - ${error_description}`) || \"\"}`)\n    this.name = \"OIDCClientError\"\n    this.error = error\n    this.error_description = error_description\n  }\n}\n\nexport class AuthenticationError extends OIDCClientError {\n  state?: string\n\n  error_uri?: string\n\n  constructor(error: string, error_description?: string, state?: string, error_uri?: string) {\n    super(error, error_description)\n    this.name = \"AuthenticationError\"\n    this.state = state\n    this.error_uri = error_uri\n  }\n}\n\nexport class StateNotFound extends AuthenticationError {\n  state?: string\n\n  constructor(error: string, state?: string) {\n    super(error)\n    this.name = \"StateNotFound\"\n    this.state = state\n  }\n}\n\nexport class InvalidJWTError extends OIDCClientError {\n  constructor(details: string) {\n    super(details)\n    this.name = \"InvalidJWTError\"\n    this.error_description = details\n  }\n}\n\nexport class InvalidIdTokenError extends InvalidJWTError {\n  constructor(details: string) {\n    super(details)\n    this.name = \"InvalidIdTokenError\"\n  }\n}\n\nexport class InteractionCancelled extends OIDCClientError {\n  constructor(details: string) {\n    super(details)\n    this.name = \"InteractionCancelled\"\n  }\n}\n","export interface StateStore<T = Record<string, any>> {\n  init?(): Promise<StateStore<T>>\n}\n// biome-ignore  lint/suspicious/noUnsafeDeclarationMerging:\nexport abstract class StateStore<T = Record<string, any>> {\n  prefix: string\n\n  constructor(prefix = \"\") {\n    this.prefix = prefix\n  }\n\n  public abstract get(key: string): Promise<T | null>\n\n  public abstract set(key: string, value: T): Promise<void>\n\n  public abstract del(key: string): Promise<void>\n\n  public abstract clear(maxAge?: number): Promise<void>\n}\n","import { StateStore } from \"./state_store\"\n\nexport class LocalStorageStateStore<T = any> extends StateStore<T> {\n  constructor(prefix = \"pa_oidc.\") {\n    super(prefix)\n  }\n\n  get(key: string) {\n    return new Promise<T | null>((resolve) => {\n      const value = window.localStorage.getItem(this.prefix + key)\n      if (value) {\n        resolve(JSON.parse(value))\n      } else {\n        resolve(null)\n      }\n    })\n  }\n\n  set(key: string, value: T) {\n    return new Promise<void>((resolve) => {\n      window.localStorage.setItem(this.prefix + key, JSON.stringify(value))\n      resolve()\n    })\n  }\n\n  del(key: string) {\n    return new Promise<void>((resolve) => {\n      window.localStorage.removeItem(this.prefix + key)\n      resolve()\n    })\n  }\n\n  clear(before?: number): Promise<void> {\n    return new Promise<void>((resolve) => {\n      let i\n      const storedKeys: string[] = []\n      for (i = 0; i < window.localStorage.length; i++) {\n        const key = window.localStorage.key(i)\n        // items only created by oidc client\n        if (key?.substring(0, this.prefix.length) === this.prefix) {\n          storedKeys.push(key)\n        }\n      }\n      for (i = 0; i < storedKeys.length; i++) {\n        if (before) {\n          try {\n            const storedItem = JSON.parse(window.localStorage.getItem(storedKeys[i])!)\n            if (storedItem.created_at < before) {\n              window.localStorage.removeItem(storedKeys[i])\n            }\n          } catch (e) {}\n        } else {\n          window.localStorage.removeItem(storedKeys[i])\n        }\n      }\n      resolve()\n    })\n  }\n}\n","import { StateStore } from \"./state_store\"\n\nexport class InMemoryStateStore<T = any> extends StateStore<T> {\n  map = new Map()\n\n  clear(before?: number) {\n    if (before) {\n      this.map.forEach((val, ind) => {\n        if (val.created_at < before) {\n          this.map.delete(ind)\n        }\n      })\n      return Promise.resolve()\n    }\n    return Promise.resolve(this.map.clear())\n  }\n\n  del(key: string) {\n    this.map.delete(key)\n    return Promise.resolve()\n  }\n\n  get(key: string) {\n    return Promise.resolve(this.map.get(key) || null)\n  }\n\n  set(key: string, value: any) {\n    this.map.set(key, value)\n    return Promise.resolve()\n  }\n}\n","export type Listener = (...args: any) => void\n\nexport class EventEmitter<T extends string> {\n  callbacks: Record<string, any[]>\n\n  constructor() {\n    this.callbacks = {}\n  }\n\n  once(event: T, fn: (...args: any[]) => void) {\n    function on(this: EventEmitter<any>, ...onArgs: any[]) {\n      this.off(event, on)\n      fn.apply(this, onArgs)\n    }\n    on.fn = fn\n    this.on(event, on)\n    return this\n  }\n\n  on(event: T, cb: (...args: any[]) => void) {\n    if (!this.callbacks[`$${event}`]) this.callbacks[`$${event}`] = []\n    this.callbacks[`$${event}`].push(cb)\n    return this\n  }\n\n  off(event?: T, fn?: (...args: any[]) => void) {\n    if (!event) {\n      this.callbacks = {}\n      return this\n    }\n\n    // specific event\n    const callbacks = this.callbacks[`$${event}`]\n    if (!callbacks) return this\n\n    // remove all handlers\n    if (!fn) {\n      delete this.callbacks[`$${event}`]\n      return this\n    }\n\n    for (let i = 0; i < callbacks.length; i++) {\n      const cb = callbacks[i]\n      if (cb === fn || cb.fn === fn) {\n        callbacks.splice(i, 1)\n        break\n      }\n    }\n\n    // Remove event specific arrays for event types that no\n    // one is subscribed for to avoid memory leak.\n    if (callbacks.length === 0) {\n      delete this.callbacks[`$${event}`]\n    }\n\n    return this\n  }\n\n  emit(event: T, ...args: any[]) {\n    let cbs = this.callbacks[`$${event}`]\n    if (cbs) {\n      cbs = cbs.slice(0)\n      for (let i = 0, len = cbs.length; i < len; ++i) {\n        cbs[i].apply(this, args)\n      }\n    }\n    return this\n  }\n}\n","export class Timer {\n  private now: () => number\n\n  private _timerHandle: any\n\n  private _expiration!: number\n\n  constructor(currentTimeInMillisFunc = () => Date.now()) {\n    this.now = currentTimeInMillisFunc\n  }\n\n  start(duration: number, callback: () => void) {\n    if (duration <= 0) {\n      duration = 1\n    }\n    const expiration = this.now() / 1000 + duration\n    if (this._expiration === expiration && this._timerHandle) {\n      return\n    }\n\n    this.stop()\n\n    this._expiration = expiration\n\n    // prevent device sleep and delayed timers\n    let timerDuration = 5\n    if (duration < timerDuration) {\n      timerDuration = duration\n    }\n    this._timerHandle = setInterval(() => {\n      if (this._expiration <= this.now() / 1000) {\n        this.stop()\n        callback()\n      }\n    }, timerDuration * 1000)\n  }\n\n  stop() {\n    if (this._timerHandle) {\n      clearInterval(this._timerHandle)\n      this._timerHandle = null\n    }\n  }\n}\n","import { AuthenticationError, OIDCClientError } from \"../errors\"\nimport type { IFrameOptions } from \"../interfaces\"\n\nexport function createHiddenFrame() {\n  const iframe = window.document.createElement(\"iframe\")\n  iframe.style.width = \"0\"\n  iframe.style.height = \"0\"\n  iframe.style.position = \"absolute\"\n  iframe.style.visibility = \"hidden\"\n  iframe.style.display = \"none\"\n\n  iframe.title = \"__pa_helper__hidden\"\n  iframe.ariaHidden = \"true\"\n\n  return iframe\n}\n\nexport function runIframe(url: string, options: IFrameOptions) {\n  return new Promise<any>((resolve, reject) => {\n    let onLoadTimeoutId: any = null\n    const iframe = createHiddenFrame()\n\n    const timeoutSetTimeoutId = setTimeout(\n      () => {\n        reject(new OIDCClientError(\"Timed out\"))\n        removeIframe()\n      },\n      (options.timeout || 10) * 1000,\n    )\n\n    const iframeEventHandler = (e: MessageEvent) => {\n      if (e.origin !== options.eventOrigin) return\n      if (!e.data || e.data.type !== \"authorization_response\") return\n      const eventSource = e.source\n      if (eventSource) {\n        ;(<any>eventSource).close()\n      }\n\n      const resp = e.data.response || e.data\n      resp.error\n        ? reject(\n            new AuthenticationError(resp.error, resp.error_description, resp.state, resp.error_uri),\n          )\n        : resolve(e.data)\n      clearTimeout(timeoutSetTimeoutId)\n      removeIframe()\n    }\n\n    const removeIframe = () => {\n      if (onLoadTimeoutId != null) {\n        clearTimeout(onLoadTimeoutId)\n      }\n      if (window.document.body.contains(iframe)) {\n        window.document.body.removeChild(iframe)\n      }\n      window.removeEventListener(\"message\", iframeEventHandler, false)\n    }\n\n    const onLoadTimeout = () =>\n      setTimeout(() => {\n        reject(new OIDCClientError(\"Could not complete silent authentication\", url))\n        removeIframe()\n      }, 300)\n\n    window.addEventListener(\"message\", iframeEventHandler, false)\n    window.document.body.appendChild(iframe)\n    iframe.setAttribute(\"src\", url)\n\n    /**\n     * In case of wrong client id, wrong redirect_uri, in short when redirect did not happen\n     * we assume flow failed.\n     */\n    iframe.onload = () => {\n      onLoadTimeoutId = onLoadTimeout()\n    }\n  })\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","import { fromByteArray } from \"base64-js\"\n\nexport function isValidIssuer(issuer: string) {\n  try {\n    const url = new URL(issuer)\n    if (![\"http:\", \"https:\"].includes(url.protocol)) {\n      return false\n    }\n    if (url.search !== \"\" || url.hash !== \"\") {\n      return false\n    }\n    return true\n  } catch (e) {\n    return false\n  }\n}\nexport function buildEncodedQueryString(obj?: Record<string, any>, appendable = true) {\n  if (!obj) return \"\"\n  const ret: string[] = []\n  for (const d in obj) {\n    if (obj.hasOwnProperty(d) && obj[d]) {\n      ret.push(\n        `${encodeURIComponent(d)}=${encodeURIComponent(\n          typeof obj[d] === \"object\" ? JSON.stringify(obj[d]) : obj[d]!,\n        )}`,\n      )\n    }\n  }\n  return `${appendable ? \"?\" : \"\"}${ret.join(\"&\")}`\n}\n\nexport function parseQueryUrl(value: string) {\n  const result: Record<string, string> = {}\n  value = value.trim().replace(/^(\\?|#|&)/, \"\")\n  const params = value.split(\"&\")\n  for (let i = 0; i < params.length; i += 1) {\n    const paramAndValue = params[i]\n    const parts = paramAndValue.split(\"=\")\n    const key = decodeURIComponent(parts.shift()!)\n    const value = parts.length > 0 ? parts.join(\"=\") : \"\"\n    result[key] = decodeURIComponent(value)\n  }\n  return result\n}\n\nexport function urlSafe(buffer: Uint8Array): string {\n  const encoded = fromByteArray(new Uint8Array(buffer))\n  return encoded.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\")\n}\n","import { buildEncodedQueryString } from \"./url\"\n\nexport interface RequestOptions {\n  body?: Record<string, string | number | null | undefined>\n  headers?: Record<string, string>\n  method: \"GET\" | \"POST\" | \"PATCH\" | \"TRACE\" | \"OPTIONS\" | \"HEAD\"\n  requestType?: \"form\" | \"json\"\n  url: string\n}\n\nexport function request(options: RequestOptions): Promise<any> {\n  let body: any = null\n  let headers = options.headers || {}\n  if (options.method === \"POST\") {\n    headers = {\n      \"Content-Type\":\n        options.requestType === \"form\"\n          ? \"application/x-www-form-urlencoded;charset=UTF-8\"\n          : \"application/json;charset=UTF-8\",\n      ...headers,\n    }\n  }\n  if (options.body) {\n    body =\n      options.requestType === \"form\"\n        ? buildEncodedQueryString(options.body, false)\n        : JSON.stringify(options.body)\n  }\n\n  return new Promise((resolve, reject) => {\n    fetch(options.url, {\n      method: options.method,\n      body: body,\n      headers,\n    })\n      .then((value: Response) => resolve(value.json()))\n      .catch(reject)\n  })\n}\n","import { InvalidIdTokenError, InvalidJWTError, OIDCClientError } from \"../errors\"\nimport type { IPlusAuthClientOptions, JWTValidationOptions, ParsedJWT } from \"../interfaces\"\n\nimport { urlSafe } from \"./url\"\n\nconst CHARSET = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"\n\nfunction getRandomBytes(n: number) {\n  // @ts-ignore\n  const crypto = self.crypto || self.msCrypto\n  const QUOTA = 65536\n  const a = new Uint8Array(n)\n  for (let i = 0; i < n; i += QUOTA) {\n    crypto.getRandomValues(a.subarray(i, i + Math.min(n - i, QUOTA)))\n  }\n  return a\n}\n\nexport function generateRandom(length: number) {\n  let out = \"\"\n  const charsLen = CHARSET.length\n  const maxByte = 256 - (256 % charsLen)\n  while (length > 0) {\n    const buf = getRandomBytes(Math.ceil((length * 256) / maxByte))\n    for (let i = 0; i < buf.length && length > 0; i++) {\n      const randomByte = buf[i]\n      if (randomByte < maxByte) {\n        out += CHARSET.charAt(randomByte % charsLen)\n        length--\n      }\n    }\n  }\n  return out\n}\n\nexport function deriveChallenge(code: string): Promise<string> {\n  if (code.length < 43 || code.length > 128) {\n    return Promise.reject(new OIDCClientError(`Invalid code length: ${code.length}`))\n  }\n\n  return new Promise((resolve, reject) => {\n    crypto.subtle.digest(\"SHA-256\", new TextEncoder().encode(code)).then(\n      (buffer) => {\n        return resolve(urlSafe(new Uint8Array(buffer)))\n      },\n      (error) => {\n        /* istanbul ignore next */\n        return reject(error)\n      },\n    )\n  })\n}\n// https://datatracker.ietf.org/doc/html/rfc4648#section-5\nexport const urlDecodeB64 = (input: string) =>\n  decodeURIComponent(\n    atob(input.replace(/_/g, \"/\").replace(/-/g, \"+\"))\n      .split(\"\")\n      .map((c) => {\n        return `%${`00${c.charCodeAt(0).toString(16)}`.slice(-2)}`\n      })\n      .join(\"\"),\n  )\n\nexport function parseJwt(jwt: string): ParsedJWT {\n  try {\n    const parts = jwt.split(\".\")\n    if (parts.length !== 3) {\n      throw new Error(\"Wrong JWT format\")\n    }\n    return {\n      header: JSON.parse(urlDecodeB64(parts[0])),\n      payload: JSON.parse(urlDecodeB64(parts[1])),\n    }\n  } catch (e) {\n    throw new InvalidJWTError(\"Failed to parse jwt\")\n  }\n}\n\nexport function validateIdToken(id_token: string, nonce: string, options: IPlusAuthClientOptions) {\n  if (!nonce) {\n    throw new OIDCClientError(\"No nonce on state\")\n  }\n\n  try {\n    const jwt = parseJwt(id_token)\n\n    if (nonce !== jwt.payload.nonce) {\n      throw new Error(`Invalid nonce in id_token: ${jwt.payload.nonce}`)\n    }\n\n    validateJwt(id_token, options, true)\n\n    // @ts-ignore\n    if (!jwt.payload[\"sub\"]) {\n      throw new Error(\"No Subject (sub) present in id_token\")\n    }\n\n    return jwt.payload\n  } catch (e) {\n    throw new InvalidIdTokenError(e.message)\n  }\n}\n\nexport function validateJwt(jwt: string, options: JWTValidationOptions, isIdToken = false) {\n  // eslint-disable-next-line prefer-const\n  let { clockSkew, currentTimeInMillis, issuer, audience, client_id } = options\n  if (!clockSkew) {\n    clockSkew = 0\n  }\n  const now = (currentTimeInMillis?.() || Date.now()) / 1000\n\n  const payload = parseJwt(jwt).payload\n\n  if (!payload.iss) {\n    throw new InvalidJWTError(\"Issuer (iss) was not provided\")\n  }\n  if (payload.iss !== issuer) {\n    throw new InvalidJWTError(`Invalid Issuer (iss) in token: ${payload.iss}`)\n  }\n\n  if (!payload.aud) {\n    throw new InvalidJWTError(\"Audience (aud) was not provided\")\n  }\n\n  // Audience must be equal to client_id in id_token\n  // https://openid.net/specs/openid-connect-core-1_0.html#IDToken\n  if (\n    Array.isArray(payload.aud)\n      ? payload.aud.indexOf(isIdToken ? client_id : audience || client_id) === -1\n      : payload.aud !== (isIdToken ? client_id : audience || client_id)\n  ) {\n    throw new InvalidJWTError(`Invalid Audience (aud) in token: ${payload.aud}`)\n  }\n\n  if (payload.azp && payload.azp !== client_id) {\n    throw new InvalidJWTError(`Invalid Authorized Party (azp) in token: ${payload.azp}`)\n  }\n\n  const lowerNow = Math.ceil(now + clockSkew)\n  const upperNow = Math.floor(now - clockSkew)\n\n  if (!payload.iat) {\n    throw new InvalidJWTError(\"Issued At (iat) was not provided\")\n  }\n\n  if (lowerNow < Number(payload.iat)) {\n    throw new InvalidJWTError(`Issued At (iat) is in the future: ${payload.iat}`)\n  }\n\n  if (payload.nbf && lowerNow < Number(payload.nbf)) {\n    throw new InvalidJWTError(`Not Before time (nbf) is in the future: ${payload.nbf}`)\n  }\n\n  if (!payload.exp) {\n    throw new InvalidJWTError(\"Expiration Time (exp) was not provided\")\n  }\n  if (Number(payload.exp) < upperNow) {\n    throw new InvalidJWTError(`Expiration Time (exp) is in the past: ${payload.exp}`)\n  }\n\n  return payload\n}\n\n// Retrieved from https://www.iana.org/assignments/jwt/jwt.xhtml\nexport const nonUserClaims = [\n  \"iss\",\n  // 'sub',\n  \"aud\",\n  \"exp\",\n  \"nbf\",\n  \"iat\",\n  \"jti\",\n  \"azp\",\n  \"nonce\",\n  \"auth_time\",\n  \"at_hash\",\n  \"c_hash\",\n  \"acr\",\n  \"amr\",\n  \"sub_jwk\",\n  \"cnf\",\n  \"sip_from_tag\",\n  \"sip_date\",\n  \"sip_callid\",\n  \"sip_cseq_num\",\n  \"sip_via_branch\",\n  \"orig\",\n  \"dest\",\n  \"mky\",\n  \"events\",\n  \"toe\",\n  \"txn\",\n  \"rph\",\n  \"sid\",\n  \"vot\",\n  \"vtm\",\n  \"attest\",\n  \"origid\",\n  \"act\",\n  \"scope\",\n  \"client_id\",\n  \"may_act\",\n  \"jcard\",\n  \"at_use_nbr\",\n] as const\n","import type { SessionChecker, SessionCheckerOptions } from \"../interfaces\"\n\nimport { createHiddenFrame } from \"./iframe\"\n\nconst DEFAULT_CHECK_INTERVAL = 2000\n\nexport function createSessionCheckerFrame(options: SessionCheckerOptions): SessionChecker {\n  const { url, callback, client_id, checkInterval } = options\n  let internalSessionState: string | null\n  const idx = url.indexOf(\"/\", url.indexOf(\"//\") + 2)\n  const frameOrigin = url.substr(0, idx)\n\n  const frame = createHiddenFrame()\n\n  let timer: any\n\n  const load = () => {\n    return new Promise((resolve) => {\n      window.document.body.appendChild(frame)\n      window.addEventListener(\"message\", iframeEventHandler, false)\n      frame.onload = () => {\n        resolve(null)\n      }\n    })\n  }\n\n  const start = (sessionState: string) => {\n    load().then(() => {\n      if (sessionState && internalSessionState !== sessionState) {\n        stop()\n        internalSessionState = sessionState\n        const send = () => {\n          frame.contentWindow!.postMessage(`${client_id} ${internalSessionState}`, frameOrigin)\n        }\n        send()\n        timer = window.setInterval(send, checkInterval || DEFAULT_CHECK_INTERVAL)\n      }\n    })\n  }\n\n  const stop = () => {\n    internalSessionState = null\n    if (timer) {\n      window.clearInterval(timer)\n      timer = null\n    }\n  }\n\n  const iframeEventHandler = (e: MessageEvent) => {\n    if (e.origin === frameOrigin && e.source === frame.contentWindow) {\n      if (e.data === \"error\") {\n        stop()\n        callback(e.data)\n      } else if (e.data === \"changed\") {\n        stop()\n        callback()\n      }\n    }\n  }\n\n  frame.setAttribute(\"src\", url)\n\n  return {\n    stop,\n    start,\n  }\n}\n","type RequiredAndNotNull<T> = {\n  [P in keyof T]-?: Exclude<T[P], undefined>\n}\n\n/**\n * not suitable for every object but it is enough for this library\n * @param object\n */\nexport function cleanUndefined<T extends Record<string, any>>(object: T) {\n  if (!object || typeof object !== \"object\") {\n    return object\n  }\n  return JSON.parse(JSON.stringify(object)) as RequiredAndNotNull<T>\n}\n\nfunction merge(previousValue: any, currentValue: any) {\n  for (const p in currentValue) {\n    if (currentValue[p] !== undefined) {\n      if (typeof currentValue[p] === \"object\" && currentValue[p].constructor.name === \"Object\") {\n        previousValue[p] = merge(previousValue[p] || {}, currentValue[p])\n      } else {\n        previousValue[p] = currentValue[p]\n      }\n    }\n  }\n  return previousValue\n}\nexport function mergeObjects<T extends object, U>(obj1: T, obj2: U): RequiredAndNotNull<T & U>\nexport function mergeObjects<T extends object, U, K>(\n  obj1: T,\n  obj2: U,\n  obj3: K,\n): RequiredAndNotNull<T & U & K>\nexport function mergeObjects(...objects: any[]) {\n  return objects.reduce((previousValue, currentValue) => {\n    return merge(previousValue || {}, currentValue)\n  }, {}) as any\n}\n","export const isResponseType = (type: string, response_type?: string) =>\n  response_type && response_type.split(/\\s+/g).filter((rt) => rt === type).length > 0\n\nexport const isScopeIncluded = (scope: string, scopes?: string) =>\n  scopes && scopes.split(\" \").indexOf(scope) > -1\n","import { InteractionCancelled, OIDCClientError } from \"../errors\"\nimport type { PopupOptions } from \"../interfaces\"\n\nconst openPopup = (url: string, width = 400, height = 600) => {\n  const left = window.screenX + (window.innerWidth - width) / 2\n  const top = window.screenY + (window.innerHeight - height) / 2\n\n  return window.open(\n    url,\n    \"oidc-login-popup\",\n    `left=${left},top=${top},width=${width},height=${height},resizable,scrollbars=yes,status=1`,\n  )\n}\n\nexport function runPopup(url: string, options: PopupOptions) {\n  let popup = options.popup\n\n  if (popup) {\n    popup.location.href = url\n  } else {\n    popup = openPopup(url)\n  }\n\n  if (!popup) {\n    /* istanbul ignore next */\n    throw new Error(\"Could not open popup\")\n  }\n\n  let timeoutId: any\n  let closeId: any\n\n  return new Promise<{ response: any; state: string }>((resolve, reject) => {\n    function clearHandlers() {\n      clearInterval(closeId)\n      clearTimeout(timeoutId)\n      window.removeEventListener(\"message\", messageListener)\n    }\n\n    timeoutId = setTimeout(\n      () => {\n        clearHandlers()\n        reject(new OIDCClientError(\"Timed out\"))\n      },\n      options.timeout || 60 * 1000,\n    )\n\n    closeId = setInterval(() => {\n      if (popup!.closed) {\n        clearHandlers()\n        reject(new InteractionCancelled(\"user closed popup\"))\n      }\n    }, 300)\n\n    window.addEventListener(\"message\", messageListener)\n\n    function messageListener(e: MessageEvent) {\n      if (!e.data || e.data.type !== \"authorization_response\") return\n      clearHandlers()\n      popup!.close()\n      const data = e.data.response || e.data\n      data.error ? reject(new OIDCClientError(data.error, data.error_description)) : resolve(e.data)\n    }\n  })\n}\n","/*\nJitbit TabUtils - helper for multiple browser tabs. version 1.0\nhttps://github.com/jitbit/TabUtils\n- executing \"interlocked\" function call - only once per multiple tabs\n- broadcasting a message to all tabs (including the current one) with some message \"data\"\n- handling a broadcasted message\nMIT license: https://github.com/jitbit/TabUtils/blob/master/LICENSE\n*/\n\nimport type { EventEmitter } from \"../helpers\"\n\nconst currentTabId = `${performance.now()}:${(Math.random() * 1000000000) | 0}`\nconst handlers: Record<string, any> = {}\n\nexport class TabUtils {\n  keyPrefix: string\n\n  private events: EventEmitter<any>\n\n  constructor(kid: string, fallbackEvents: EventEmitter<any>) {\n    this.keyPrefix = kid\n    this.events = fallbackEvents\n  }\n\n  //runs code only once in multiple tabs\n  //the lock holds for 4 seconds (in case the function is async and returns right away, for example, an ajax call intiated)\n  //then it is cleared\n  CallOnce(lockname: string, fn: () => void, timeout = 3000): void {\n    if (!lockname) throw \"empty lockname\"\n\n    if (!window.localStorage) {\n      //no local storage. old browser. screw it, just run the function\n      fn()\n      return\n    }\n\n    const localStorageKey = this.keyPrefix + lockname\n\n    localStorage.setItem(localStorageKey, currentTabId)\n    //re-read after a delay (after all tabs have saved their tabIDs into ls)\n    setTimeout(() => {\n      if (localStorage.getItem(localStorageKey) === currentTabId) fn()\n    }, 150)\n\n    //cleanup - release the lock after 3 seconds and on window unload (just in case user closed the window while the lock is still held)\n    setTimeout(() => {\n      localStorage.removeItem(localStorageKey)\n    }, timeout)\n  }\n\n  BroadcastMessageToAllTabs(messageId: string, eventData: any): void {\n    //now we also need to manually execute handler in the current tab too, because current tab does not get 'storage' events\n    try {\n      handlers[messageId](eventData)\n    } catch (x) {\n      //\"try\" in case handler not found\n    }\n\n    if (!window.localStorage) {\n      this.events.emit(messageId, eventData)\n      return //no local storage. old browser\n    }\n\n    const data = {\n      data: eventData,\n      timeStamp: new Date().getTime(),\n    } //add timestamp because overwriting same data does not trigger the event\n\n    //this triggers 'storage' event for all other tabs except the current tab\n    localStorage.setItem(`${this.keyPrefix}event${messageId}`, JSON.stringify(data))\n\n    //cleanup\n    setTimeout(() => {\n      localStorage.removeItem(`${this.keyPrefix}event${messageId}`)\n    }, 3000)\n  }\n\n  OnBroadcastMessage(messageId: string, fn: (data: any) => void): void {\n    handlers[messageId] = fn\n    if (!window.localStorage) {\n      this.events.on(messageId, fn)\n      return //no local storage. old browser\n    }\n\n    //first register a handler for \"storage\" event that we trigger above\n    window.addEventListener(\"storage\", (ev) => {\n      if (ev.key !== `${this.keyPrefix}event${messageId}`) return // ignore other keys\n      if (!ev.newValue) return //called by cleanup?\n      const messageData = JSON.parse(ev.newValue)\n      fn(messageData.data)\n    })\n  }\n}\n","import type { EventTypes } from \"./constants\"\nimport { Events } from \"./constants\"\n\nimport { AuthenticationError, InvalidIdTokenError, OIDCClientError, StateNotFound } from \"./errors\"\n\nimport type { StateStore } from \"./helpers\"\nimport { EventEmitter, InMemoryStateStore, LocalStorageStateStore } from \"./helpers\"\n\nimport { Timer } from \"./helpers/timer\"\nimport type {\n  AuthRecord,\n  AuthRequestOptions,\n  IEndpointConfiguration,\n  IPlusAuthClientOptions,\n  LogoutRequestOptions,\n  PopupOptions,\n  RevokeOptions,\n  SessionChecker,\n  SessionMonitorOptions,\n  StateRecord,\n  TokenRequestOption,\n  TokenResponse,\n  TokenType,\n} from \"./interfaces\"\n\nimport type { RequestOptions } from \"./utils\"\nimport {\n  buildEncodedQueryString,\n  createSessionCheckerFrame,\n  deriveChallenge,\n  generateRandom,\n  isValidIssuer,\n  nonUserClaims,\n  parseQueryUrl,\n  request,\n  runIframe,\n  validateIdToken,\n} from \"./utils\"\nimport { cleanUndefined, mergeObjects } from \"./utils/object\"\n\nimport { isResponseType, isScopeIncluded } from \"./utils/oidc\"\nimport { runPopup } from \"./utils/popup\"\nimport { TabUtils } from \"./utils/tab_utils\"\n\n/**\n * `OIDCClient` provides methods for interacting with OIDC/OAuth2 authorization server. Those methods are signing a\n * user in, signing out, managing the user's claims, checking session and managing tokens returned from the\n * OIDC/OAuth2 provider.\n *\n */\nexport class OIDCClient extends EventEmitter<EventTypes> {\n  options: IPlusAuthClientOptions\n\n  user?: any\n\n  scopes?: string[]\n\n  accessToken?: string\n\n  refreshToken?: string\n\n  idToken?: string\n\n  idTokenRaw?: string\n\n  issuer_metadata?: Record<string, any>\n\n  private readonly http: (options: RequestOptions) => Promise<any> | never\n\n  private synchronizer: TabUtils\n\n  private stateStore: StateStore<StateRecord>\n\n  private authStore: StateStore<AuthRecord>\n\n  private sessionCheckerFrame?: SessionChecker\n\n  private _accessTokenExpireTimer?: Timer\n\n  private initialized!: boolean\n\n  private __initializePromise!: Promise<any> | undefined\n\n  constructor(options: IPlusAuthClientOptions) {\n    super()\n    if (!isValidIssuer(options.issuer)) {\n      throw new OIDCClientError('\"issuer\" must be a valid uri.')\n    }\n\n    this.synchronizer = new TabUtils(btoa(options.issuer), this)\n\n    this.options = mergeObjects(\n      {\n        secondsToRefreshAccessTokenBeforeExp: 60,\n        autoSilentRenew: true,\n        checkSession: true,\n        stateLength: 10,\n        nonceLength: 10,\n      },\n      options,\n      {\n        // remove last slash for consistency across the lib\n        issuer: options.issuer.endsWith(\"/\") ? options.issuer.slice(0, -1) : options.issuer,\n      },\n    )\n\n    this.http = this.options.httpClient || request\n    this.stateStore =\n      this.options.stateStore || new LocalStorageStateStore<StateRecord>(\"pa_oidc.state.\")\n    this.authStore = this.options.authStore || new InMemoryStateStore<AuthRecord>()\n\n    if (this.options.autoSilentRenew) {\n      this._accessTokenExpireTimer = new Timer()\n    }\n\n    this.on(Events.USER_LOGOUT, async () => {\n      this.user = undefined\n      this.scopes = undefined\n      this.accessToken = undefined\n      this.idToken = undefined\n      this.refreshToken = undefined\n      await this.authStore.clear()\n    })\n\n    this.synchronizer.OnBroadcastMessage(Events.USER_LOGIN, this.onUserLogin.bind(this))\n  }\n\n  /**\n   * Initialize the library with this method. It resolves issuer configuration, jwks keys which are necessary for\n   * validating tokens returned from provider and checking if a user is already authenticated in provider.\n   *\n   * @param checkLogin Make this `false` if you don't want to check user authorization status in provider while\n   * initializing. Defaults to `true`\n   */\n  async initialize(checkLogin = true): Promise<OIDCClient> | never {\n    if (this.initialized) {\n      return this\n    }\n\n    if (this.__initializePromise) {\n      return this.__initializePromise\n    }\n    this.__initializePromise = new Promise(async (resolve, reject) => {\n      try {\n        if (this.stateStore.init) {\n          await this.stateStore.init()\n        }\n        if (this.authStore.init) {\n          await this.authStore.init()\n        }\n\n        if (!this.options.endpoints || Object.keys(this.options.endpoints).length === 0) {\n          await this.fetchFromIssuer()\n        }\n        this.initialized = true\n\n        if (checkLogin) {\n          try {\n            if (!window?.frameElement) {\n              await this.silentLogin()\n            }\n          } catch (e) {\n            this.emit(Events.SILENT_RENEW_ERROR, e)\n            await this.authStore.clear()\n          }\n        } else {\n          const localAuth = await this.authStore.get(\"auth\")\n          if (localAuth) {\n            await this.onUserLogin(localAuth, true)\n          }\n        }\n        resolve(this)\n      } catch (e) {\n        if (e instanceof OIDCClientError) {\n          reject(e)\n        } else {\n          reject(new OIDCClientError(e.message))\n        }\n      } finally {\n        this.__initializePromise = undefined\n      }\n    })\n\n    return this.__initializePromise\n  }\n\n  /**\n   * Redirect to provider's authorization endpoint using provided parameters. You can override any parameter defined\n   * in `OIDCClient`. If you don't provide `state`, `nonce` or `code_verifier` they will be generated automatically\n   * in a random and secure way.\n   *\n   * @param options\n   * @param localState\n   */\n  async login(options: Partial<AuthRequestOptions> = {}, localState: Record<string, any> = {}) {\n    window.location.assign(await this.createAuthRequest(options, localState))\n  }\n\n  /**\n   * Open a popup with the provider's authorization endpoint using provided parameters. You can override any\n   * parameter defined in `OIDCClient`. If you don't provide `state`, `nonce` or `code_verifier` they will be\n   * generated automatically in a random and secure way. You can also override popup options.\n   *\n   * NOTE: Most browsers block popups if they are not happened as a result of user actions. In order to display\n   * login popup you must call this method in an event handler listening for a user action like button click.\n   *\n   * @param options\n   * @param popupOptions\n   */\n  async loginWithPopup(options: Partial<AuthRequestOptions> = {}, popupOptions: PopupOptions = {}) {\n    const url = await this.createAuthRequest({\n      response_mode: \"fragment\",\n      ...options,\n      display: \"popup\",\n      request_type: \"p\",\n    })\n    const { response, state } = await runPopup(url, popupOptions)\n    const { authParams, localState } =\n      !state || typeof state === \"string\" ? await this.loadState(state || response.state) : state\n    const tokenResult = await this.handleAuthResponse(response, authParams, localState)\n    const authObject = await this.handleTokenResult(\n      tokenResult,\n      authParams,\n      mergeObjects(this.options, authParams),\n    )\n    authObject.session_state = response.session_state\n    this.synchronizer.BroadcastMessageToAllTabs(Events.USER_LOGIN, authObject)\n    return localState\n  }\n\n  /**\n   * After a user successfully authorizes an application, the authorization server will redirect the user back to\n   * the application with either an authorization code or access token in the URL. In the callback page you should\n   * call this method.\n   *\n   * @param url Full url which contains authorization request result parameters. Defaults to `window.location.href`\n   */\n  async loginCallback(url: string = window?.location?.href) {\n    if (!url) {\n      return Promise.reject(new OIDCClientError(\"Url must be passed to handle login redirect\"))\n    }\n    let parsedUrl: URL\n    try {\n      parsedUrl = new URL(url)\n    } catch (e) {\n      return Promise.reject(new OIDCClientError(`Invalid callback url passed: \"${url}\"`))\n    }\n\n    const responseParams = parseQueryUrl(parsedUrl.search || parsedUrl.hash)\n    const rawStoredState = await this.loadState(responseParams.state)\n    const { authParams, localState, request_type } = rawStoredState\n    url = url || window.location.href\n    switch (request_type) {\n      case \"s\":\n        if (window?.frameElement) {\n          if (url) {\n            window.parent.postMessage(\n              {\n                type: \"authorization_response\",\n                response: responseParams,\n                state: rawStoredState,\n              },\n              `${location.protocol}//${location.host}`,\n            )\n          }\n        }\n        return\n      case \"p\":\n        if (window.opener && url) {\n          window.opener.postMessage(\n            {\n              type: \"authorization_response\",\n              response: responseParams,\n              state: rawStoredState,\n            },\n            `${location.protocol}//${location.host}`,\n          )\n        }\n        return\n      default: {\n        if (responseParams.error) {\n          return Promise.reject(\n            new AuthenticationError(responseParams.error, responseParams.error_description),\n          )\n        }\n        const tokenResult = await this.handleAuthResponse(responseParams, authParams, localState)\n        const authObject = await this.handleTokenResult(\n          tokenResult,\n          authParams,\n          mergeObjects(this.options, authParams),\n        )\n        authObject.session_state = responseParams.session_state\n        this.synchronizer.BroadcastMessageToAllTabs(Events.USER_LOGIN, authObject)\n        return localState\n      }\n    }\n  }\n\n  /**\n   * Redirect to provider's `end_session_endpoint` with provided parameters. After logout provider will redirect to\n   * provided `post_logout_redirect_uri` if it provided.\n   * @param options\n   */\n  async logout(options: LogoutRequestOptions = {}) {\n    if (!options.localOnly) {\n      const storedAuth = await this.authStore.get(\"auth\")\n      const id_token_hint = options.id_token_hint || storedAuth?.id_token_raw\n      window.location.assign(\n        await this.createLogoutRequest({\n          ...options,\n          id_token_hint,\n        }),\n      )\n    }\n    await this.authStore.clear()\n  }\n\n  /**\n   * OAuth2 token revocation implementation method. See more at [tools.ietf.org/html/rfc7009](https://tools.ietf.org/html/rfc7009)\n   * @param token Token to be revoked\n   * @param type Passed token's type. It will be used to provide `token_type_hint` parameter.\n   * @param options If necessary override options passed to `OIDCClient` by defining them here.\n   */\n  async revokeToken(token: string, type: TokenType = \"access_token\", options: RevokeOptions = {}) {\n    if (!this.options.endpoints!.revocation_endpoint) {\n      return Promise.reject(new OIDCClientError('\"revocation_endpoint\" doesn\\'t exist'))\n    }\n    const finalOptions = {\n      client_id: options.client_id || this.options.client_id,\n      client_secret: options.client_secret || this.options.client_secret,\n      token_type_hint: type,\n      token: token,\n    }\n\n    return this.http({\n      method: \"POST\",\n      requestType: \"form\",\n      url: this.options.endpoints!.revocation_endpoint,\n      body: finalOptions,\n    })\n  }\n\n  /**\n   * Login without having an interaction. If refresh tokens are used and there is a stored refresh token it will\n   * exchange refresh token to receive new access token. If not it silently makes a request the provider's\n   * authorization endpoint using provided parameters. You can override any parameter defined in `OIDCClient`. If\n   * you don't provide `state`, `nonce` or `code_verifier` they will be generated automatically in a random and\n   * secure way.\n   *\n   * @param options\n   * @param localState\n   */\n  async silentLogin(options: AuthRequestOptions = {}, localState: Record<string, any> = {}) {\n    await this.initialize(false)\n    let tokenResult: any\n    let finalState: any = {}\n\n    const storedAuth = (await this.authStore.get(\"auth\")) || {}\n\n    const finalOptions = mergeObjects(\n      {\n        response_mode: \"query\",\n        display: \"page\",\n        prompt: \"none\",\n      },\n      this.options,\n      options,\n    )\n\n    if (finalOptions.silent_redirect_uri) {\n      finalOptions.redirect_uri = finalOptions.silent_redirect_uri\n    }\n\n    if (this.options.useRefreshToken && storedAuth?.refresh_token) {\n      finalState.authParams = mergeObjects(\n        storedAuth?.authParams || {},\n        finalState.authParams || {},\n      )\n      tokenResult = await this.exchangeRefreshToken({\n        ...finalOptions,\n        refresh_token: storedAuth.refresh_token,\n      })\n    } else {\n      const authUrl = await this.createAuthRequest(\n        {\n          ...finalOptions,\n          request_type: \"s\",\n        },\n        localState,\n      )\n\n      const { response, state } = await runIframe(authUrl, {\n        timeout: finalOptions.silentRequestTimeout,\n        eventOrigin: window.location.origin,\n      })\n      tokenResult = await this.handleAuthResponse(response, finalOptions, localState)\n      storedAuth.session_state = response.session_state\n      finalState = state\n    }\n\n    const authObject = await this.handleTokenResult(\n      tokenResult,\n      finalState.authParams,\n      finalOptions,\n    )\n    authObject.session_state = storedAuth.session_state\n    this.synchronizer.BroadcastMessageToAllTabs(Events.USER_LOGIN, authObject)\n    return finalState.localState\n  }\n\n  /**\n   * Retrieve logged in user's access token if it exists.\n   */\n  async getAccessToken() {\n    return (await this.authStore.get(\"auth\"))?.access_token\n  }\n\n  /**\n   * Retrieve logged in user's refresh token if it exists.\n   */\n  async getRefreshToken() {\n    return (await this.authStore.get(\"auth\"))?.refresh_token\n  }\n\n  /**\n   * Retrieve logged in user's parsed id token if it exists.\n   */\n  async getIdToken() {\n    return (await this.authStore.get(\"auth\"))?.id_token\n  }\n\n  /**\n   * Retrieve access token's expiration.\n   */\n  async getExpiresIn() {\n    return (await this.authStore.get(\"auth\"))?.expires_in\n  }\n\n  /**\n   * Retrieve logged in user's id token in raw format if it exists.\n   */\n  async getIdTokenRaw() {\n    return (await this.authStore.get(\"auth\"))?.id_token_raw\n  }\n\n  /**\n   * Retrieve logged in user's scopes if it exists.\n   */\n  async getScopes() {\n    return (await this.authStore.get(\"auth\"))?.scope?.split(\" \")\n  }\n\n  /**\n   * Retrieve logged in user's profile.\n   */\n  async getUser() {\n    return (await this.authStore.get(\"auth\"))?.user\n  }\n\n  /**\n   * If there is a user stored locally return true. Otherwise it will make a silentLogin to check if End-User is\n   * logged in provider.\n   *\n   * @param localOnly Don't check provider\n   */\n  async isLoggedIn(localOnly = false) {\n    const existsOnLocal = !!(await this.getUser())\n    if (!existsOnLocal && !localOnly) {\n      try {\n        await this.silentLogin()\n        return true\n      } catch (e) {\n        return false\n      }\n    }\n    return existsOnLocal\n  }\n\n  /**\n   * Create authorization request with provided options.\n   *\n   * @param options\n   * @param localState\n   * @private\n   */\n  private async createAuthRequest(\n    options: Partial<AuthRequestOptions> = {},\n    localState: Record<string, any> = {},\n  ): Promise<string> {\n    if (!this.options.endpoints?.authorization_endpoint) {\n      await this.initialize(false)\n    }\n    // TODO: deep merge for extra params\n    const finalOptions = Object.assign({}, this.options, options)\n    localState.code_verifier = generateRandom(72)\n\n    const authParams = {\n      client_id: finalOptions.client_id,\n      state: generateRandom(finalOptions.stateLength!),\n      scope: finalOptions.scope,\n      audience: finalOptions.audience,\n      redirect_uri: finalOptions.redirect_uri,\n      response_mode: finalOptions.response_mode,\n      response_type: finalOptions.response_type || \"code\",\n      ui_locales: finalOptions.ui_locales,\n      prompt: finalOptions.prompt,\n      display: finalOptions.display,\n      claims: finalOptions.claims,\n      claims_locales: finalOptions.claims_locales,\n      acr_values: finalOptions.acr_values,\n      registration: finalOptions.registration,\n      login_hint: finalOptions.login_hint,\n      id_token_hint: finalOptions.id_token_hint,\n      web_message_uri: finalOptions.web_message_uri,\n      web_message_target: finalOptions.web_message_target,\n      ...(finalOptions.extraParams && finalOptions.extraParams),\n    } as AuthRequestOptions\n\n    if (\n      isResponseType(\"id_token\", authParams.response_type) ||\n      isScopeIncluded(\"openid\", authParams.scope)\n    ) {\n      authParams.nonce = generateRandom(finalOptions.nonceLength!)\n    }\n\n    if (isResponseType(\"code\", authParams.response_type)) {\n      authParams.code_challenge = await deriveChallenge(localState.code_verifier)\n      authParams.code_challenge_method = finalOptions.code_challenge_method || \"S256\"\n    }\n\n    const now = this.options.currentTimeInMillis?.() || Date.now()\n    const fragment = finalOptions.fragment ? `#${finalOptions.fragment}` : \"\"\n    const authParamsString = buildEncodedQueryString(authParams)\n    const url = `${this.options.endpoints!.authorization_endpoint}${authParamsString}${fragment}`\n\n    // clear 1 day old state entries\n    this.stateStore.clear(now - 86400000)\n\n    await this.stateStore.set(\n      authParams.state!,\n      cleanUndefined({\n        created_at: now,\n        authParams,\n        localState,\n        request_type: finalOptions.request_type,\n      }),\n    )\n    return url\n  }\n\n  /**\n   * Create a logout request with given options\n   *\n   * @param options\n   * @private\n   */\n  private async createLogoutRequest(options: LogoutRequestOptions = {}) {\n    if (!this.options.endpoints?.end_session_endpoint) {\n      await this.fetchFromIssuer()\n    }\n    const finalOptions = mergeObjects(this.options, options)\n    const logoutParams = {\n      id_token_hint: finalOptions.id_token_hint,\n      post_logout_redirect_uri: finalOptions.post_logout_redirect_uri,\n      ...(finalOptions.extraLogoutParams || {}),\n    }\n    return `${this.options.endpoints!.end_session_endpoint}${buildEncodedQueryString(logoutParams)}`\n  }\n\n  /**\n   * Exchange authorization code retrieved from auth request result.\n   * @param options\n   * @private\n   */\n  private async exchangeAuthorizationCode(options: TokenRequestOption) {\n    if (!this.options.endpoints?.token_endpoint) {\n      await this.fetchFromIssuer()\n    }\n    const finalOptions = mergeObjects(this.options, options)\n    const { extraTokenHeaders, extraTokenParams, ...rest } = finalOptions\n    const mergedOptions = {\n      ...rest,\n      ...(extraTokenParams || {}),\n      grant_type: \"authorization_code\",\n    }\n\n    for (const req of [\"code\", \"redirect_uri\", \"code_verifier\", \"client_id\"] as const) {\n      if (!mergedOptions[req]) {\n        return Promise.reject(new Error(`\"${req}\" is required`))\n      }\n    }\n\n    return this.http({\n      url: `${this.options.endpoints!.token_endpoint}`,\n      method: \"POST\",\n      requestType: \"form\",\n      body: mergedOptions as any,\n      headers: extraTokenHeaders,\n    })\n  }\n\n  /**\n   * Exchange refresh token with given options\n   * @param options\n   * @private\n   */\n  private async exchangeRefreshToken(options: Partial<TokenRequestOption>) {\n    if (!this.options.endpoints?.token_endpoint) {\n      await this.fetchFromIssuer()\n    }\n    const { extraTokenHeaders, extraTokenParams, ...rest } = options\n    const mergedOptions = {\n      grant_type: \"refresh_token\",\n      client_id: this.options.client_id,\n      client_secret: this.options.client_secret,\n      ...rest,\n      ...(extraTokenParams || {}),\n    }\n\n    for (const req of [\"refresh_token\", \"client_id\"] as const) {\n      if (!mergedOptions[req]) {\n        return Promise.reject(new Error(`\"${req}\" is required`))\n      }\n    }\n\n    return this.http({\n      url: `${this.options.endpoints!.token_endpoint}`,\n      method: \"POST\",\n      requestType: \"form\",\n      body: mergedOptions as any,\n      headers: extraTokenHeaders,\n    })\n  }\n\n  /**\n   * Fetch OIDC configuration from the issuer.\n   */\n  private async fetchFromIssuer(): Promise<Record<string, any>> {\n    try {\n      const requestUrl = `${this.options.issuer}/.well-known/openid-configuration`\n      const response = await this.http({\n        url: requestUrl,\n        method: \"GET\",\n        requestType: \"json\",\n      })\n      this.issuer_metadata = response as Record<string, any>\n      const endpoints = {} as any\n      for (const prop of Object.keys(this.issuer_metadata)) {\n        if (\n          prop.endsWith(\"_endpoint\") ||\n          prop.indexOf(\"_session\") > -1 ||\n          prop.indexOf(\"_uri\") > -1\n        ) {\n          endpoints[prop as keyof IEndpointConfiguration] = this.issuer_metadata[prop]\n        }\n      }\n      this.options.endpoints = endpoints\n      return this.issuer_metadata\n    } catch (e) {\n      throw new OIDCClientError(\"Loading metadata failed\", e.message)\n    }\n  }\n\n  /**\n   * Handle auth request result. If there is `code` exchange it.\n   * @param response\n   * @param finalOptions\n   * @param localState\n   * @private\n   */\n  private async handleAuthResponse(\n    response: any,\n    finalOptions: AuthRequestOptions,\n    localState: Record<string, any> = {},\n  ) {\n    if (response.code) {\n      return this.exchangeAuthorizationCode({\n        redirect_uri: finalOptions.redirect_uri,\n        client_id: finalOptions.client_id,\n        code_verifier: localState.code_verifier,\n        grant_type: \"authorization_code\",\n        code: response.code,\n      })\n    }\n    return response\n  }\n\n  /**\n   * Handle OAuth2 auth request result\n   * @param tokenResult\n   * @param authParams\n   * @param finalOptions\n   * @private\n   */\n  private async handleTokenResult(\n    tokenResult: TokenResponse,\n    authParams: AuthRequestOptions,\n    finalOptions: IPlusAuthClientOptions,\n  ) {\n    await this.initialize(false)\n    let user: any = {}\n    if (tokenResult.error) {\n      throw new AuthenticationError(tokenResult.error, tokenResult.error_description)\n    }\n    let parsedIDToken: any\n    if (tokenResult.id_token) {\n      parsedIDToken = await validateIdToken(tokenResult.id_token, authParams.nonce!, finalOptions)\n      if (\n        finalOptions.idTokenValidator &&\n        !(await finalOptions.idTokenValidator(tokenResult.id_token))\n      ) {\n        return Promise.reject(new InvalidIdTokenError(\"Id Token validation failed\"))\n      }\n      Object.keys(parsedIDToken).forEach((key) => {\n        if (!nonUserClaims.includes(key as any)) {\n          user[key] = parsedIDToken[key]\n        }\n      })\n    }\n\n    if (tokenResult.access_token) {\n      if (finalOptions.requestUserInfo && this.options.endpoints?.userinfo_endpoint) {\n        const userInfoResult = await this.fetchUserInfo(tokenResult.access_token)\n        if (!userInfoResult.error) {\n          user = { ...user, ...userInfoResult }\n        }\n      }\n    }\n\n    return {\n      authParams,\n      user,\n      ...tokenResult,\n      id_token: parsedIDToken,\n      id_token_raw: tokenResult.id_token,\n      scope: tokenResult.scope || authParams.scope,\n    }\n  }\n\n  /**\n   * Load stored state\n   *\n   * @param state\n   * @private\n   */\n  private async loadState(state: string) {\n    const rawStoredState = await this.stateStore.get(state)\n    if (!rawStoredState) {\n      return Promise.reject(new StateNotFound(\"Local state not found\", state))\n    }\n    await this.stateStore.del(state)\n    return rawStoredState\n  }\n\n  /**\n   * Load user info by making request to providers `userinfo_endpoint`\n   *\n   * @param accessToken\n   * @private\n   */\n  private async fetchUserInfo(accessToken: string) {\n    return this.http({\n      method: \"GET\",\n      url: `${this.options.endpoints!.userinfo_endpoint}`,\n      requestType: \"json\",\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    })\n  }\n\n  /**\n   * Start monitoring End-User's session if the OIDC provider supports session management. See more at [OIDC Session\n   * Management](https://openid.net/specs/openid-connect-session-1_0.html)\n   *\n   * @param sub End-User's id to for monitoring session\n   * @param session_state string that represents the End-User's login state at the OP\n   */\n  private monitorSession({ sub, session_state }: SessionMonitorOptions) {\n    const { client_id, endpoints } = this.options\n\n    if (!endpoints?.check_session_iframe) {\n      console.warn(\n        '\"check_session_iframe\" endpoint missing or session management is not supported by provider',\n      )\n      return\n    }\n    if (!this.sessionCheckerFrame) {\n      const sessionCheckCallback = async (err: any) => {\n        if (err) {\n          this.emit(Events.USER_LOGOUT)\n        } else {\n          this.emit(Events.SESSION_CHANGE)\n          try {\n            await this.silentLogin({}, {})\n            const storedAuth = await this.authStore.get(\"auth\")\n            if (storedAuth) {\n              if (storedAuth.user?.sub === sub && storedAuth.session_state) {\n                this.sessionCheckerFrame!.start(storedAuth.session_state)\n              }\n            } else {\n              this.emit(Events.USER_LOGOUT, null)\n            }\n          } catch (e) {\n            this.emit(Events.USER_LOGOUT)\n            return\n          }\n        }\n      }\n\n      this.sessionCheckerFrame = createSessionCheckerFrame({\n        url: endpoints.check_session_iframe,\n        client_id: client_id,\n        callback: sessionCheckCallback,\n        checkInterval: this.options.checkSessionInterval,\n      })\n    }\n\n    this.sessionCheckerFrame.start(session_state)\n  }\n\n  private async onUserLogin(authObj: any, isInternal = false) {\n    const {\n      expires_in,\n      user,\n      scope,\n      access_token,\n      id_token,\n      refresh_token,\n      session_state,\n      id_token_raw,\n    } = authObj\n    await this.authStore.set(\"auth\", authObj)\n\n    this.user = user\n    this.scopes = scope?.split(\" \")\n    this.accessToken = access_token\n    this.idToken = id_token\n    this.idTokenRaw = id_token_raw\n    this.refreshToken = refresh_token\n\n    if (!isInternal) {\n      this.emit(Events.USER_LOGIN, authObj)\n    }\n    if (!window?.frameElement) {\n      if (this.options.checkSession) {\n        this.monitorSession({ sub: user.sub || user.id, session_state })\n      }\n\n      if (expires_in !== undefined && this.options.autoSilentRenew) {\n        const expiration = Number(expires_in) - this.options.secondsToRefreshAccessTokenBeforeExp!\n        const renew = () => {\n          this.synchronizer.CallOnce(\"silent-login\", async () => {\n            try {\n              await this.silentLogin()\n              this.emit(Events.SILENT_RENEW_SUCCESS, null)\n            } catch (e) {\n              this.emit(Events.SILENT_RENEW_ERROR, e)\n            }\n          })\n        }\n        if (expiration >= 0) {\n          this._accessTokenExpireTimer!.start(expiration, async () => {\n            renew()\n          })\n        } else {\n          renew()\n        }\n      }\n    }\n  }\n}\n","import { OIDCClient } from \"./client\"\nimport type { IPlusAuthClientOptions } from \"./interfaces\"\n\nexport * from \"./interfaces\"\nexport * from \"./client\"\nexport * from \"./constants\"\nexport * from \"./helpers\"\nexport * from \"./errors\"\n\n/**\n * Create OIDC client with initializing it. It resolves issuer metadata, jwks keys and check if user is\n * authenticated in OpenId Connect provider.\n */\nexport default function createOIDCClient(options: IPlusAuthClientOptions): Promise<OIDCClient> {\n  return new OIDCClient(options).initialize()\n}\n"],"names":["Events","USER_LOGOUT","USER_LOGIN","SILENT_RENEW_SUCCESS","SILENT_RENEW_ERROR","SESSION_CHANGE","OIDCClientError","Error","error","error_description","name","AuthenticationError","constructor","state","error_uri","StateNotFound","InvalidJWTError","details","InvalidIdTokenError","InteractionCancelled","StateStore","prefix","LocalStorageStateStore","get","key","Promise","resolve","value","window","localStorage","getItem","JSON","parse","set","setItem","stringify","del","removeItem","clear","before","i","storedKeys","length","substring","push","storedItem","created_at","e","InMemoryStateStore","map","forEach","val","ind","delete","Map","EventEmitter","once","event","fn","on","onArgs","off","apply","cb","callbacks","splice","emit","args","cbs","slice","len","Timer","start","duration","callback","expiration","now","_expiration","_timerHandle","stop","timerDuration","setInterval","clearInterval","currentTimeInMillisFunc","Date","_define_property","createHiddenFrame","iframe","document","createElement","style","width","height","position","visibility","display","title","ariaHidden","runIframe","url","options","reject","onLoadTimeoutId","timeoutSetTimeoutId","setTimeout","removeIframe","timeout","iframeEventHandler","origin","eventOrigin","data","type","eventSource","source","close","resp","response","clearTimeout","body","contains","removeChild","removeEventListener","onLoadTimeout","addEventListener","appendChild","setAttribute","onload","isValidIssuer","issuer","URL","includes","protocol","search","hash","buildEncodedQueryString","obj","appendable","ret","d","hasOwnProperty","encodeURIComponent","join","parseQueryUrl","result","trim","replace","params","split","paramAndValue","parts","decodeURIComponent","shift","urlSafe","buffer","encoded","fromByteArray","Uint8Array","request","headers","method","requestType","fetch","then","json","catch","CHARSET","getRandomBytes","n","crypto","self","msCrypto","QUOTA","a","getRandomValues","subarray","Math","min","generateRandom","out","charsLen","maxByte","buf","ceil","randomByte","charAt","deriveChallenge","code","subtle","digest","TextEncoder","encode","urlDecodeB64","input","atob","c","charCodeAt","toString","parseJwt","jwt","header","payload","validateIdToken","id_token","nonce","validateJwt","message","isIdToken","clockSkew","currentTimeInMillis","audience","client_id","iss","aud","Array","isArray","indexOf","azp","lowerNow","upperNow","floor","iat","Number","nbf","exp","nonUserClaims","DEFAULT_CHECK_INTERVAL","createSessionCheckerFrame","checkInterval","internalSessionState","idx","frameOrigin","substr","frame","timer","load","sessionState","send","contentWindow","postMessage","cleanUndefined","object","merge","previousValue","currentValue","p","undefined","mergeObjects","objects","reduce","isResponseType","response_type","filter","rt","isScopeIncluded","scope","scopes","openPopup","left","screenX","innerWidth","top","screenY","innerHeight","open","runPopup","popup","location","href","timeoutId","closeId","clearHandlers","messageListener","closed","currentTabId","performance","random","handlers","TabUtils","CallOnce","lockname","localStorageKey","keyPrefix","BroadcastMessageToAllTabs","messageId","eventData","x","events","timeStamp","getTime","OnBroadcastMessage","ev","newValue","messageData","kid","fallbackEvents","OIDCClient","initialize","checkLogin","initialized","__initializePromise","stateStore","init","authStore","endpoints","Object","keys","fetchFromIssuer","frameElement","silentLogin","localAuth","onUserLogin","login","localState","assign","createAuthRequest","loginWithPopup","popupOptions","response_mode","request_type","authParams","loadState","tokenResult","handleAuthResponse","authObject","handleTokenResult","session_state","synchronizer","loginCallback","parsedUrl","responseParams","rawStoredState","parent","host","opener","logout","localOnly","storedAuth","id_token_hint","id_token_raw","createLogoutRequest","revokeToken","token","revocation_endpoint","finalOptions","client_secret","token_type_hint","http","finalState","prompt","silent_redirect_uri","redirect_uri","useRefreshToken","refresh_token","exchangeRefreshToken","authUrl","silentRequestTimeout","getAccessToken","access_token","getRefreshToken","getIdToken","getExpiresIn","expires_in","getIdTokenRaw","getScopes","getUser","user","isLoggedIn","existsOnLocal","authorization_endpoint","code_verifier","stateLength","ui_locales","claims","claims_locales","acr_values","registration","login_hint","web_message_uri","web_message_target","extraParams","nonceLength","code_challenge","code_challenge_method","fragment","authParamsString","end_session_endpoint","logoutParams","post_logout_redirect_uri","extraLogoutParams","exchangeAuthorizationCode","token_endpoint","extraTokenHeaders","extraTokenParams","rest","mergedOptions","grant_type","req","requestUrl","issuer_metadata","prop","endsWith","parsedIDToken","idTokenValidator","requestUserInfo","userinfo_endpoint","userInfoResult","fetchUserInfo","accessToken","Authorization","sub","check_session_iframe","console","warn","sessionCheckerFrame","sessionCheckCallback","err","checkSessionInterval","authObj","isInternal","idToken","idTokenRaw","refreshToken","checkSession","monitorSession","id","autoSilentRenew","secondsToRefreshAccessTokenBeforeExp","renew","_accessTokenExpireTimer","btoa","httpClient","bind","createOIDCClient"],"mappings":";;;;;;AAAA,+CACO,MAAMA,MAAS,GAAA;IACpBC,WAAa,EAAA,aAAA;IACbC,UAAY,EAAA,YAAA;IACZC,oBAAsB,EAAA,sBAAA;IACtBC,kBAAoB,EAAA,oBAAA;IACpBC,cAAgB,EAAA;AAClB;;;;;;;;;;;;;;;ACPO,MAAMC,eAAwBC,SAAAA,KAAAA,CAAAA;IAKnC,WAAmBC,CAAAA,KAAa,EAAEC,iBAA0B,CAAE;AAC5D,QAAA,KAAK,CAAC,CAAGD,EAAAA,KAAAA,CAAAA,EAAQ,iBAAsB,IAAA,CAAC,GAAG,EAAEC,iBAAAA,CAAAA,CAAmB,IAAK,EAAA,CAAA,CAAI,GAL3ED,kBAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EAAAA,SAEAC,CAAAA,EAAAA,kBAAAA,CAAAA,IAAAA,EAAAA,qBAAAA,SAAAA,CAAAA;QAIE,IAAI,CAACC,IAAI,GAAG,iBAAA;QACZ,IAAI,CAACF,KAAK,GAAGA,KAAAA;QACb,IAAI,CAACC,iBAAiB,GAAGA,iBAAAA;AAC3B;AACF;AAEO,MAAME,mBAA4BL,SAAAA,eAAAA,CAAAA;AAKvCM,IAAAA,WAAAA,CAAYJ,KAAa,EAAEC,iBAA0B,EAAEI,KAAc,EAAEC,SAAkB,CAAE;QACzF,KAAK,CAACN,OAAOC,iBALfI,CAAAA,EAAAA,kBAAAA,CAAAA,IAAAA,EAAAA,SAAAA,SAAAA,CAAAA,EAEAC,kBAAAA,CAAAA,IAAAA,EAAAA,WAAAA,EAAAA,SAAAA,CAAAA;QAIE,IAAI,CAACJ,IAAI,GAAG,qBAAA;QACZ,IAAI,CAACG,KAAK,GAAGA,KAAAA;QACb,IAAI,CAACC,SAAS,GAAGA,SAAAA;AACnB;AACF;AAEO,MAAMC,aAAsBJ,SAAAA,mBAAAA,CAAAA;IAGjCC,WAAYJ,CAAAA,KAAa,EAAEK,KAAc,CAAE;AACzC,QAAA,KAAK,CAACL,KAAAA,CAAAA,EAHRK,kBAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EAAAA,SAAAA,CAAAA;QAIE,IAAI,CAACH,IAAI,GAAG,eAAA;QACZ,IAAI,CAACG,KAAK,GAAGA,KAAAA;AACf;AACF;AAEO,MAAMG,eAAwBV,SAAAA,eAAAA,CAAAA;AACnCM,IAAAA,WAAAA,CAAYK,OAAe,CAAE;AAC3B,QAAA,KAAK,CAACA,OAAAA,CAAAA;QACN,IAAI,CAACP,IAAI,GAAG,iBAAA;QACZ,IAAI,CAACD,iBAAiB,GAAGQ,OAAAA;AAC3B;AACF;AAEO,MAAMC,mBAA4BF,SAAAA,eAAAA,CAAAA;AACvCJ,IAAAA,WAAAA,CAAYK,OAAe,CAAE;AAC3B,QAAA,KAAK,CAACA,OAAAA,CAAAA;QACN,IAAI,CAACP,IAAI,GAAG,qBAAA;AACd;AACF;AAEO,MAAMS,oBAA6Bb,SAAAA,eAAAA,CAAAA;AACxCM,IAAAA,WAAAA,CAAYK,OAAe,CAAE;AAC3B,QAAA,KAAK,CAACA,OAAAA,CAAAA;QACN,IAAI,CAACP,IAAI,GAAG,sBAAA;AACd;AACF;;;;;;;;;;;;;;;ACrDA;AACO,MAAeU,UAAAA,CAAAA;IAGpBR,WAAYS,CAAAA,MAAAA,GAAS,EAAE,CAAE;AAFzBA,QAAAA,kBAAAA,CAAAA,IAAAA,EAAAA,UAAAA,SAAAA,CAAAA;QAGE,IAAI,CAACA,MAAM,GAAGA,MAAAA;AAChB;AASF;;AChBO,MAAMC,sBAAwCF,SAAAA,UAAAA,CAAAA;AAKnDG,IAAAA,GAAAA,CAAIC,GAAW,EAAE;QACf,OAAO,IAAIC,QAAkB,CAACC,OAAAA,GAAAA;YAC5B,MAAMC,KAAAA,GAAQC,OAAOC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACT,MAAM,GAAGG,GAAAA,CAAAA;AACxD,YAAA,IAAIG,KAAO,EAAA;gBACTD,OAAQK,CAAAA,IAAAA,CAAKC,KAAK,CAACL,KAAAA,CAAAA,CAAAA;aACd,MAAA;gBACLD,OAAQ,CAAA,IAAA,CAAA;AACV;AACF,SAAA,CAAA;AACF;IAEAO,GAAIT,CAAAA,GAAW,EAAEG,KAAQ,EAAE;QACzB,OAAO,IAAIF,QAAc,CAACC,OAAAA,GAAAA;YACxBE,MAAOC,CAAAA,YAAY,CAACK,OAAO,CAAC,IAAI,CAACb,MAAM,GAAGG,GAAAA,EAAKO,IAAKI,CAAAA,SAAS,CAACR,KAAAA,CAAAA,CAAAA;AAC9DD,YAAAA,OAAAA,EAAAA;AACF,SAAA,CAAA;AACF;AAEAU,IAAAA,GAAAA,CAAIZ,GAAW,EAAE;QACf,OAAO,IAAIC,QAAc,CAACC,OAAAA,GAAAA;AACxBE,YAAAA,MAAAA,CAAOC,YAAY,CAACQ,UAAU,CAAC,IAAI,CAAChB,MAAM,GAAGG,GAAAA,CAAAA;AAC7CE,YAAAA,OAAAA,EAAAA;AACF,SAAA,CAAA;AACF;AAEAY,IAAAA,KAAAA,CAAMC,MAAe,EAAiB;QACpC,OAAO,IAAId,QAAc,CAACC,OAAAA,GAAAA;YACxB,IAAIc,CAAAA;AACJ,YAAA,MAAMC,aAAuB,EAAE;YAC/B,IAAKD,CAAAA,GAAI,GAAGA,CAAIZ,GAAAA,MAAAA,CAAOC,YAAY,CAACa,MAAM,EAAEF,CAAK,EAAA,CAAA;AAC/C,gBAAA,MAAMhB,GAAMI,GAAAA,MAAAA,CAAOC,YAAY,CAACL,GAAG,CAACgB,CAAAA,CAAAA;;AAEpC,gBAAA,IAAIhB,CAAAA,GAAAA,KAAAA,IAAAA,IAAAA,GAAAA,KAAAA,SAAAA,GAAAA,SAAAA,GAAAA,GAAKmB,CAAAA,SAAS,CAAC,CAAG,EAAA,IAAI,CAACtB,MAAM,CAACqB,MAAM,CAAA,MAAM,IAAI,CAACrB,MAAM,EAAE;AACzDoB,oBAAAA,UAAAA,CAAWG,IAAI,CAACpB,GAAAA,CAAAA;AAClB;AACF;AACA,YAAA,IAAKgB,IAAI,CAAGA,EAAAA,CAAAA,GAAIC,UAAWC,CAAAA,MAAM,EAAEF,CAAK,EAAA,CAAA;AACtC,gBAAA,IAAID,MAAQ,EAAA;oBACV,IAAI;wBACF,MAAMM,UAAAA,GAAad,IAAKC,CAAAA,KAAK,CAACJ,MAAAA,CAAOC,YAAY,CAACC,OAAO,CAACW,UAAU,CAACD,CAAE,CAAA,CAAA,CAAA;wBACvE,IAAIK,UAAAA,CAAWC,UAAU,GAAGP,MAAQ,EAAA;AAClCX,4BAAAA,MAAAA,CAAOC,YAAY,CAACQ,UAAU,CAACI,UAAU,CAACD,CAAE,CAAA,CAAA;AAC9C;qBACA,CAAA,OAAOO,GAAG;iBACP,MAAA;AACLnB,oBAAAA,MAAAA,CAAOC,YAAY,CAACQ,UAAU,CAACI,UAAU,CAACD,CAAE,CAAA,CAAA;AAC9C;AACF;AACAd,YAAAA,OAAAA,EAAAA;AACF,SAAA,CAAA;AACF;IAtDAd,WAAYS,CAAAA,MAAAA,GAAS,UAAU,CAAE;AAC/B,QAAA,KAAK,CAACA,MAAAA,CAAAA;AACR;AAqDF;;;;;;;;;;;;;;;ACxDO,MAAM2B,kBAAoC5B,SAAAA,UAAAA,CAAAA;AAG/CkB,IAAAA,KAAAA,CAAMC,MAAe,EAAE;AACrB,QAAA,IAAIA,MAAQ,EAAA;AACV,YAAA,IAAI,CAACU,GAAG,CAACC,OAAO,CAAC,CAACC,GAAKC,EAAAA,GAAAA,GAAAA;gBACrB,IAAID,GAAAA,CAAIL,UAAU,GAAGP,MAAQ,EAAA;AAC3B,oBAAA,IAAI,CAACU,GAAG,CAACI,MAAM,CAACD,GAAAA,CAAAA;AAClB;AACF,aAAA,CAAA;AACA,YAAA,OAAO3B,QAAQC,OAAO,EAAA;AACxB;AACA,QAAA,OAAOD,QAAQC,OAAO,CAAC,IAAI,CAACuB,GAAG,CAACX,KAAK,EAAA,CAAA;AACvC;AAEAF,IAAAA,GAAAA,CAAIZ,GAAW,EAAE;AACf,QAAA,IAAI,CAACyB,GAAG,CAACI,MAAM,CAAC7B,GAAAA,CAAAA;AAChB,QAAA,OAAOC,QAAQC,OAAO,EAAA;AACxB;AAEAH,IAAAA,GAAAA,CAAIC,GAAW,EAAE;QACf,OAAOC,OAAAA,CAAQC,OAAO,CAAC,IAAI,CAACuB,GAAG,CAAC1B,GAAG,CAACC,GAAQ,CAAA,IAAA,IAAA,CAAA;AAC9C;IAEAS,GAAIT,CAAAA,GAAW,EAAEG,KAAU,EAAE;AAC3B,QAAA,IAAI,CAACsB,GAAG,CAAChB,GAAG,CAACT,GAAKG,EAAAA,KAAAA,CAAAA;AAClB,QAAA,OAAOF,QAAQC,OAAO,EAAA;AACxB;;QA3BK,KACLuB,CAAAA,GAAAA,IAAAA,CAAAA,EAAAA,kBAAAA,CAAAA,IAAAA,EAAAA,OAAM,IAAIK,GAAAA,EAAAA,CAAAA;;AA2BZ;;;;;;;;;;;;;;;AC5BO,MAAMC,YAAAA,CAAAA;IAOXC,IAAKC,CAAAA,KAAQ,EAAEC,EAA4B,EAAE;QAC3C,SAASC,EAAAA,CAA4B,GAAGC,MAAa,EAAA;YACnD,IAAI,CAACC,GAAG,CAACJ,KAAOE,EAAAA,EAAAA,CAAAA;YAChBD,EAAGI,CAAAA,KAAK,CAAC,IAAI,EAAEF,MAAAA,CAAAA;AACjB;AACAD,QAAAA,EAAAA,CAAGD,EAAE,GAAGA,EAAAA;QACR,IAAI,CAACC,EAAE,CAACF,KAAOE,EAAAA,EAAAA,CAAAA;AACf,QAAA,OAAO,IAAI;AACb;IAEAA,EAAGF,CAAAA,KAAQ,EAAEM,EAA4B,EAAE;QACzC,IAAI,CAAC,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC,EAAEP,KAAO,CAAA,CAAA,CAAC,EAAE,IAAI,CAACO,SAAS,CAAC,CAAC,CAAC,EAAEP,KAAAA,CAAAA,CAAO,CAAC,GAAG,EAAE;QAClE,IAAI,CAACO,SAAS,CAAC,CAAC,CAAC,EAAEP,KAAO,CAAA,CAAA,CAAC,CAACb,IAAI,CAACmB,EAAAA,CAAAA;AACjC,QAAA,OAAO,IAAI;AACb;IAEAF,GAAIJ,CAAAA,KAAS,EAAEC,EAA6B,EAAE;AAC5C,QAAA,IAAI,CAACD,KAAO,EAAA;YACV,IAAI,CAACO,SAAS,GAAG,EAAC;AAClB,YAAA,OAAO,IAAI;AACb;;QAGA,MAAMA,SAAAA,GAAY,IAAI,CAACA,SAAS,CAAC,CAAC,CAAC,EAAEP,KAAAA,CAAAA,CAAO,CAAC;QAC7C,IAAI,CAACO,SAAW,EAAA,OAAO,IAAI;;AAG3B,QAAA,IAAI,CAACN,EAAI,EAAA;YACP,OAAO,IAAI,CAACM,SAAS,CAAC,CAAC,CAAC,EAAEP,OAAO,CAAC;AAClC,YAAA,OAAO,IAAI;AACb;AAEA,QAAA,IAAK,IAAIjB,CAAI,GAAA,CAAA,EAAGA,IAAIwB,SAAUtB,CAAAA,MAAM,EAAEF,CAAK,EAAA,CAAA;YACzC,MAAMuB,EAAAA,GAAKC,SAAS,CAACxB,CAAE,CAAA;AACvB,YAAA,IAAIuB,EAAOL,KAAAA,EAAAA,IAAMK,EAAGL,CAAAA,EAAE,KAAKA,EAAI,EAAA;gBAC7BM,SAAUC,CAAAA,MAAM,CAACzB,CAAG,EAAA,CAAA,CAAA;AACpB,gBAAA;AACF;AACF;;;QAIA,IAAIwB,SAAAA,CAAUtB,MAAM,KAAK,CAAG,EAAA;YAC1B,OAAO,IAAI,CAACsB,SAAS,CAAC,CAAC,CAAC,EAAEP,OAAO,CAAC;AACpC;AAEA,QAAA,OAAO,IAAI;AACb;AAEAS,IAAAA,IAAAA,CAAKT,KAAQ,EAAE,GAAGU,IAAW,EAAE;QAC7B,IAAIC,GAAAA,GAAM,IAAI,CAACJ,SAAS,CAAC,CAAC,CAAC,EAAEP,KAAAA,CAAAA,CAAO,CAAC;AACrC,QAAA,IAAIW,GAAK,EAAA;YACPA,GAAMA,GAAAA,GAAAA,CAAIC,KAAK,CAAC,CAAA,CAAA;YAChB,IAAK,IAAI7B,CAAI,GAAA,CAAA,EAAG8B,GAAMF,GAAAA,GAAAA,CAAI1B,MAAM,EAAEF,CAAAA,GAAI8B,GAAK,EAAA,EAAE9B,CAAG,CAAA;AAC9C4B,gBAAAA,GAAG,CAAC5B,CAAE,CAAA,CAACsB,KAAK,CAAC,IAAI,EAAEK,IAAAA,CAAAA;AACrB;AACF;AACA,QAAA,OAAO,IAAI;AACb;IA9DAvD,WAAc,EAAA;AAFdoD,QAAAA,kBAAAA,CAAAA,IAAAA,EAAAA,aAAAA,SAAAA,CAAAA;QAGE,IAAI,CAACA,SAAS,GAAG,EAAC;AACpB;AA6DF;;;;;;;;;;;;;;;ACpEO,MAAMO,KAAAA,CAAAA;IAWXC,KAAMC,CAAAA,QAAgB,EAAEC,QAAoB,EAAE;AAC5C,QAAA,IAAID,YAAY,CAAG,EAAA;YACjBA,QAAW,GAAA,CAAA;AACb;AACA,QAAA,MAAME,UAAa,GAAA,IAAI,CAACC,GAAG,KAAK,IAAOH,GAAAA,QAAAA;QACvC,IAAI,IAAI,CAACI,WAAW,KAAKF,cAAc,IAAI,CAACG,YAAY,EAAE;AACxD,YAAA;AACF;AAEA,QAAA,IAAI,CAACC,IAAI,EAAA;QAET,IAAI,CAACF,WAAW,GAAGF,UAAAA;;AAGnB,QAAA,IAAIK,aAAgB,GAAA,CAAA;AACpB,QAAA,IAAIP,WAAWO,aAAe,EAAA;YAC5BA,aAAgBP,GAAAA,QAAAA;AAClB;QACA,IAAI,CAACK,YAAY,GAAGG,WAAY,CAAA,IAAA;YAC9B,IAAI,IAAI,CAACJ,WAAW,IAAI,IAAI,CAACD,GAAG,KAAK,IAAM,EAAA;AACzC,gBAAA,IAAI,CAACG,IAAI,EAAA;AACTL,gBAAAA,QAAAA,EAAAA;AACF;AACF,SAAA,EAAGM,aAAgB,GAAA,IAAA,CAAA;AACrB;IAEAD,IAAO,GAAA;QACL,IAAI,IAAI,CAACD,YAAY,EAAE;YACrBI,aAAc,CAAA,IAAI,CAACJ,YAAY,CAAA;YAC/B,IAAI,CAACA,YAAY,GAAG,IAAA;AACtB;AACF;AAnCAlE,IAAAA,WAAAA,CAAYuE,uBAA0B,GAAA,IAAMC,IAAKR,CAAAA,GAAG,EAAE,CAAE;AANxD,QAAAS,kBAAA,CAAA,IAAA,EAAQT,OAAR,SAAA,CAAA;AAEA,QAAAS,kBAAA,CAAA,IAAA,EAAQP,gBAAR,SAAA,CAAA;AAEA,QAAAO,kBAAA,CAAA,IAAA,EAAQR,eAAR,SAAA,CAAA;QAGE,IAAI,CAACD,GAAG,GAAGO,uBAAAA;AACb;AAkCF;;ACxCO,SAASG,iBAAAA,GAAAA;AACd,IAAA,MAAMC,MAAS3D,GAAAA,MAAAA,CAAO4D,QAAQ,CAACC,aAAa,CAAC,QAAA,CAAA;IAC7CF,MAAOG,CAAAA,KAAK,CAACC,KAAK,GAAG,GAAA;IACrBJ,MAAOG,CAAAA,KAAK,CAACE,MAAM,GAAG,GAAA;IACtBL,MAAOG,CAAAA,KAAK,CAACG,QAAQ,GAAG,UAAA;IACxBN,MAAOG,CAAAA,KAAK,CAACI,UAAU,GAAG,QAAA;IAC1BP,MAAOG,CAAAA,KAAK,CAACK,OAAO,GAAG,MAAA;AAEvBR,IAAAA,MAAAA,CAAOS,KAAK,GAAG,qBAAA;AACfT,IAAAA,MAAAA,CAAOU,UAAU,GAAG,MAAA;IAEpB,OAAOV,MAAAA;AACT;AAEO,SAASW,SAAAA,CAAUC,GAAW,EAAEC,OAAsB,EAAA;IAC3D,OAAO,IAAI3E,OAAa,CAAA,CAACC,OAAS2E,EAAAA,MAAAA,GAAAA;AAChC,QAAA,IAAIC,eAAuB,GAAA,IAAA;AAC3B,QAAA,MAAMf,MAASD,GAAAA,iBAAAA,EAAAA;AAEf,QAAA,MAAMiB,sBAAsBC,UAC1B,CAAA,IAAA;AACEH,YAAAA,MAAAA,CAAO,IAAI/F,eAAgB,CAAA,WAAA,CAAA,CAAA;AAC3BmG,YAAAA,YAAAA,EAAAA;AACF,SAAA,EACA,CAACL,OAAAA,CAAQM,OAAO,IAAI,EAAC,IAAK,IAAA,CAAA;AAG5B,QAAA,MAAMC,qBAAqB,CAAC5D,CAAAA,GAAAA;AAC1B,YAAA,IAAIA,CAAE6D,CAAAA,MAAM,KAAKR,OAAAA,CAAQS,WAAW,EAAE;YACtC,IAAI,CAAC9D,EAAE+D,IAAI,IAAI/D,EAAE+D,IAAI,CAACC,IAAI,KAAK,wBAA0B,EAAA;YACzD,MAAMC,WAAAA,GAAcjE,EAAEkE,MAAM;AAC5B,YAAA,IAAID,WAAa,EAAA;AACRA,gBAAAA,WAAAA,CAAaE,KAAK,EAAA;AAC3B;AAEA,YAAA,MAAMC,OAAOpE,CAAE+D,CAAAA,IAAI,CAACM,QAAQ,IAAIrE,EAAE+D,IAAI;AACtCK,YAAAA,IAAAA,CAAK3G,KAAK,GACN6F,MAAAA,CACE,IAAI1F,mBAAoBwG,CAAAA,IAAAA,CAAK3G,KAAK,EAAE2G,IAAAA,CAAK1G,iBAAiB,EAAE0G,IAAAA,CAAKtG,KAAK,EAAEsG,IAAAA,CAAKrG,SAAS,CAExFY,CAAAA,GAAAA,OAAAA,CAAQqB,EAAE+D,IAAI,CAAA;YAClBO,YAAad,CAAAA,mBAAAA,CAAAA;AACbE,YAAAA,YAAAA,EAAAA;AACF,SAAA;AAEA,QAAA,MAAMA,YAAe,GAAA,IAAA;AACnB,YAAA,IAAIH,mBAAmB,IAAM,EAAA;gBAC3Be,YAAaf,CAAAA,eAAAA,CAAAA;AACf;AACA,YAAA,IAAI1E,OAAO4D,QAAQ,CAAC8B,IAAI,CAACC,QAAQ,CAAChC,MAAS,CAAA,EAAA;AACzC3D,gBAAAA,MAAAA,CAAO4D,QAAQ,CAAC8B,IAAI,CAACE,WAAW,CAACjC,MAAAA,CAAAA;AACnC;YACA3D,MAAO6F,CAAAA,mBAAmB,CAAC,SAAA,EAAWd,kBAAoB,EAAA,KAAA,CAAA;AAC5D,SAAA;QAEA,MAAMe,aAAAA,GAAgB,IACpBlB,UAAW,CAAA,IAAA;gBACTH,MAAO,CAAA,IAAI/F,gBAAgB,0CAA4C6F,EAAAA,GAAAA,CAAAA,CAAAA;AACvEM,gBAAAA,YAAAA,EAAAA;aACC,EAAA,GAAA,CAAA;QAEL7E,MAAO+F,CAAAA,gBAAgB,CAAC,SAAA,EAAWhB,kBAAoB,EAAA,KAAA,CAAA;AACvD/E,QAAAA,MAAAA,CAAO4D,QAAQ,CAAC8B,IAAI,CAACM,WAAW,CAACrC,MAAAA,CAAAA;QACjCA,MAAOsC,CAAAA,YAAY,CAAC,KAAO1B,EAAAA,GAAAA,CAAAA;AAE3B;;;QAIAZ,MAAAA,CAAOuC,MAAM,GAAG,IAAA;YACdxB,eAAkBoB,GAAAA,aAAAA,EAAAA;AACpB,SAAA;AACF,KAAA,CAAA;AACF;;;;;;;;;;AC1EA,CAAA,QAAA,CAAA,UAAkB,GAAG;AACrB,CAAA,QAAA,CAAA,WAAmB,GAAG;AACtB,CAAA,QAAA,CAAA,aAAqB,GAAG;;CAExB,IAAI,MAAM,GAAG;CACb,IAAI,SAAS,GAAG;CAChB,IAAI,GAAG,GAAG,OAAO,UAAU,KAAK,WAAW,GAAG,UAAU,GAAG;;CAE3D,IAAI,IAAI,GAAG;AACX,CAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;GAC/C,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;GAClB,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG;;;AAGlC;AACA;CACA,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG;CAC/B,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG;;CAE/B,SAAS,OAAO,EAAE,GAAG,EAAE;AACvB,GAAE,IAAI,GAAG,GAAG,GAAG,CAAC;;AAEhB,GAAE,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE;AACnB,KAAI,MAAM,IAAI,KAAK,CAAC,gDAAgD;;;AAGpE;AACA;GACE,IAAI,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG;GAC9B,IAAI,QAAQ,KAAK,EAAE,EAAE,QAAQ,GAAG;;AAElC,GAAE,IAAI,eAAe,GAAG,QAAQ,KAAK;AACrC,OAAM;AACN,OAAM,CAAC,IAAI,QAAQ,GAAG,CAAC;;AAEvB,GAAE,OAAO,CAAC,QAAQ,EAAE,eAAe;;;AAGnC;CACA,SAAS,UAAU,EAAE,GAAG,EAAE;AAC1B,GAAE,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG;AACxB,GAAE,IAAI,QAAQ,GAAG,IAAI,CAAC,CAAC;AACvB,GAAE,IAAI,eAAe,GAAG,IAAI,CAAC,CAAC;GAC5B,OAAO,CAAC,CAAC,QAAQ,GAAG,eAAe,IAAI,CAAC,GAAG,CAAC,IAAI;;;AAGlD,CAAA,SAAS,WAAW,EAAE,GAAG,EAAE,QAAQ,EAAE,eAAe,EAAE;GACpD,OAAO,CAAC,CAAC,QAAQ,GAAG,eAAe,IAAI,CAAC,GAAG,CAAC,IAAI;;;CAGlD,SAAS,WAAW,EAAE,GAAG,EAAE;AAC3B,GAAE,IAAI;AACN,GAAE,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG;AACxB,GAAE,IAAI,QAAQ,GAAG,IAAI,CAAC,CAAC;AACvB,GAAE,IAAI,eAAe,GAAG,IAAI,CAAC,CAAC;;AAE9B,GAAE,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC,WAAW,CAAC,GAAG,EAAE,QAAQ,EAAE,eAAe,CAAC;;GAE7D,IAAI,OAAO,GAAG;;AAEhB;AACA,GAAE,IAAI,GAAG,GAAG,eAAe,GAAG;OACxB,QAAQ,GAAG;AACjB,OAAM;;AAEN,GAAE,IAAI;AACN,GAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE;AAC/B,KAAI,GAAG;OACD,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;AACzC,QAAO,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AAC9C,QAAO,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;OACvC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC;KACjC,GAAG,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE,IAAI;KAC/B,GAAG,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI;KAC9B,GAAG,CAAC,OAAO,EAAE,CAAC,GAAG,GAAG,GAAG;;;AAG3B,GAAE,IAAI,eAAe,KAAK,CAAC,EAAE;AAC7B,KAAI,GAAG;OACD,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACxC,QAAO,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;KACxC,GAAG,CAAC,OAAO,EAAE,CAAC,GAAG,GAAG,GAAG;;;AAG3B,GAAE,IAAI,eAAe,KAAK,CAAC,EAAE;AAC7B,KAAI,GAAG;OACD,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;AACzC,QAAO,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAC7C,QAAO,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;KACxC,GAAG,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI;KAC9B,GAAG,CAAC,OAAO,EAAE,CAAC,GAAG,GAAG,GAAG;;;AAG3B,GAAE,OAAO;;;CAGT,SAAS,eAAe,EAAE,GAAG,EAAE;GAC7B,OAAO,MAAM,CAAC,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC;AACjC,KAAI,MAAM,CAAC,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC;AAC5B,KAAI,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;AAC3B,KAAI,MAAM,CAAC,GAAG,GAAG,IAAI;;;AAGrB,CAAA,SAAS,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;AACzC,GAAE,IAAI;GACJ,IAAI,MAAM,GAAG;AACf,GAAE,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE;AACvC,KAAI,GAAG;OACD,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,QAAQ;QAC3B,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC;QAC7B,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI;KACtB,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC;;AAEpC,GAAE,OAAO,MAAM,CAAC,IAAI,CAAC,EAAE;;;CAGvB,SAAS,aAAa,EAAE,KAAK,EAAE;AAC/B,GAAE,IAAI;AACN,GAAE,IAAI,GAAG,GAAG,KAAK,CAAC;AAClB,GAAE,IAAI,UAAU,GAAG,GAAG,GAAG,EAAC;GACxB,IAAI,KAAK,GAAG;GACZ,IAAI,cAAc,GAAG,MAAK;;AAE5B;AACA,GAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,GAAG,UAAU,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,IAAI,cAAc,EAAE;KACtE,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,cAAc,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,GAAG,cAAc,CAAC,CAAC;;;AAG/F;AACA,GAAE,IAAI,UAAU,KAAK,CAAC,EAAE;AACxB,KAAI,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC;KACnB,KAAK,CAAC,IAAI;AACd,OAAM,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC;OAChB,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC;AAC/B,OAAM;;AAEN,IAAG,MAAM,IAAI,UAAU,KAAK,CAAC,EAAE;AAC/B,KAAI,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC;KAC3C,KAAK,CAAC,IAAI;AACd,OAAM,MAAM,CAAC,GAAG,IAAI,EAAE,CAAC;OACjB,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC;OACzB,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC;AAC/B,OAAM;;;;AAIN,GAAE,OAAO,KAAK,CAAC,IAAI,CAAC,EAAE;AACtB;;;;;;ACnJO,SAASK,cAAcC,MAAc,EAAA;IAC1C,IAAI;QACF,MAAM7B,GAAAA,GAAM,IAAI8B,GAAID,CAAAA,MAAAA,CAAAA;AACpB,QAAA,IAAI,CAAC;AAAC,YAAA,OAAA;AAAS,YAAA;AAAS,SAAA,CAACE,QAAQ,CAAC/B,GAAIgC,CAAAA,QAAQ,CAAG,EAAA;YAC/C,OAAO,KAAA;AACT;AACA,QAAA,IAAIhC,IAAIiC,MAAM,KAAK,MAAMjC,GAAIkC,CAAAA,IAAI,KAAK,EAAI,EAAA;YACxC,OAAO,KAAA;AACT;QACA,OAAO,IAAA;AACT,KAAA,CAAE,OAAOtF,CAAG,EAAA;QACV,OAAO,KAAA;AACT;AACF;AACO,SAASuF,uBAAAA,CAAwBC,GAAyB,EAAEC,aAAa,IAAI,EAAA;IAClF,IAAI,CAACD,KAAK,OAAO,EAAA;AACjB,IAAA,MAAME,MAAgB,EAAE;IACxB,IAAK,MAAMC,KAAKH,GAAK,CAAA;AACnB,QAAA,IAAIA,IAAII,cAAc,CAACD,MAAMH,GAAG,CAACG,EAAE,EAAE;YACnCD,GAAI7F,CAAAA,IAAI,CACN,CAAA,EAAGgG,kBAAmBF,CAAAA,CAAAA,CAAAA,CAAG,CAAC,EAAEE,kBAAAA,CAC1B,OAAOL,GAAG,CAACG,CAAAA,CAAE,KAAK,QAAW3G,GAAAA,IAAAA,CAAKI,SAAS,CAACoG,GAAG,CAACG,EAAE,CAAIH,GAAAA,GAAG,CAACG,CAAAA,CAAE,CAC3D,CAAA,CAAA,CAAA;AAEP;AACF;AACA,IAAA,OAAO,GAAGF,UAAa,GAAA,GAAA,GAAM,KAAKC,GAAII,CAAAA,IAAI,CAAC,GAAM,CAAA,CAAA,CAAA;AACnD;AAEO,SAASC,cAAcnH,KAAa,EAAA;AACzC,IAAA,MAAMoH,SAAiC,EAAC;AACxCpH,IAAAA,KAAAA,GAAQA,KAAMqH,CAAAA,IAAI,EAAGC,CAAAA,OAAO,CAAC,WAAa,EAAA,EAAA,CAAA;IAC1C,MAAMC,MAAAA,GAASvH,KAAMwH,CAAAA,KAAK,CAAC,GAAA,CAAA;IAC3B,IAAK,IAAI3G,IAAI,CAAGA,EAAAA,CAAAA,GAAI0G,OAAOxG,MAAM,EAAEF,KAAK,CAAG,CAAA;QACzC,MAAM4G,aAAAA,GAAgBF,MAAM,CAAC1G,CAAE,CAAA;QAC/B,MAAM6G,KAAAA,GAAQD,aAAcD,CAAAA,KAAK,CAAC,GAAA,CAAA;QAClC,MAAM3H,GAAAA,GAAM8H,kBAAmBD,CAAAA,KAAAA,CAAME,KAAK,EAAA,CAAA;QAC1C,MAAM5H,KAAAA,GAAQ0H,MAAM3G,MAAM,GAAG,IAAI2G,KAAMR,CAAAA,IAAI,CAAC,GAAO,CAAA,GAAA,EAAA;QACnDE,MAAM,CAACvH,GAAI,CAAA,GAAG8H,kBAAmB3H,CAAAA,KAAAA,CAAAA;AACnC;IACA,OAAOoH,MAAAA;AACT;AAEO,SAASS,QAAQC,MAAkB,EAAA;IACxC,MAAMC,OAAAA,GAAUC,6BAAc,CAAA,IAAIC,UAAWH,CAAAA,MAAAA,CAAAA,CAAAA;IAC7C,OAAOC,OAAAA,CAAQT,OAAO,CAAC,KAAO,EAAA,GAAA,CAAA,CAAKA,OAAO,CAAC,KAAO,EAAA,GAAA,CAAA,CAAKA,OAAO,CAAC,IAAM,EAAA,EAAA,CAAA;AACvE;;ACtCO,SAASY,QAAQzD,OAAuB,EAAA;AAC7C,IAAA,IAAIkB,IAAY,GAAA,IAAA;AAChB,IAAA,IAAIwC,OAAU1D,GAAAA,OAAAA,CAAQ0D,OAAO,IAAI,EAAC;IAClC,IAAI1D,OAAAA,CAAQ2D,MAAM,KAAK,MAAQ,EAAA;QAC7BD,OAAU,GAAA;AACR,YAAA,cAAA,EACE1D,OAAQ4D,CAAAA,WAAW,KAAK,MAAA,GACpB,iDACA,GAAA,gCAAA;AACN,YAAA,GAAGF;AACL,SAAA;AACF;IACA,IAAI1D,OAAAA,CAAQkB,IAAI,EAAE;AAChBA,QAAAA,IAAAA,GACElB,OAAQ4D,CAAAA,WAAW,KAAK,MAAA,GACpB1B,uBAAwBlC,CAAAA,OAAAA,CAAQkB,IAAI,EAAE,KACtCvF,CAAAA,GAAAA,IAAAA,CAAKI,SAAS,CAACiE,QAAQkB,IAAI,CAAA;AACnC;IAEA,OAAO,IAAI7F,OAAQ,CAAA,CAACC,OAAS2E,EAAAA,MAAAA,GAAAA;QAC3B4D,KAAM7D,CAAAA,OAAAA,CAAQD,GAAG,EAAE;AACjB4D,YAAAA,MAAAA,EAAQ3D,QAAQ2D,MAAM;YACtBzC,IAAMA,EAAAA,IAAAA;AACNwC,YAAAA;SAECI,CAAAA,CAAAA,IAAI,CAAC,CAACvI,KAAAA,GAAoBD,QAAQC,KAAMwI,CAAAA,IAAI,EAC5CC,CAAAA,CAAAA,CAAAA,KAAK,CAAC/D,MAAAA,CAAAA;AACX,KAAA,CAAA;AACF;;ACjCA,MAAMgE,OAAU,GAAA,gEAAA;AAEhB,SAASC,eAAeC,CAAS,EAAA;;AAE/B,IAAA,MAAMC,OAASC,GAAAA,IAAAA,CAAKD,MAAM,IAAIC,KAAKC,QAAQ;AAC3C,IAAA,MAAMC,KAAQ,GAAA,KAAA;IACd,MAAMC,CAAAA,GAAI,IAAIhB,UAAWW,CAAAA,CAAAA,CAAAA;AACzB,IAAA,IAAK,IAAI/H,CAAI,GAAA,CAAA,EAAGA,CAAI+H,GAAAA,CAAAA,EAAG/H,KAAKmI,KAAO,CAAA;QACjCH,OAAOK,CAAAA,eAAe,CAACD,CAAAA,CAAEE,QAAQ,CAACtI,CAAGA,EAAAA,CAAAA,GAAIuI,IAAKC,CAAAA,GAAG,CAACT,CAAAA,GAAI/H,CAAGmI,EAAAA,KAAAA,CAAAA,CAAAA,CAAAA;AAC3D;IACA,OAAOC,CAAAA;AACT;AAEO,SAASK,eAAevI,MAAc,EAAA;AAC3C,IAAA,IAAIwI,GAAM,GAAA,EAAA;IACV,MAAMC,QAAAA,GAAWd,QAAQ3H,MAAM;IAC/B,MAAM0I,OAAAA,GAAU,MAAO,GAAMD,GAAAA,QAAAA;AAC7B,IAAA,MAAOzI,SAAS,CAAG,CAAA;AACjB,QAAA,MAAM2I,MAAMf,cAAeS,CAAAA,IAAAA,CAAKO,IAAI,CAAE5I,SAAS,GAAO0I,GAAAA,OAAAA,CAAAA,CAAAA;QACtD,IAAK,IAAI5I,IAAI,CAAGA,EAAAA,CAAAA,GAAI6I,IAAI3I,MAAM,IAAIA,MAAS,GAAA,CAAA,EAAGF,CAAK,EAAA,CAAA;YACjD,MAAM+I,UAAAA,GAAaF,GAAG,CAAC7I,CAAE,CAAA;AACzB,YAAA,IAAI+I,aAAaH,OAAS,EAAA;gBACxBF,GAAOb,IAAAA,OAAAA,CAAQmB,MAAM,CAACD,UAAaJ,GAAAA,QAAAA,CAAAA;AACnCzI,gBAAAA,MAAAA,EAAAA;AACF;AACF;AACF;IACA,OAAOwI,GAAAA;AACT;AAEO,SAASO,gBAAgBC,IAAY,EAAA;AAC1C,IAAA,IAAIA,KAAKhJ,MAAM,GAAG,MAAMgJ,IAAKhJ,CAAAA,MAAM,GAAG,GAAK,EAAA;QACzC,OAAOjB,OAAAA,CAAQ4E,MAAM,CAAC,IAAI/F,eAAAA,CAAgB,CAAC,qBAAqB,EAAEoL,IAAKhJ,CAAAA,MAAM,CAAE,CAAA,CAAA,CAAA;AACjF;IAEA,OAAO,IAAIjB,OAAQ,CAAA,CAACC,OAAS2E,EAAAA,MAAAA,GAAAA;AAC3BmE,QAAAA,MAAAA,CAAOmB,MAAM,CAACC,MAAM,CAAC,SAAW,EAAA,IAAIC,WAAcC,EAAAA,CAAAA,MAAM,CAACJ,IAAAA,CAAAA,CAAAA,CAAOxB,IAAI,CAClE,CAACT,MAAAA,GAAAA;YACC,OAAO/H,OAAAA,CAAQ8H,OAAQ,CAAA,IAAII,UAAWH,CAAAA,MAAAA,CAAAA,CAAAA,CAAAA;AACxC,SAAA,EACA,CAACjJ,KAAAA,GAAAA;uCAEC,OAAO6F,MAAO7F,CAAAA,KAAAA,CAAAA;AAChB,SAAA,CAAA;AAEJ,KAAA,CAAA;AACF;AACA;AACO,MAAMuL,eAAe,CAACC,KAAAA,GAC3B1C,mBACE2C,IAAKD,CAAAA,KAAAA,CAAM/C,OAAO,CAAC,IAAA,EAAM,KAAKA,OAAO,CAAC,MAAM,GACzCE,CAAAA,CAAAA,CAAAA,KAAK,CAAC,EACNlG,CAAAA,CAAAA,GAAG,CAAC,CAACiJ,CAAAA,GAAAA;AACJ,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,EAAEA,CAAEC,CAAAA,UAAU,CAAC,CAAA,CAAA,CAAGC,QAAQ,CAAC,EAAA,CAAA,CAAA,CAAK,CAAC/H,KAAK,CAAC,EAAK,CAAA,CAAA,CAAA;KAE3DwE,CAAAA,CAAAA,IAAI,CAAC,EACT,CAAA,CAAA;AAEI,SAASwD,SAASC,GAAW,EAAA;IAClC,IAAI;QACF,MAAMjD,KAAAA,GAAQiD,GAAInD,CAAAA,KAAK,CAAC,GAAA,CAAA;QACxB,IAAIE,KAAAA,CAAM3G,MAAM,KAAK,CAAG,EAAA;AACtB,YAAA,MAAM,IAAInC,KAAM,CAAA,kBAAA,CAAA;AAClB;QACA,OAAO;AACLgM,YAAAA,MAAAA,EAAQxK,KAAKC,KAAK,CAAC+J,YAAa1C,CAAAA,KAAK,CAAC,CAAE,CAAA,CAAA,CAAA;AACxCmD,YAAAA,OAAAA,EAASzK,KAAKC,KAAK,CAAC+J,YAAa1C,CAAAA,KAAK,CAAC,CAAE,CAAA,CAAA;AAC3C,SAAA;AACF,KAAA,CAAE,OAAOtG,CAAG,EAAA;AACV,QAAA,MAAM,IAAI/B,eAAgB,CAAA,qBAAA,CAAA;AAC5B;AACF;AAEO,SAASyL,eAAgBC,CAAAA,QAAgB,EAAEC,KAAa,EAAEvG,OAA+B,EAAA;AAC9F,IAAA,IAAI,CAACuG,KAAO,EAAA;AACV,QAAA,MAAM,IAAIrM,eAAgB,CAAA,mBAAA,CAAA;AAC5B;IAEA,IAAI;AACF,QAAA,MAAMgM,MAAMD,QAASK,CAAAA,QAAAA,CAAAA;AAErB,QAAA,IAAIC,KAAUL,KAAAA,GAAAA,CAAIE,OAAO,CAACG,KAAK,EAAE;YAC/B,MAAM,IAAIpM,MAAM,CAAC,2BAA2B,EAAE+L,GAAIE,CAAAA,OAAO,CAACG,KAAK,CAAE,CAAA,CAAA;AACnE;AAEAC,QAAAA,WAAAA,CAAYF,UAAUtG,OAAS,EAAA,IAAA,CAAA;;AAG/B,QAAA,IAAI,CAACkG,GAAAA,CAAIE,OAAO,CAAC,MAAM,EAAE;AACvB,YAAA,MAAM,IAAIjM,KAAM,CAAA,sCAAA,CAAA;AAClB;AAEA,QAAA,OAAO+L,IAAIE,OAAO;AACpB,KAAA,CAAE,OAAOzJ,CAAG,EAAA;QACV,MAAM,IAAI7B,mBAAoB6B,CAAAA,CAAAA,CAAE8J,OAAO,CAAA;AACzC;AACF;AAEO,SAASD,WAAYN,CAAAA,GAAW,EAAElG,OAA6B,EAAE0G,YAAY,KAAK,EAAA;;IAEvF,IAAI,EAAEC,SAAS,EAAEC,mBAAmB,EAAEhF,MAAM,EAAEiF,QAAQ,EAAEC,SAAS,EAAE,GAAG9G,OAAAA;AACtE,IAAA,IAAI,CAAC2G,SAAW,EAAA;QACdA,SAAY,GAAA,CAAA;AACd;IACA,MAAMnI,GAAAA,GAAM,CAACoI,CAAAA,mBAAAA,KAAAA,IAAAA,IAAAA,gDAAAA,mBAA2B5H,EAAAA,KAAAA,IAAAA,CAAKR,GAAG,EAAC,IAAK,IAAA;IAEtD,MAAM4H,OAAAA,GAAUH,QAASC,CAAAA,GAAAA,CAAAA,CAAKE,OAAO;IAErC,IAAI,CAACA,OAAQW,CAAAA,GAAG,EAAE;AAChB,QAAA,MAAM,IAAInM,eAAgB,CAAA,+BAAA,CAAA;AAC5B;IACA,IAAIwL,OAAAA,CAAQW,GAAG,KAAKnF,MAAQ,EAAA;AAC1B,QAAA,MAAM,IAAIhH,eAAgB,CAAA,CAAC,+BAA+B,EAAEwL,OAAAA,CAAQW,GAAG,CAAE,CAAA,CAAA;AAC3E;IAEA,IAAI,CAACX,OAAQY,CAAAA,GAAG,EAAE;AAChB,QAAA,MAAM,IAAIpM,eAAgB,CAAA,iCAAA,CAAA;AAC5B;;;IAIA,IACEqM,KAAAA,CAAMC,OAAO,CAACd,OAAQY,CAAAA,GAAG,IACrBZ,OAAQY,CAAAA,GAAG,CAACG,OAAO,CAACT,SAAAA,GAAYI,YAAYD,QAAYC,IAAAA,SAAAA,CAAAA,KAAe,EAAC,GACxEV,OAAQY,CAAAA,GAAG,MAAMN,SAAYI,GAAAA,SAAAA,GAAYD,QAAYC,IAAAA,SAAQ,CACjE,EAAA;AACA,QAAA,MAAM,IAAIlM,eAAgB,CAAA,CAAC,iCAAiC,EAAEwL,OAAAA,CAAQY,GAAG,CAAE,CAAA,CAAA;AAC7E;AAEA,IAAA,IAAIZ,QAAQgB,GAAG,IAAIhB,OAAQgB,CAAAA,GAAG,KAAKN,SAAW,EAAA;AAC5C,QAAA,MAAM,IAAIlM,eAAgB,CAAA,CAAC,yCAAyC,EAAEwL,OAAAA,CAAQgB,GAAG,CAAE,CAAA,CAAA;AACrF;AAEA,IAAA,MAAMC,QAAW1C,GAAAA,IAAAA,CAAKO,IAAI,CAAC1G,GAAMmI,GAAAA,SAAAA,CAAAA;AACjC,IAAA,MAAMW,QAAW3C,GAAAA,IAAAA,CAAK4C,KAAK,CAAC/I,GAAMmI,GAAAA,SAAAA,CAAAA;IAElC,IAAI,CAACP,OAAQoB,CAAAA,GAAG,EAAE;AAChB,QAAA,MAAM,IAAI5M,eAAgB,CAAA,kCAAA,CAAA;AAC5B;AAEA,IAAA,IAAIyM,QAAWI,GAAAA,MAAAA,CAAOrB,OAAQoB,CAAAA,GAAG,CAAG,EAAA;AAClC,QAAA,MAAM,IAAI5M,eAAgB,CAAA,CAAC,kCAAkC,EAAEwL,OAAAA,CAAQoB,GAAG,CAAE,CAAA,CAAA;AAC9E;AAEA,IAAA,IAAIpB,QAAQsB,GAAG,IAAIL,WAAWI,MAAOrB,CAAAA,OAAAA,CAAQsB,GAAG,CAAG,EAAA;AACjD,QAAA,MAAM,IAAI9M,eAAgB,CAAA,CAAC,wCAAwC,EAAEwL,OAAAA,CAAQsB,GAAG,CAAE,CAAA,CAAA;AACpF;IAEA,IAAI,CAACtB,OAAQuB,CAAAA,GAAG,EAAE;AAChB,QAAA,MAAM,IAAI/M,eAAgB,CAAA,wCAAA,CAAA;AAC5B;AACA,IAAA,IAAI6M,MAAOrB,CAAAA,OAAAA,CAAQuB,GAAG,CAAA,GAAIL,QAAU,EAAA;AAClC,QAAA,MAAM,IAAI1M,eAAgB,CAAA,CAAC,sCAAsC,EAAEwL,OAAAA,CAAQuB,GAAG,CAAE,CAAA,CAAA;AAClF;IAEA,OAAOvB,OAAAA;AACT;AAEA;AACO,MAAMwB,aAAgB,GAAA;AAC3B,IAAA,KAAA;;AAEA,IAAA,KAAA;AACA,IAAA,KAAA;AACA,IAAA,KAAA;AACA,IAAA,KAAA;AACA,IAAA,KAAA;AACA,IAAA,KAAA;AACA,IAAA,OAAA;AACA,IAAA,WAAA;AACA,IAAA,SAAA;AACA,IAAA,QAAA;AACA,IAAA,KAAA;AACA,IAAA,KAAA;AACA,IAAA,SAAA;AACA,IAAA,KAAA;AACA,IAAA,cAAA;AACA,IAAA,UAAA;AACA,IAAA,YAAA;AACA,IAAA,cAAA;AACA,IAAA,gBAAA;AACA,IAAA,MAAA;AACA,IAAA,MAAA;AACA,IAAA,KAAA;AACA,IAAA,QAAA;AACA,IAAA,KAAA;AACA,IAAA,KAAA;AACA,IAAA,KAAA;AACA,IAAA,KAAA;AACA,IAAA,KAAA;AACA,IAAA,KAAA;AACA,IAAA,QAAA;AACA,IAAA,QAAA;AACA,IAAA,KAAA;AACA,IAAA,OAAA;AACA,IAAA,WAAA;AACA,IAAA,SAAA;AACA,IAAA,OAAA;AACA,IAAA;CACD;;ACxMD,MAAMC,sBAAyB,GAAA,IAAA;AAExB,SAASC,0BAA0B9H,OAA8B,EAAA;IACtE,MAAM,EAAED,GAAG,EAAEzB,QAAQ,EAAEwI,SAAS,EAAEiB,aAAa,EAAE,GAAG/H,OAAAA;IACpD,IAAIgI,oBAAAA;IACJ,MAAMC,GAAAA,GAAMlI,IAAIoH,OAAO,CAAC,KAAKpH,GAAIoH,CAAAA,OAAO,CAAC,IAAQ,CAAA,GAAA,CAAA,CAAA;AACjD,IAAA,MAAMe,WAAcnI,GAAAA,GAAAA,CAAIoI,MAAM,CAAC,CAAGF,EAAAA,GAAAA,CAAAA;AAElC,IAAA,MAAMG,KAAQlJ,GAAAA,iBAAAA,EAAAA;IAEd,IAAImJ,KAAAA;AAEJ,IAAA,MAAMC,IAAO,GAAA,IAAA;QACX,OAAO,IAAIjN,QAAQ,CAACC,OAAAA,GAAAA;AAClBE,YAAAA,MAAAA,CAAO4D,QAAQ,CAAC8B,IAAI,CAACM,WAAW,CAAC4G,KAAAA,CAAAA;YACjC5M,MAAO+F,CAAAA,gBAAgB,CAAC,SAAA,EAAWhB,kBAAoB,EAAA,KAAA,CAAA;AACvD6H,YAAAA,KAAAA,CAAM1G,MAAM,GAAG,IAAA;gBACbpG,OAAQ,CAAA,IAAA,CAAA;AACV,aAAA;AACF,SAAA,CAAA;AACF,KAAA;AAEA,IAAA,MAAM8C,QAAQ,CAACmK,YAAAA,GAAAA;AACbD,QAAAA,IAAAA,EAAAA,CAAOxE,IAAI,CAAC,IAAA;YACV,IAAIyE,YAAAA,IAAgBP,yBAAyBO,YAAc,EAAA;AACzD5J,gBAAAA,IAAAA,EAAAA;gBACAqJ,oBAAuBO,GAAAA,YAAAA;AACvB,gBAAA,MAAMC,IAAO,GAAA,IAAA;oBACXJ,KAAMK,CAAAA,aAAa,CAAEC,WAAW,CAAC,GAAG5B,SAAU,CAAA,CAAC,EAAEkB,oBAAAA,CAAAA,CAAsB,EAAEE,WAAAA,CAAAA;AAC3E,iBAAA;AACAM,gBAAAA,IAAAA,EAAAA;AACAH,gBAAAA,KAAAA,GAAQ7M,MAAOqD,CAAAA,WAAW,CAAC2J,IAAAA,EAAMT,aAAiBF,IAAAA,sBAAAA,CAAAA;AACpD;AACF,SAAA,CAAA;AACF,KAAA;AAEA,IAAA,MAAMlJ,IAAO,GAAA,IAAA;QACXqJ,oBAAuB,GAAA,IAAA;AACvB,QAAA,IAAIK,KAAO,EAAA;AACT7M,YAAAA,MAAAA,CAAOsD,aAAa,CAACuJ,KAAAA,CAAAA;YACrBA,KAAQ,GAAA,IAAA;AACV;AACF,KAAA;AAEA,IAAA,MAAM9H,qBAAqB,CAAC5D,CAAAA,GAAAA;QAC1B,IAAIA,CAAAA,CAAE6D,MAAM,KAAK0H,WAAAA,IAAevL,EAAEkE,MAAM,KAAKuH,KAAMK,CAAAA,aAAa,EAAE;YAChE,IAAI9L,CAAAA,CAAE+D,IAAI,KAAK,OAAS,EAAA;AACtB/B,gBAAAA,IAAAA,EAAAA;AACAL,gBAAAA,QAAAA,CAAS3B,EAAE+D,IAAI,CAAA;AACjB,aAAA,MAAO,IAAI/D,CAAAA,CAAE+D,IAAI,KAAK,SAAW,EAAA;AAC/B/B,gBAAAA,IAAAA,EAAAA;AACAL,gBAAAA,QAAAA,EAAAA;AACF;AACF;AACF,KAAA;IAEA8J,KAAM3G,CAAAA,YAAY,CAAC,KAAO1B,EAAAA,GAAAA,CAAAA;IAE1B,OAAO;AACLpB,QAAAA,IAAAA;AACAP,QAAAA;AACF,KAAA;AACF;;AC9DA;;;IAIO,SAASuK,cAAAA,CAA8CC,MAAS,EAAA;AACrE,IAAA,IAAI,CAACA,MAAAA,IAAU,OAAOA,MAAAA,KAAW,QAAU,EAAA;QACzC,OAAOA,MAAAA;AACT;AACA,IAAA,OAAOjN,IAAKC,CAAAA,KAAK,CAACD,IAAAA,CAAKI,SAAS,CAAC6M,MAAAA,CAAAA,CAAAA;AACnC;AAEA,SAASC,KAAAA,CAAMC,aAAkB,EAAEC,YAAiB,EAAA;IAClD,IAAK,MAAMC,KAAKD,YAAc,CAAA;AAC5B,QAAA,IAAIA,YAAY,CAACC,CAAE,CAAA,KAAKC,SAAW,EAAA;AACjC,YAAA,IAAI,OAAOF,YAAY,CAACC,CAAAA,CAAE,KAAK,QAAYD,IAAAA,YAAY,CAACC,CAAAA,CAAE,CAACxO,WAAW,CAACF,IAAI,KAAK,QAAU,EAAA;AACxFwO,gBAAAA,aAAa,CAACE,CAAAA,CAAE,GAAGH,KAAAA,CAAMC,aAAa,CAACE,CAAE,CAAA,IAAI,EAAC,EAAGD,YAAY,CAACC,CAAE,CAAA,CAAA;aAC3D,MAAA;AACLF,gBAAAA,aAAa,CAACE,CAAAA,CAAE,GAAGD,YAAY,CAACC,CAAE,CAAA;AACpC;AACF;AACF;IACA,OAAOF,aAAAA;AACT;AAOO,SAASI,YAAa,CAAA,GAAGC,OAAc,EAAA;AAC5C,IAAA,OAAOA,OAAQC,CAAAA,MAAM,CAAC,CAACN,aAAeC,EAAAA,YAAAA,GAAAA;QACpC,OAAOF,KAAAA,CAAMC,aAAiB,IAAA,EAAIC,EAAAA,YAAAA,CAAAA;AACpC,KAAA,EAAG,EAAC,CAAA;AACN;;ACrCO,MAAMM,cAAiB,GAAA,CAAC1I,MAAc2I,aAC3CA,GAAAA,aAAAA,IAAiBA,cAAcvG,KAAK,CAAC,MAAQwG,CAAAA,CAAAA,MAAM,CAAC,CAACC,EAAAA,GAAOA,OAAO7I,IAAMrE,CAAAA,CAAAA,MAAM,GAAG,CAAC;AAE9E,MAAMmN,eAAAA,GAAkB,CAACC,KAAAA,EAAeC,SAC7CA,MAAUA,IAAAA,MAAAA,CAAO5G,KAAK,CAAC,GAAKoE,CAAAA,CAAAA,OAAO,CAACuC,KAAAA,CAAAA,GAAS,EAAE;;ACDjD,MAAME,YAAY,CAAC7J,GAAAA,EAAaR,QAAQ,GAAG,EAAEC,SAAS,GAAG,GAAA;IACvD,MAAMqK,IAAAA,GAAOrO,MAAOsO,CAAAA,OAAO,GAAItO,CAAAA,MAAOuO,CAAAA,UAAU,GAAGxK,KAAI,IAAK,CAAA;IAC5D,MAAMyK,GAAAA,GAAMxO,MAAOyO,CAAAA,OAAO,GAAIzO,CAAAA,MAAO0O,CAAAA,WAAW,GAAG1K,MAAK,IAAK,CAAA;AAE7D,IAAA,OAAOhE,OAAO2O,IAAI,CAChBpK,KACA,kBACA,EAAA,CAAC,KAAK,EAAE8J,IAAAA,CAAK,KAAK,EAAEG,GAAAA,CAAI,OAAO,EAAEzK,KAAAA,CAAM,QAAQ,EAAEC,MAAAA,CAAO,kCAAkC,CAAC,CAAA;AAE/F,CAAA;AAEO,SAAS4K,QAAAA,CAASrK,GAAW,EAAEC,OAAqB,EAAA;IACzD,IAAIqK,KAAAA,GAAQrK,QAAQqK,KAAK;AAEzB,IAAA,IAAIA,KAAO,EAAA;QACTA,KAAMC,CAAAA,QAAQ,CAACC,IAAI,GAAGxK,GAAAA;KACjB,MAAA;AACLsK,QAAAA,KAAAA,GAAQT,SAAU7J,CAAAA,GAAAA,CAAAA;AACpB;AAEA,IAAA,IAAI,CAACsK,KAAO,EAAA;mCAEV,MAAM,IAAIlQ,KAAM,CAAA,sBAAA,CAAA;AAClB;IAEA,IAAIqQ,SAAAA;IACJ,IAAIC,OAAAA;IAEJ,OAAO,IAAIpP,OAA0C,CAAA,CAACC,OAAS2E,EAAAA,MAAAA,GAAAA;QAC7D,SAASyK,aAAAA,GAAAA;YACP5L,aAAc2L,CAAAA,OAAAA,CAAAA;YACdxJ,YAAauJ,CAAAA,SAAAA,CAAAA;YACbhP,MAAO6F,CAAAA,mBAAmB,CAAC,SAAWsJ,EAAAA,eAAAA,CAAAA;AACxC;AAEAH,QAAAA,SAAAA,GAAYpK,UACV,CAAA,IAAA;AACEsK,YAAAA,aAAAA,EAAAA;AACAzK,YAAAA,MAAAA,CAAO,IAAI/F,eAAgB,CAAA,WAAA,CAAA,CAAA;SAE7B8F,EAAAA,OAAAA,CAAQM,OAAO,IAAI,EAAK,GAAA,IAAA,CAAA;AAG1BmK,QAAAA,OAAAA,GAAU5L,WAAY,CAAA,IAAA;YACpB,IAAIwL,KAAAA,CAAOO,MAAM,EAAE;AACjBF,gBAAAA,aAAAA,EAAAA;AACAzK,gBAAAA,MAAAA,CAAO,IAAIlF,oBAAqB,CAAA,mBAAA,CAAA,CAAA;AAClC;SACC,EAAA,GAAA,CAAA;QAEHS,MAAO+F,CAAAA,gBAAgB,CAAC,SAAWoJ,EAAAA,eAAAA,CAAAA;AAEnC,QAAA,SAASA,gBAAgBhO,CAAe,EAAA;YACtC,IAAI,CAACA,EAAE+D,IAAI,IAAI/D,EAAE+D,IAAI,CAACC,IAAI,KAAK,wBAA0B,EAAA;AACzD+J,YAAAA,aAAAA,EAAAA;AACAL,YAAAA,KAAAA,CAAOvJ,KAAK,EAAA;AACZ,YAAA,MAAMJ,OAAO/D,CAAE+D,CAAAA,IAAI,CAACM,QAAQ,IAAIrE,EAAE+D,IAAI;AACtCA,YAAAA,IAAAA,CAAKtG,KAAK,GAAG6F,MAAO,CAAA,IAAI/F,eAAgBwG,CAAAA,IAAAA,CAAKtG,KAAK,EAAEsG,IAAKrG,CAAAA,iBAAiB,CAAKiB,CAAAA,GAAAA,OAAAA,CAAQqB,EAAE+D,IAAI,CAAA;AAC/F;AACF,KAAA,CAAA;AACF;;AC/DA;;;;;;;AAOA,GAAA,SAAAzB,kBAAA,CAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA;;;;;;;;;;;;;AAIA,MAAM4L,YAAe,GAAA,CAAA,EAAGC,WAAYtM,CAAAA,GAAG,EAAG,CAAA,CAAC,EAAGmG,IAAKoG,CAAAA,MAAM,EAAK,GAAA,UAAA,GAAc,CAAG,CAAA,CAAA;AAC/E,MAAMC,WAAgC,EAAC;AAEhC,MAAMC,QAAAA,CAAAA;;;;AAaXC,IAAAA,QAAAA,CAASC,QAAgB,EAAE7N,EAAc,EAAEgD,OAAAA,GAAU,IAAI,EAAQ;QAC/D,IAAI,CAAC6K,UAAU,MAAM,gBAAA;QAErB,IAAI,CAAC3P,MAAOC,CAAAA,YAAY,EAAE;;AAExB6B,YAAAA,EAAAA,EAAAA;AACA,YAAA;AACF;AAEA,QAAA,MAAM8N,eAAkB,GAAA,IAAI,CAACC,SAAS,GAAGF,QAAAA;QAEzC1P,YAAaK,CAAAA,OAAO,CAACsP,eAAiBP,EAAAA,YAAAA,CAAAA;;QAEtCzK,UAAW,CAAA,IAAA;AACT,YAAA,IAAI3E,YAAaC,CAAAA,OAAO,CAAC0P,eAAAA,CAAAA,KAAqBP,YAAcvN,EAAAA,EAAAA,EAAAA;SAC3D,EAAA,GAAA,CAAA;;QAGH8C,UAAW,CAAA,IAAA;AACT3E,YAAAA,YAAAA,CAAaQ,UAAU,CAACmP,eAAAA,CAAAA;SACvB9K,EAAAA,OAAAA,CAAAA;AACL;IAEAgL,yBAA0BC,CAAAA,SAAiB,EAAEC,SAAc,EAAQ;;QAEjE,IAAI;YACFR,QAAQ,CAACO,UAAU,CAACC,SAAAA,CAAAA;AACtB,SAAA,CAAE,OAAOC,CAAG,EAAA;;AAEZ;QAEA,IAAI,CAACjQ,MAAOC,CAAAA,YAAY,EAAE;AACxB,YAAA,IAAI,CAACiQ,MAAM,CAAC5N,IAAI,CAACyN,SAAWC,EAAAA,SAAAA,CAAAA;AAC5B,YAAA,OAAA;AACF;AAEA,QAAA,MAAM9K,IAAO,GAAA;YACXA,IAAM8K,EAAAA,SAAAA;YACNG,SAAW,EAAA,IAAI3M,OAAO4M,OAAO;AAC/B,SAAA;;;AAGAnQ,QAAAA,YAAAA,CAAaK,OAAO,CAAC,CAAG,EAAA,IAAI,CAACuP,SAAS,CAAC,KAAK,EAAEE,SAAAA,CAAAA,CAAW,EAAE5P,IAAAA,CAAKI,SAAS,CAAC2E,IAAAA,CAAAA,CAAAA;;QAG1EN,UAAW,CAAA,IAAA;YACT3E,YAAaQ,CAAAA,UAAU,CAAC,CAAG,EAAA,IAAI,CAACoP,SAAS,CAAC,KAAK,EAAEE,SAAW,CAAA,CAAA,CAAA;SAC3D,EAAA,IAAA,CAAA;AACL;IAEAM,kBAAmBN,CAAAA,SAAiB,EAAEjO,EAAuB,EAAQ;QACnE0N,QAAQ,CAACO,UAAU,GAAGjO,EAAAA;QACtB,IAAI,CAAC9B,MAAOC,CAAAA,YAAY,EAAE;AACxB,YAAA,IAAI,CAACiQ,MAAM,CAACnO,EAAE,CAACgO,SAAWjO,EAAAA,EAAAA,CAAAA;AAC1B,YAAA,OAAA;AACF;;QAGA9B,MAAO+F,CAAAA,gBAAgB,CAAC,SAAA,EAAW,CAACuK,EAAAA,GAAAA;AAClC,YAAA,IAAIA,EAAG1Q,CAAAA,GAAG,KAAK,CAAA,EAAG,IAAI,CAACiQ,SAAS,CAAC,KAAK,EAAEE,SAAW,CAAA,CAAA,EAAE;AACrD,YAAA,IAAI,CAACO,EAAAA,CAAGC,QAAQ,EAAE;AAClB,YAAA,MAAMC,WAAcrQ,GAAAA,IAAAA,CAAKC,KAAK,CAACkQ,GAAGC,QAAQ,CAAA;AAC1CzO,YAAAA,EAAAA,CAAG0O,YAAYtL,IAAI,CAAA;AACrB,SAAA,CAAA;AACF;IAxEAlG,WAAYyR,CAAAA,GAAW,EAAEC,cAAiC,CAAE;AAJ5Db,QAAAA,kBAAAA,CAAAA,IAAAA,EAAAA,aAAAA,SAAAA,CAAAA;AAEA,QAAApM,kBAAA,CAAA,IAAA,EAAQyM,UAAR,SAAA,CAAA;QAGE,IAAI,CAACL,SAAS,GAAGY,GAAAA;QACjB,IAAI,CAACP,MAAM,GAAGQ,cAAAA;AAChB;AAsEF;;;;;;;;;;;;;;;AChDA;;;;;IAMO,MAAMC,UAAmBhP,SAAAA,YAAAA,CAAAA;AA6E9B;;;;;;AAMC,MACD,MAAMiP,UAAAA,CAAWC,UAAa,GAAA,IAAI,EAA+B;QAC/D,IAAI,IAAI,CAACC,WAAW,EAAE;AACpB,YAAA,OAAO,IAAI;AACb;QAEA,IAAI,IAAI,CAACC,mBAAmB,EAAE;YAC5B,OAAO,IAAI,CAACA,mBAAmB;AACjC;AACA,QAAA,IAAI,CAACA,mBAAmB,GAAG,IAAIlR,OAAAA,CAAQ,OAAOC,OAAS2E,EAAAA,MAAAA,GAAAA;YACrD,IAAI;AACF,gBAAA,IAAI,IAAI,CAACuM,UAAU,CAACC,IAAI,EAAE;AACxB,oBAAA,MAAM,IAAI,CAACD,UAAU,CAACC,IAAI,EAAA;AAC5B;AACA,gBAAA,IAAI,IAAI,CAACC,SAAS,CAACD,IAAI,EAAE;AACvB,oBAAA,MAAM,IAAI,CAACC,SAAS,CAACD,IAAI,EAAA;AAC3B;AAEA,gBAAA,IAAI,CAAC,IAAI,CAACzM,OAAO,CAAC2M,SAAS,IAAIC,MAAOC,CAAAA,IAAI,CAAC,IAAI,CAAC7M,OAAO,CAAC2M,SAAS,CAAErQ,CAAAA,MAAM,KAAK,CAAG,EAAA;oBAC/E,MAAM,IAAI,CAACwQ,eAAe,EAAA;AAC5B;gBACA,IAAI,CAACR,WAAW,GAAG,IAAA;AAEnB,gBAAA,IAAID,UAAY,EAAA;oBACd,IAAI;AACG7Q,wBAAAA,IAAAA,OAAAA;AAAL,wBAAA,IAAI,GAACA,OAAAA,GAAAA,MAAAA,MAAAA,IAAAA,IAAAA,OAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAAA,CAAQuR,YAAY,CAAE,EAAA;4BACzB,MAAM,IAAI,CAACC,WAAW,EAAA;AACxB;AACF,qBAAA,CAAE,OAAOrQ,CAAG,EAAA;AACV,wBAAA,IAAI,CAACmB,IAAI,CAAClE,MAAAA,CAAOI,kBAAkB,EAAE2C,CAAAA,CAAAA;AACrC,wBAAA,MAAM,IAAI,CAAC+P,SAAS,CAACxQ,KAAK,EAAA;AAC5B;iBACK,MAAA;AACL,oBAAA,MAAM+Q,YAAY,MAAM,IAAI,CAACP,SAAS,CAACvR,GAAG,CAAC,MAAA,CAAA;AAC3C,oBAAA,IAAI8R,SAAW,EAAA;AACb,wBAAA,MAAM,IAAI,CAACC,WAAW,CAACD,SAAW,EAAA,IAAA,CAAA;AACpC;AACF;AACA3R,gBAAAA,OAAAA,CAAQ,IAAI,CAAA;AACd,aAAA,CAAE,OAAOqB,CAAG,EAAA;AACV,gBAAA,IAAIA,aAAazC,eAAiB,EAAA;oBAChC+F,MAAOtD,CAAAA,CAAAA,CAAAA;iBACF,MAAA;oBACLsD,MAAO,CAAA,IAAI/F,eAAgByC,CAAAA,CAAAA,CAAE8J,OAAO,CAAA,CAAA;AACtC;aACQ,QAAA;gBACR,IAAI,CAAC8F,mBAAmB,GAAGtD,SAAAA;AAC7B;AACF,SAAA,CAAA;QAEA,OAAO,IAAI,CAACsD,mBAAmB;AACjC;AAEA;;;;;;;MAQA,MAAMY,MAAMnN,OAAuC,GAAA,EAAE,EAAEoN,UAAAA,GAAkC,EAAE,EAAE;QAC3F5R,MAAO8O,CAAAA,QAAQ,CAAC+C,MAAM,CAAC,MAAM,IAAI,CAACC,iBAAiB,CAACtN,OAASoN,EAAAA,UAAAA,CAAAA,CAAAA;AAC/D;AAEA;;;;;;;;;;MAWA,MAAMG,eAAevN,OAAuC,GAAA,EAAE,EAAEwN,YAAAA,GAA6B,EAAE,EAAE;AAC/F,QAAA,MAAMzN,GAAM,GAAA,MAAM,IAAI,CAACuN,iBAAiB,CAAC;YACvCG,aAAe,EAAA,UAAA;AACf,YAAA,GAAGzN,OAAO;YACVL,OAAS,EAAA,OAAA;YACT+N,YAAc,EAAA;AAChB,SAAA,CAAA;QACA,MAAM,EAAE1M,QAAQ,EAAEvG,KAAK,EAAE,GAAG,MAAM2P,SAASrK,GAAKyN,EAAAA,YAAAA,CAAAA;AAChD,QAAA,MAAM,EAAEG,UAAU,EAAEP,UAAU,EAAE,GAC9B,CAAC3S,KAAS,IAAA,OAAOA,UAAU,QAAW,GAAA,MAAM,IAAI,CAACmT,SAAS,CAACnT,KAASuG,IAAAA,QAAAA,CAASvG,KAAK,CAAIA,GAAAA,KAAAA;AACxF,QAAA,MAAMoT,cAAc,MAAM,IAAI,CAACC,kBAAkB,CAAC9M,UAAU2M,UAAYP,EAAAA,UAAAA,CAAAA;AACxE,QAAA,MAAMW,UAAa,GAAA,MAAM,IAAI,CAACC,iBAAiB,CAC7CH,WACAF,EAAAA,UAAAA,EACAzE,YAAa,CAAA,IAAI,CAAClJ,OAAO,EAAE2N,UAAAA,CAAAA,CAAAA;QAE7BI,UAAWE,CAAAA,aAAa,GAAGjN,QAAAA,CAASiN,aAAa;AACjD,QAAA,IAAI,CAACC,YAAY,CAAC5C,yBAAyB,CAAC1R,MAAAA,CAAOE,UAAU,EAAEiU,UAAAA,CAAAA;QAC/D,OAAOX,UAAAA;AACT;AAEA;;;;;;AAMC,MACD,MAAMe,aAAcpO,CAAAA,GAAAA,GAAAA,CAAAA,IAAAA;YAAcvE,gBAAAA,EAAAA,OAAAA;gBAAAA,OAAAA,GAAAA,MAAAA,MAAAA,IAAAA,IAAAA,qCAAAA,gBAAAA,GAAAA,OAAAA,CAAQ8O,QAAQ,MAAhB9O,IAAAA,IAAAA,gBAAAA,KAAAA,SAAAA,GAAAA,SAAAA,GAAAA,iBAAkB+O,IAAI;QAAA,EAAE;AACxD,QAAA,IAAI,CAACxK,GAAK,EAAA;AACR,YAAA,OAAO1E,OAAQ4E,CAAAA,MAAM,CAAC,IAAI/F,eAAgB,CAAA,6CAAA,CAAA,CAAA;AAC5C;QACA,IAAIkU,SAAAA;QACJ,IAAI;AACFA,YAAAA,SAAAA,GAAY,IAAIvM,GAAI9B,CAAAA,GAAAA,CAAAA;AACtB,SAAA,CAAE,OAAOpD,CAAG,EAAA;YACV,OAAOtB,OAAAA,CAAQ4E,MAAM,CAAC,IAAI/F,eAAAA,CAAgB,CAAC,8BAA8B,EAAE6F,GAAI,CAAA,CAAC,CAAC,CAAA,CAAA;AACnF;AAEA,QAAA,MAAMsO,iBAAiB3L,aAAc0L,CAAAA,SAAAA,CAAUpM,MAAM,IAAIoM,UAAUnM,IAAI,CAAA;AACvE,QAAA,MAAMqM,iBAAiB,MAAM,IAAI,CAACV,SAAS,CAACS,eAAe5T,KAAK,CAAA;AAChE,QAAA,MAAM,EAAEkT,UAAU,EAAEP,UAAU,EAAEM,YAAY,EAAE,GAAGY,cAAAA;AACjDvO,QAAAA,GAAAA,GAAMA,GAAOvE,IAAAA,MAAAA,CAAO8O,QAAQ,CAACC,IAAI;QACjC,OAAQmD,YAAAA;YACN,KAAK,GAAA;AACClS,gBAAAA,IAAAA,OAAAA;AAAJ,gBAAA,IAAA,CAAIA,OAAAA,GAAAA,MAAAA,MAAAA,IAAAA,IAAAA,OAAAA,KAAAA,SAAAA,GAAAA,SAAAA,GAAAA,OAAAA,CAAQuR,YAAY,EAAE;AACxB,oBAAA,IAAIhN,GAAK,EAAA;wBACPvE,MAAO+S,CAAAA,MAAM,CAAC7F,WAAW,CACvB;4BACE/H,IAAM,EAAA,wBAAA;4BACNK,QAAUqN,EAAAA,cAAAA;4BACV5T,KAAO6T,EAAAA;yBAET,EAAA,CAAA,EAAGhE,SAASvI,QAAQ,CAAC,EAAE,EAAEuI,QAAAA,CAASkE,IAAI,CAAE,CAAA,CAAA;AAE5C;AACF;AACA,gBAAA;YACF,KAAK,GAAA;gBACH,IAAIhT,MAAAA,CAAOiT,MAAM,IAAI1O,GAAK,EAAA;oBACxBvE,MAAOiT,CAAAA,MAAM,CAAC/F,WAAW,CACvB;wBACE/H,IAAM,EAAA,wBAAA;wBACNK,QAAUqN,EAAAA,cAAAA;wBACV5T,KAAO6T,EAAAA;qBAET,EAAA,CAAA,EAAGhE,SAASvI,QAAQ,CAAC,EAAE,EAAEuI,QAAAA,CAASkE,IAAI,CAAE,CAAA,CAAA;AAE5C;AACA,gBAAA;AACF,YAAA;AAAS,gBAAA;oBACP,IAAIH,cAAAA,CAAejU,KAAK,EAAE;wBACxB,OAAOiB,OAAAA,CAAQ4E,MAAM,CACnB,IAAI1F,oBAAoB8T,cAAejU,CAAAA,KAAK,EAAEiU,cAAAA,CAAehU,iBAAiB,CAAA,CAAA;AAElF;AACA,oBAAA,MAAMwT,cAAc,MAAM,IAAI,CAACC,kBAAkB,CAACO,gBAAgBV,UAAYP,EAAAA,UAAAA,CAAAA;AAC9E,oBAAA,MAAMW,UAAa,GAAA,MAAM,IAAI,CAACC,iBAAiB,CAC7CH,WACAF,EAAAA,UAAAA,EACAzE,YAAa,CAAA,IAAI,CAAClJ,OAAO,EAAE2N,UAAAA,CAAAA,CAAAA;oBAE7BI,UAAWE,CAAAA,aAAa,GAAGI,cAAAA,CAAeJ,aAAa;AACvD,oBAAA,IAAI,CAACC,YAAY,CAAC5C,yBAAyB,CAAC1R,MAAAA,CAAOE,UAAU,EAAEiU,UAAAA,CAAAA;oBAC/D,OAAOX,UAAAA;AACT;AACF;AACF;AAEA;;;;AAIC,MACD,MAAMsB,MAAAA,CAAO1O,OAAgC,GAAA,EAAE,EAAE;QAC/C,IAAI,CAACA,OAAQ2O,CAAAA,SAAS,EAAE;AACtB,YAAA,MAAMC,aAAa,MAAM,IAAI,CAAClC,SAAS,CAACvR,GAAG,CAAC,MAAA,CAAA;AAC5C,YAAA,MAAM0T,gBAAgB7O,OAAQ6O,CAAAA,aAAa,KAAID,UAAAA,KAAAA,IAAAA,IAAAA,UAAAA,KAAAA,SAAAA,GAAAA,SAAAA,GAAAA,WAAYE,YAAY,CAAA;YACvEtT,MAAO8O,CAAAA,QAAQ,CAAC+C,MAAM,CACpB,MAAM,IAAI,CAAC0B,mBAAmB,CAAC;AAC7B,gBAAA,GAAG/O,OAAO;AACV6O,gBAAAA;AACF,aAAA,CAAA,CAAA;AAEJ;AACA,QAAA,MAAM,IAAI,CAACnC,SAAS,CAACxQ,KAAK,EAAA;AAC5B;AAEA;;;;;MAMA,MAAM8S,WAAYC,CAAAA,KAAa,EAAEtO,IAAAA,GAAkB,cAAc,EAAEX,OAAAA,GAAyB,EAAE,EAAE;QAC9F,IAAI,CAAC,IAAI,CAACA,OAAO,CAAC2M,SAAS,CAAEuC,mBAAmB,EAAE;AAChD,YAAA,OAAO7T,OAAQ4E,CAAAA,MAAM,CAAC,IAAI/F,eAAgB,CAAA,sCAAA,CAAA,CAAA;AAC5C;AACA,QAAA,MAAMiV,YAAe,GAAA;AACnBrI,YAAAA,SAAAA,EAAW9G,QAAQ8G,SAAS,IAAI,IAAI,CAAC9G,OAAO,CAAC8G,SAAS;AACtDsI,YAAAA,aAAAA,EAAepP,QAAQoP,aAAa,IAAI,IAAI,CAACpP,OAAO,CAACoP,aAAa;YAClEC,eAAiB1O,EAAAA,IAAAA;YACjBsO,KAAOA,EAAAA;AACT,SAAA;QAEA,OAAO,IAAI,CAACK,IAAI,CAAC;YACf3L,MAAQ,EAAA,MAAA;YACRC,WAAa,EAAA,MAAA;AACb7D,YAAAA,GAAAA,EAAK,IAAI,CAACC,OAAO,CAAC2M,SAAS,CAAEuC,mBAAmB;YAChDhO,IAAMiO,EAAAA;AACR,SAAA,CAAA;AACF;AAEA;;;;;;;;;MAUA,MAAMnC,YAAYhN,OAA8B,GAAA,EAAE,EAAEoN,UAAAA,GAAkC,EAAE,EAAE;QACxF,MAAM,IAAI,CAAChB,UAAU,CAAC,KAAA,CAAA;QACtB,IAAIyB,WAAAA;AACJ,QAAA,IAAI0B,aAAkB,EAAC;QAEvB,MAAMX,UAAAA,GAAa,MAAO,IAAI,CAAClC,SAAS,CAACvR,GAAG,CAAC,MAAA,CAAA,IAAY,EAAC;AAE1D,QAAA,MAAMgU,eAAejG,YACnB,CAAA;YACEuE,aAAe,EAAA,OAAA;YACf9N,OAAS,EAAA,MAAA;YACT6P,MAAQ,EAAA;SAEV,EAAA,IAAI,CAACxP,OAAO,EACZA,OAAAA,CAAAA;QAGF,IAAImP,YAAAA,CAAaM,mBAAmB,EAAE;YACpCN,YAAaO,CAAAA,YAAY,GAAGP,YAAAA,CAAaM,mBAAmB;AAC9D;QAEA,IAAI,IAAI,CAACzP,OAAO,CAAC2P,eAAe,KAAIf,UAAAA,KAAAA,IAAAA,IAAAA,UAAAA,KAAAA,SAAAA,GAAAA,SAAAA,GAAAA,UAAYgB,CAAAA,aAAa,CAAE,EAAA;AAC7DL,YAAAA,UAAAA,CAAW5B,UAAU,GAAGzE,YACtB0F,CAAAA,CAAAA,uBAAAA,UAAAA,KAAAA,SAAAA,GAAAA,SAAAA,GAAAA,UAAAA,CAAYjB,UAAU,KAAI,EAAC,EAC3B4B,UAAW5B,CAAAA,UAAU,IAAI,EAAC,CAAA;AAE5BE,YAAAA,WAAAA,GAAc,MAAM,IAAI,CAACgC,oBAAoB,CAAC;AAC5C,gBAAA,GAAGV,YAAY;AACfS,gBAAAA,aAAAA,EAAehB,WAAWgB;AAC5B,aAAA,CAAA;SACK,MAAA;AACL,YAAA,MAAME,OAAU,GAAA,MAAM,IAAI,CAACxC,iBAAiB,CAC1C;AACE,gBAAA,GAAG6B,YAAY;gBACfzB,YAAc,EAAA;aAEhBN,EAAAA,UAAAA,CAAAA;YAGF,MAAM,EAAEpM,QAAQ,EAAEvG,KAAK,EAAE,GAAG,MAAMqF,UAAUgQ,OAAS,EAAA;AACnDxP,gBAAAA,OAAAA,EAAS6O,aAAaY,oBAAoB;gBAC1CtP,WAAajF,EAAAA,MAAAA,CAAO8O,QAAQ,CAAC9J;AAC/B,aAAA,CAAA;AACAqN,YAAAA,WAAAA,GAAc,MAAM,IAAI,CAACC,kBAAkB,CAAC9M,UAAUmO,YAAc/B,EAAAA,UAAAA,CAAAA;YACpEwB,UAAWX,CAAAA,aAAa,GAAGjN,QAAAA,CAASiN,aAAa;YACjDsB,UAAa9U,GAAAA,KAAAA;AACf;QAEA,MAAMsT,UAAAA,GAAa,MAAM,IAAI,CAACC,iBAAiB,CAC7CH,WAAAA,EACA0B,UAAW5B,CAAAA,UAAU,EACrBwB,YAAAA,CAAAA;QAEFpB,UAAWE,CAAAA,aAAa,GAAGW,UAAAA,CAAWX,aAAa;AACnD,QAAA,IAAI,CAACC,YAAY,CAAC5C,yBAAyB,CAAC1R,MAAAA,CAAOE,UAAU,EAAEiU,UAAAA,CAAAA;AAC/D,QAAA,OAAOwB,WAAWnC,UAAU;AAC9B;AAEA;;AAEC,MACD,MAAM4C,cAAiB,GAAA;AACb,QAAA,IAAA,KAAA;AAAR,QAAA,OAAA,CAAQ,KAAA,GAAA,MAAM,IAAI,CAACtD,SAAS,CAACvR,GAAG,CAAC,MAAzB,CAAA,MAAA,IAAA,IAAA,KAAA,KAAA,SAAA,GAAA,SAAA,GAAD,KAAC,CAAmC8U,YAAY;AACzD;AAEA;;AAEC,MACD,MAAMC,eAAkB,GAAA;AACd,QAAA,IAAA,KAAA;AAAR,QAAA,OAAA,CAAQ,KAAA,GAAA,MAAM,IAAI,CAACxD,SAAS,CAACvR,GAAG,CAAC,MAAzB,CAAA,MAAA,IAAA,IAAA,KAAA,KAAA,SAAA,GAAA,SAAA,GAAD,KAAC,CAAmCyU,aAAa;AAC1D;AAEA;;AAEC,MACD,MAAMO,UAAa,GAAA;AACT,QAAA,IAAA,KAAA;AAAR,QAAA,OAAA,CAAQ,KAAA,GAAA,MAAM,IAAI,CAACzD,SAAS,CAACvR,GAAG,CAAC,MAAzB,CAAA,MAAA,IAAA,IAAA,KAAA,KAAA,SAAA,GAAA,SAAA,GAAD,KAAC,CAAmCmL,QAAQ;AACrD;AAEA;;AAEC,MACD,MAAM8J,YAAe,GAAA;AACX,QAAA,IAAA,KAAA;AAAR,QAAA,OAAA,CAAQ,KAAA,GAAA,MAAM,IAAI,CAAC1D,SAAS,CAACvR,GAAG,CAAC,MAAzB,CAAA,MAAA,IAAA,IAAA,KAAA,KAAA,SAAA,GAAA,SAAA,GAAD,KAAC,CAAmCkV,UAAU;AACvD;AAEA;;AAEC,MACD,MAAMC,aAAgB,GAAA;AACZ,QAAA,IAAA,KAAA;AAAR,QAAA,OAAA,CAAQ,KAAA,GAAA,MAAM,IAAI,CAAC5D,SAAS,CAACvR,GAAG,CAAC,MAAzB,CAAA,MAAA,IAAA,IAAA,KAAA,KAAA,SAAA,GAAA,SAAA,GAAD,KAAC,CAAmC2T,YAAY;AACzD;AAEA;;AAEC,MACD,MAAMyB,SAAY,GAAA;YACT,MAAC,EAAA,KAAA;AAAR,QAAA,OAAA,CAAQ,QAAA,MAAM,IAAI,CAAC7D,SAAS,CAACvR,GAAG,CAAC,MAAA,CAAA,MAAA,IAAA,IAAzB,KAAD,KAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,GAAA,KAAoCuO,CAAAA,KAAK,cAAzC,MAAA,KAAA,SAAA,GAAA,SAAA,GAAA,MAAA,CAA2C3G,KAAK,CAAC,GAAA,CAAA;AAC1D;AAEA;;AAEC,MACD,MAAMyN,OAAU,GAAA;AACN,QAAA,IAAA,KAAA;AAAR,QAAA,OAAA,CAAQ,KAAA,GAAA,MAAM,IAAI,CAAC9D,SAAS,CAACvR,GAAG,CAAC,MAAzB,CAAA,MAAA,IAAA,IAAA,KAAA,KAAA,SAAA,GAAA,SAAA,GAAD,KAAC,CAAmCsV,IAAI;AACjD;AAEA;;;;;AAKC,MACD,MAAMC,UAAAA,CAAW/B,SAAY,GAAA,KAAK,EAAE;AAClC,QAAA,MAAMgC,gBAAgB,CAAC,CAAE,MAAM,IAAI,CAACH,OAAO,EAAA;QAC3C,IAAI,CAACG,aAAiB,IAAA,CAAChC,SAAW,EAAA;YAChC,IAAI;gBACF,MAAM,IAAI,CAAC3B,WAAW,EAAA;gBACtB,OAAO,IAAA;AACT,aAAA,CAAE,OAAOrQ,CAAG,EAAA;gBACV,OAAO,KAAA;AACT;AACF;QACA,OAAOgU,aAAAA;AACT;AAEA;;;;;;MAOA,MAAcrD,kBACZtN,OAAuC,GAAA,EAAE,EACzCoN,UAAAA,GAAkC,EAAE,EACnB;AACZ,QAAA,IAAA,uBAAA,EAyCO,iCAAA,EAAA,aAAA;QAzCZ,IAAI,EAAA,CAAC,uBAAA,GAAA,IAAI,CAACpN,OAAO,CAAC2M,SAAS,MAAtB,IAAA,IAAA,uBAAA,KAAA,SAAA,GAAA,SAAA,GAAA,uBAAwBiE,CAAAA,sBAAsB,CAAE,EAAA;YACnD,MAAM,IAAI,CAACxE,UAAU,CAAC,KAAA,CAAA;AACxB;;QAEA,MAAM+C,YAAAA,GAAevC,OAAOS,MAAM,CAAC,EAAI,EAAA,IAAI,CAACrN,OAAO,EAAEA,OAAAA,CAAAA;QACrDoN,UAAWyD,CAAAA,aAAa,GAAGhM,cAAe,CAAA,EAAA,CAAA;AAE1C,QAAA,MAAM8I,UAAa,GAAA;AACjB7G,YAAAA,SAAAA,EAAWqI,aAAarI,SAAS;YACjCrM,KAAOoK,EAAAA,cAAAA,CAAesK,aAAa2B,WAAW,CAAA;AAC9CpH,YAAAA,KAAAA,EAAOyF,aAAazF,KAAK;AACzB7C,YAAAA,QAAAA,EAAUsI,aAAatI,QAAQ;AAC/B6I,YAAAA,YAAAA,EAAcP,aAAaO,YAAY;AACvCjC,YAAAA,aAAAA,EAAe0B,aAAa1B,aAAa;YACzCnE,aAAe6F,EAAAA,YAAAA,CAAa7F,aAAa,IAAI,MAAA;AAC7CyH,YAAAA,UAAAA,EAAY5B,aAAa4B,UAAU;AACnCvB,YAAAA,MAAAA,EAAQL,aAAaK,MAAM;AAC3B7P,YAAAA,OAAAA,EAASwP,aAAaxP,OAAO;AAC7BqR,YAAAA,MAAAA,EAAQ7B,aAAa6B,MAAM;AAC3BC,YAAAA,cAAAA,EAAgB9B,aAAa8B,cAAc;AAC3CC,YAAAA,UAAAA,EAAY/B,aAAa+B,UAAU;AACnCC,YAAAA,YAAAA,EAAchC,aAAagC,YAAY;AACvCC,YAAAA,UAAAA,EAAYjC,aAAaiC,UAAU;AACnCvC,YAAAA,aAAAA,EAAeM,aAAaN,aAAa;AACzCwC,YAAAA,eAAAA,EAAiBlC,aAAakC,eAAe;AAC7CC,YAAAA,kBAAAA,EAAoBnC,aAAamC,kBAAkB;AACnD,YAAA,GAAInC,YAAaoC,CAAAA,WAAW,IAAIpC,YAAAA,CAAaoC;AAC/C,SAAA;QAEA,IACElI,cAAAA,CAAe,YAAYsE,UAAWrE,CAAAA,aAAa,KACnDG,eAAgB,CAAA,QAAA,EAAUkE,UAAWjE,CAAAA,KAAK,CAC1C,EAAA;AACAiE,YAAAA,UAAAA,CAAWpH,KAAK,GAAG1B,cAAesK,CAAAA,YAAAA,CAAaqC,WAAW,CAAA;AAC5D;AAEA,QAAA,IAAInI,cAAe,CAAA,MAAA,EAAQsE,UAAWrE,CAAAA,aAAa,CAAG,EAAA;AACpDqE,YAAAA,UAAAA,CAAW8D,cAAc,GAAG,MAAMpM,eAAAA,CAAgB+H,WAAWyD,aAAa,CAAA;AAC1ElD,YAAAA,UAAAA,CAAW+D,qBAAqB,GAAGvC,YAAauC,CAAAA,qBAAqB,IAAI,MAAA;AAC3E;AAEA,QAAA,MAAMlT,GAAM,GAAA,CAAA,CAAA,iCAAA,GAAA,CAAA,gBAAA,IAAI,CAACwB,OAAO,EAAC4G,mBAAmB,MAAhC,IAAA,IAAA,iCAAA,KAAA,SAAA,GAAA,SAAA,GAAA,iCAAA,CAAA,IAAA,CAAA,aAAA,CAAA,KAAwC5H,KAAKR,GAAG,EAAA;QAC5D,MAAMmT,QAAAA,GAAWxC,YAAawC,CAAAA,QAAQ,GAAG,CAAC,CAAC,EAAExC,YAAAA,CAAawC,QAAQ,CAAA,CAAE,GAAG,EAAA;AACvE,QAAA,MAAMC,mBAAmB1P,uBAAwByL,CAAAA,UAAAA,CAAAA;QACjD,MAAM5N,GAAAA,GAAM,CAAG,EAAA,IAAI,CAACC,OAAO,CAAC2M,SAAS,CAAEiE,sBAAsB,CAAGgB,EAAAA,gBAAAA,CAAAA,EAAmBD,QAAU,CAAA,CAAA;;AAG7F,QAAA,IAAI,CAACnF,UAAU,CAACtQ,KAAK,CAACsC,GAAM,GAAA,QAAA,CAAA;QAE5B,MAAM,IAAI,CAACgO,UAAU,CAAC3Q,GAAG,CACvB8R,UAAAA,CAAWlT,KAAK,EAChBkO,cAAe,CAAA;YACbjM,UAAY8B,EAAAA,GAAAA;AACZmP,YAAAA,UAAAA;AACAP,YAAAA,UAAAA;AACAM,YAAAA,YAAAA,EAAcyB,aAAazB;AAC7B,SAAA,CAAA,CAAA;QAEF,OAAO3N,GAAAA;AACT;AAEA;;;;;AAKC,MACD,MAAcgP,mBAAAA,CAAoB/O,OAAgC,GAAA,EAAE,EAAE;AAC/D,QAAA,IAAA,uBAAA;QAAL,IAAI,EAAA,CAAC,uBAAA,GAAA,IAAI,CAACA,OAAO,CAAC2M,SAAS,MAAtB,IAAA,IAAA,uBAAA,KAAA,SAAA,GAAA,SAAA,GAAA,uBAAwBkF,CAAAA,oBAAoB,CAAE,EAAA;YACjD,MAAM,IAAI,CAAC/E,eAAe,EAAA;AAC5B;AACA,QAAA,MAAMqC,YAAejG,GAAAA,YAAAA,CAAa,IAAI,CAAClJ,OAAO,EAAEA,OAAAA,CAAAA;AAChD,QAAA,MAAM8R,YAAe,GAAA;AACnBjD,YAAAA,aAAAA,EAAeM,aAAaN,aAAa;AACzCkD,YAAAA,wBAAAA,EAA0B5C,aAAa4C,wBAAwB;AAC/D,YAAA,GAAI5C,YAAa6C,CAAAA,iBAAiB,IAAI;AACxC,SAAA;QACA,OAAO,CAAA,EAAG,IAAI,CAAChS,OAAO,CAAC2M,SAAS,CAAEkF,oBAAoB,CAAG3P,EAAAA,uBAAAA,CAAwB4P,YAAe,CAAA,CAAA,CAAA;AAClG;AAEA;;;;MAKA,MAAcG,yBAA0BjS,CAAAA,OAA2B,EAAE;AAC9D,QAAA,IAAA,uBAAA;QAAL,IAAI,EAAA,CAAC,uBAAA,GAAA,IAAI,CAACA,OAAO,CAAC2M,SAAS,MAAtB,IAAA,IAAA,uBAAA,KAAA,SAAA,GAAA,SAAA,GAAA,uBAAwBuF,CAAAA,cAAc,CAAE,EAAA;YAC3C,MAAM,IAAI,CAACpF,eAAe,EAAA;AAC5B;AACA,QAAA,MAAMqC,YAAejG,GAAAA,YAAAA,CAAa,IAAI,CAAClJ,OAAO,EAAEA,OAAAA,CAAAA;AAChD,QAAA,MAAM,EAAEmS,iBAAiB,EAAEC,gBAAgB,EAAE,GAAGC,MAAM,GAAGlD,YAAAA;AACzD,QAAA,MAAMmD,aAAgB,GAAA;AACpB,YAAA,GAAGD,IAAI;YACP,GAAID,gBAAAA,IAAoB,EAAE;YAC1BG,UAAY,EAAA;AACd,SAAA;AAEA,QAAA,KAAK,MAAMC,GAAO,IAAA;AAAC,YAAA,MAAA;AAAQ,YAAA,cAAA;AAAgB,YAAA,eAAA;AAAiB,YAAA;SAAY,CAAW;AACjF,YAAA,IAAI,CAACF,aAAa,CAACE,GAAAA,CAAI,EAAE;gBACvB,OAAOnX,OAAAA,CAAQ4E,MAAM,CAAC,IAAI9F,KAAAA,CAAM,CAAC,CAAC,EAAEqY,GAAI,CAAA,aAAa,CAAC,CAAA,CAAA;AACxD;AACF;QAEA,OAAO,IAAI,CAAClD,IAAI,CAAC;YACfvP,GAAK,EAAA,CAAA,EAAG,IAAI,CAACC,OAAO,CAAC2M,SAAS,CAAEuF,cAAc,CAAE,CAAA;YAChDvO,MAAQ,EAAA,MAAA;YACRC,WAAa,EAAA,MAAA;YACb1C,IAAMoR,EAAAA,aAAAA;YACN5O,OAASyO,EAAAA;AACX,SAAA,CAAA;AACF;AAEA;;;;MAKA,MAActC,oBAAqB7P,CAAAA,OAAoC,EAAE;AAClE,QAAA,IAAA,uBAAA;QAAL,IAAI,EAAA,CAAC,uBAAA,GAAA,IAAI,CAACA,OAAO,CAAC2M,SAAS,MAAtB,IAAA,IAAA,uBAAA,KAAA,SAAA,GAAA,SAAA,GAAA,uBAAwBuF,CAAAA,cAAc,CAAE,EAAA;YAC3C,MAAM,IAAI,CAACpF,eAAe,EAAA;AAC5B;AACA,QAAA,MAAM,EAAEqF,iBAAiB,EAAEC,gBAAgB,EAAE,GAAGC,MAAM,GAAGrS,OAAAA;AACzD,QAAA,MAAMsS,aAAgB,GAAA;YACpBC,UAAY,EAAA,eAAA;AACZzL,YAAAA,SAAAA,EAAW,IAAI,CAAC9G,OAAO,CAAC8G,SAAS;AACjCsI,YAAAA,aAAAA,EAAe,IAAI,CAACpP,OAAO,CAACoP,aAAa;AACzC,YAAA,GAAGiD,IAAI;YACP,GAAID,gBAAAA,IAAoB;AAC1B,SAAA;AAEA,QAAA,KAAK,MAAMI,GAAO,IAAA;AAAC,YAAA,eAAA;AAAiB,YAAA;SAAY,CAAW;AACzD,YAAA,IAAI,CAACF,aAAa,CAACE,GAAAA,CAAI,EAAE;gBACvB,OAAOnX,OAAAA,CAAQ4E,MAAM,CAAC,IAAI9F,KAAAA,CAAM,CAAC,CAAC,EAAEqY,GAAI,CAAA,aAAa,CAAC,CAAA,CAAA;AACxD;AACF;QAEA,OAAO,IAAI,CAAClD,IAAI,CAAC;YACfvP,GAAK,EAAA,CAAA,EAAG,IAAI,CAACC,OAAO,CAAC2M,SAAS,CAAEuF,cAAc,CAAE,CAAA;YAChDvO,MAAQ,EAAA,MAAA;YACRC,WAAa,EAAA,MAAA;YACb1C,IAAMoR,EAAAA,aAAAA;YACN5O,OAASyO,EAAAA;AACX,SAAA,CAAA;AACF;AAEA;;AAEC,MACD,MAAcrF,eAAgD,GAAA;QAC5D,IAAI;YACF,MAAM2F,UAAAA,GAAa,GAAG,IAAI,CAACzS,OAAO,CAAC4B,MAAM,CAAC,iCAAiC,CAAC;AAC5E,YAAA,MAAMZ,QAAW,GAAA,MAAM,IAAI,CAACsO,IAAI,CAAC;gBAC/BvP,GAAK0S,EAAAA,UAAAA;gBACL9O,MAAQ,EAAA,KAAA;gBACRC,WAAa,EAAA;AACf,aAAA,CAAA;YACA,IAAI,CAAC8O,eAAe,GAAG1R,QAAAA;AACvB,YAAA,MAAM2L,YAAY,EAAC;YACnB,KAAK,MAAMgG,QAAQ/F,MAAOC,CAAAA,IAAI,CAAC,IAAI,CAAC6F,eAAe,CAAG,CAAA;AACpD,gBAAA,IACEC,IAAKC,CAAAA,QAAQ,CAAC,WAAA,CAAA,IACdD,KAAKxL,OAAO,CAAC,UAAc,CAAA,GAAA,CAAC,KAC5BwL,IAAKxL,CAAAA,OAAO,CAAC,MAAA,CAAA,GAAU,CAAC,CACxB,EAAA;AACAwF,oBAAAA,SAAS,CAACgG,IAAqC,CAAA,GAAG,IAAI,CAACD,eAAe,CAACC,IAAK,CAAA;AAC9E;AACF;AACA,YAAA,IAAI,CAAC3S,OAAO,CAAC2M,SAAS,GAAGA,SAAAA;YACzB,OAAO,IAAI,CAAC+F,eAAe;AAC7B,SAAA,CAAE,OAAO/V,CAAG,EAAA;AACV,YAAA,MAAM,IAAIzC,eAAAA,CAAgB,yBAA2ByC,EAAAA,CAAAA,CAAE8J,OAAO,CAAA;AAChE;AACF;AAEA;;;;;;MAOA,MAAcqH,mBACZ9M,QAAa,EACbmO,YAAgC,EAChC/B,UAAAA,GAAkC,EAAE,EACpC;QACA,IAAIpM,QAAAA,CAASsE,IAAI,EAAE;YACjB,OAAO,IAAI,CAAC2M,yBAAyB,CAAC;AACpCvC,gBAAAA,YAAAA,EAAcP,aAAaO,YAAY;AACvC5I,gBAAAA,SAAAA,EAAWqI,aAAarI,SAAS;AACjC+J,gBAAAA,aAAAA,EAAezD,WAAWyD,aAAa;gBACvC0B,UAAY,EAAA,oBAAA;AACZjN,gBAAAA,IAAAA,EAAMtE,SAASsE;AACjB,aAAA,CAAA;AACF;QACA,OAAOtE,QAAAA;AACT;AAEA;;;;;;AAMC,MACD,MAAcgN,iBACZH,CAAAA,WAA0B,EAC1BF,UAA8B,EAC9BwB,YAAoC,EACpC;QACA,MAAM,IAAI,CAAC/C,UAAU,CAAC,KAAA,CAAA;AACtB,QAAA,IAAIqE,OAAY,EAAC;QACjB,IAAI5C,WAAAA,CAAYzT,KAAK,EAAE;AACrB,YAAA,MAAM,IAAIG,mBAAoBsT,CAAAA,WAAAA,CAAYzT,KAAK,EAAEyT,YAAYxT,iBAAiB,CAAA;AAChF;QACA,IAAIwY,aAAAA;QACJ,IAAIhF,WAAAA,CAAYvH,QAAQ,EAAE;AACxBuM,YAAAA,aAAAA,GAAgB,MAAMxM,eAAgBwH,CAAAA,WAAAA,CAAYvH,QAAQ,EAAEqH,UAAAA,CAAWpH,KAAK,EAAG4I,YAAAA,CAAAA;YAC/E,IACEA,YAAAA,CAAa2D,gBAAgB,IAC7B,CAAE,MAAM3D,aAAa2D,gBAAgB,CAACjF,WAAYvH,CAAAA,QAAQ,CAC1D,EAAA;AACA,gBAAA,OAAOjL,OAAQ4E,CAAAA,MAAM,CAAC,IAAInF,mBAAoB,CAAA,4BAAA,CAAA,CAAA;AAChD;AACA8R,YAAAA,MAAAA,CAAOC,IAAI,CAACgG,aAAe/V,CAAAA,CAAAA,OAAO,CAAC,CAAC1B,GAAAA,GAAAA;AAClC,gBAAA,IAAI,CAACwM,aAAAA,CAAc9F,QAAQ,CAAC1G,GAAa,CAAA,EAAA;AACvCqV,oBAAAA,IAAI,CAACrV,GAAAA,CAAI,GAAGyX,aAAa,CAACzX,GAAI,CAAA;AAChC;AACF,aAAA,CAAA;AACF;QAEA,IAAIyS,WAAAA,CAAYoC,YAAY,EAAE;AACQ,YAAA,IAAA,uBAAA;AAApC,YAAA,IAAId,YAAa4D,CAAAA,eAAe,KAAI,CAAA,uBAAA,GAAA,IAAI,CAAC/S,OAAO,CAAC2M,SAAS,MAAA,IAAA,IAAtB,uBAAA,KAAA,SAAA,GAAA,SAAA,GAAA,uBAAA,CAAwBqG,iBAAiB,CAAE,EAAA;AAC7E,gBAAA,MAAMC,iBAAiB,MAAM,IAAI,CAACC,aAAa,CAACrF,YAAYoC,YAAY,CAAA;gBACxE,IAAI,CAACgD,cAAe7Y,CAAAA,KAAK,EAAE;oBACzBqW,IAAO,GAAA;AAAE,wBAAA,GAAGA,IAAI;AAAE,wBAAA,GAAGwC;AAAe,qBAAA;AACtC;AACF;AACF;QAEA,OAAO;AACLtF,YAAAA,UAAAA;AACA8C,YAAAA,IAAAA;AACA,YAAA,GAAG5C,WAAW;YACdvH,QAAUuM,EAAAA,aAAAA;AACV/D,YAAAA,YAAAA,EAAcjB,YAAYvH,QAAQ;AAClCoD,YAAAA,KAAAA,EAAOmE,WAAYnE,CAAAA,KAAK,IAAIiE,UAAAA,CAAWjE;AACzC,SAAA;AACF;AAEA;;;;;MAMA,MAAckE,SAAUnT,CAAAA,KAAa,EAAE;AACrC,QAAA,MAAM6T,iBAAiB,MAAM,IAAI,CAAC9B,UAAU,CAACrR,GAAG,CAACV,KAAAA,CAAAA;AACjD,QAAA,IAAI,CAAC6T,cAAgB,EAAA;AACnB,YAAA,OAAOjT,OAAQ4E,CAAAA,MAAM,CAAC,IAAItF,cAAc,uBAAyBF,EAAAA,KAAAA,CAAAA,CAAAA;AACnE;AACA,QAAA,MAAM,IAAI,CAAC+R,UAAU,CAACxQ,GAAG,CAACvB,KAAAA,CAAAA;QAC1B,OAAO6T,cAAAA;AACT;AAEA;;;;;MAMA,MAAc4E,aAAcC,CAAAA,WAAmB,EAAE;QAC/C,OAAO,IAAI,CAAC7D,IAAI,CAAC;YACf3L,MAAQ,EAAA,KAAA;YACR5D,GAAK,EAAA,CAAA,EAAG,IAAI,CAACC,OAAO,CAAC2M,SAAS,CAAEqG,iBAAiB,CAAE,CAAA;YACnDpP,WAAa,EAAA,MAAA;YACbF,OAAS,EAAA;gBACP0P,aAAe,EAAA,CAAC,OAAO,EAAED,WAAa,CAAA;AACxC;AACF,SAAA,CAAA;AACF;AAEA;;;;;;AAMC,MACD,cAAuB,CAAA,EAAEE,GAAG,EAAEpF,aAAa,EAAyB,EAAE;QACpE,MAAM,EAAEnH,SAAS,EAAE6F,SAAS,EAAE,GAAG,IAAI,CAAC3M,OAAO;AAE7C,QAAA,IAAI,EAAC2M,SAAAA,KAAAA,IAAAA,IAAAA,SAAAA,KAAAA,SAAAA,GAAAA,SAAAA,GAAAA,SAAAA,CAAW2G,oBAAoB,CAAE,EAAA;AACpCC,YAAAA,OAAAA,CAAQC,IAAI,CACV,4FAAA,CAAA;AAEF,YAAA;AACF;AACA,QAAA,IAAI,CAAC,IAAI,CAACC,mBAAmB,EAAE;AAC7B,YAAA,MAAMC,uBAAuB,OAAOC,GAAAA,GAAAA;AAClC,gBAAA,IAAIA,GAAK,EAAA;AACP,oBAAA,IAAI,CAAC7V,IAAI,CAAClE,MAAAA,CAAOC,WAAW,CAAA;iBACvB,MAAA;AACL,oBAAA,IAAI,CAACiE,IAAI,CAAClE,MAAAA,CAAOK,cAAc,CAAA;oBAC/B,IAAI;AACF,wBAAA,MAAM,IAAI,CAAC+S,WAAW,CAAC,IAAI,EAAC,CAAA;AAC5B,wBAAA,MAAM4B,aAAa,MAAM,IAAI,CAAClC,SAAS,CAACvR,GAAG,CAAC,MAAA,CAAA;AAC5C,wBAAA,IAAIyT,UAAY,EAAA;AACVA,4BAAAA,IAAAA,gBAAAA;AAAJ,4BAAA,IAAIA,CAAAA,CAAAA,gBAAAA,GAAAA,UAAW6B,CAAAA,IAAI,MAAf7B,IAAAA,IAAAA,gBAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,gBAAiByE,CAAAA,GAAG,MAAKA,GAAAA,IAAOzE,UAAWX,CAAAA,aAAa,EAAE;AAC5D,gCAAA,IAAI,CAACwF,mBAAmB,CAAErV,KAAK,CAACwQ,WAAWX,aAAa,CAAA;AAC1D;yBACK,MAAA;AACL,4BAAA,IAAI,CAACnQ,IAAI,CAAClE,MAAAA,CAAOC,WAAW,EAAE,IAAA,CAAA;AAChC;AACF,qBAAA,CAAE,OAAO8C,CAAG,EAAA;AACV,wBAAA,IAAI,CAACmB,IAAI,CAAClE,MAAAA,CAAOC,WAAW,CAAA;AAC5B,wBAAA;AACF;AACF;AACF,aAAA;YAEA,IAAI,CAAC4Z,mBAAmB,GAAG3L,yBAA0B,CAAA;AACnD/H,gBAAAA,GAAAA,EAAK4M,UAAU2G,oBAAoB;gBACnCxM,SAAWA,EAAAA,SAAAA;gBACXxI,QAAUoV,EAAAA,oBAAAA;AACV3L,gBAAAA,aAAAA,EAAe,IAAI,CAAC/H,OAAO,CAAC4T;AAC9B,aAAA,CAAA;AACF;AAEA,QAAA,IAAI,CAACH,mBAAmB,CAACrV,KAAK,CAAC6P,aAAAA,CAAAA;AACjC;AAEA,IAAA,MAAcf,WAAY2G,CAAAA,OAAY,EAAEC,UAAAA,GAAa,KAAK,EAAE;AAuBrDtY,QAAAA,IAAAA,OAAAA;AAtBL,QAAA,MAAM,EACJ6U,UAAU,EACVI,IAAI,EACJ/G,KAAK,EACLuG,YAAY,EACZ3J,QAAQ,EACRsJ,aAAa,EACb3B,aAAa,EACba,YAAY,EACb,GAAG+E,OAAAA;AACJ,QAAA,MAAM,IAAI,CAACnH,SAAS,CAAC7Q,GAAG,CAAC,MAAQgY,EAAAA,OAAAA,CAAAA;QAEjC,IAAI,CAACpD,IAAI,GAAGA,IAAAA;AACZ,QAAA,IAAI,CAAC9G,MAAM,GAAGD,kBAAAA,KAAAA,KAAAA,SAAAA,GAAAA,SAAAA,GAAAA,KAAAA,CAAO3G,KAAK,CAAC,GAAA,CAAA;QAC3B,IAAI,CAACoQ,WAAW,GAAGlD,YAAAA;QACnB,IAAI,CAAC8D,OAAO,GAAGzN,QAAAA;QACf,IAAI,CAAC0N,UAAU,GAAGlF,YAAAA;QAClB,IAAI,CAACmF,YAAY,GAAGrE,aAAAA;AAEpB,QAAA,IAAI,CAACkE,UAAY,EAAA;AACf,YAAA,IAAI,CAAChW,IAAI,CAAClE,MAAAA,CAAOE,UAAU,EAAE+Z,OAAAA,CAAAA;AAC/B;AACA,QAAA,IAAI,GAACrY,OAAAA,GAAAA,MAAAA,MAAAA,IAAAA,IAAAA,OAAAA,KAAAA,SAAAA,GAAAA,SAAAA,GAAAA,OAAAA,CAAQuR,YAAY,CAAE,EAAA;AACzB,YAAA,IAAI,IAAI,CAAC/M,OAAO,CAACkU,YAAY,EAAE;gBAC7B,IAAI,CAACC,cAAc,CAAC;AAAEd,oBAAAA,GAAAA,EAAK5C,IAAK4C,CAAAA,GAAG,IAAI5C,IAAAA,CAAK2D,EAAE;AAAEnG,oBAAAA;AAAc,iBAAA,CAAA;AAChE;AAEA,YAAA,IAAIoC,eAAepH,SAAa,IAAA,IAAI,CAACjJ,OAAO,CAACqU,eAAe,EAAE;AAC5D,gBAAA,MAAM9V,aAAakJ,MAAO4I,CAAAA,UAAAA,CAAAA,GAAc,IAAI,CAACrQ,OAAO,CAACsU,oCAAoC;AACzF,gBAAA,MAAMC,KAAQ,GAAA,IAAA;AACZ,oBAAA,IAAI,CAACrG,YAAY,CAAChD,QAAQ,CAAC,cAAgB,EAAA,UAAA;wBACzC,IAAI;4BACF,MAAM,IAAI,CAAC8B,WAAW,EAAA;AACtB,4BAAA,IAAI,CAAClP,IAAI,CAAClE,MAAAA,CAAOG,oBAAoB,EAAE,IAAA,CAAA;AACzC,yBAAA,CAAE,OAAO4C,CAAG,EAAA;AACV,4BAAA,IAAI,CAACmB,IAAI,CAAClE,MAAAA,CAAOI,kBAAkB,EAAE2C,CAAAA,CAAAA;AACvC;AACF,qBAAA,CAAA;AACF,iBAAA;AACA,gBAAA,IAAI4B,cAAc,CAAG,EAAA;AACnB,oBAAA,IAAI,CAACiW,uBAAuB,CAAEpW,KAAK,CAACG,UAAY,EAAA,UAAA;AAC9CgW,wBAAAA,KAAAA,EAAAA;AACF,qBAAA,CAAA;iBACK,MAAA;AACLA,oBAAAA,KAAAA,EAAAA;AACF;AACF;AACF;AACF;AAnxBA/Z,IAAAA,WAAAA,CAAYwF,OAA+B,CAAE;AAC3C,QAAA,KAAK,EAjCPA,EAAAA,gBAAAA,CAAAA,IAAAA,EAAAA,SAAAA,EAAAA,SAEAyQ,CAAAA,EAAAA,gBAAAA,CAAAA,IAAAA,EAAAA,MAAAA,EAAAA,SAEA9G,CAAAA,EAAAA,gBAAAA,CAAAA,IAAAA,EAAAA,QAAAA,EAAAA,SAEAwJ,CAAAA,EAAAA,gBAAAA,CAAAA,IAAAA,EAAAA,aAAAA,EAAAA,SAEAc,CAAAA,EAAAA,gBAAAA,CAAAA,IAAAA,EAAAA,cAAAA,EAAAA,SAEAF,CAAAA,EAAAA,gBAAAA,CAAAA,IAAAA,EAAAA,SAAAA,EAAAA,SAEAC,CAAAA,EAAAA,gBAAAA,CAAAA,IAAAA,EAAAA,YAAAA,EAAAA,YAEAtB,gBAAAA,CAAAA,IAAAA,EAAAA,iBAAAA,EAAAA,SAAAA,CAAAA,EAEA,gBAAiBpD,CAAAA,IAAAA,EAAAA,MAAAA,EAAjB,SAAA,CAAA,EAEA,gBAAQpB,CAAAA,IAAAA,EAAAA,cAAAA,EAAR,SAAA,CAAA,EAEA,gBAAQ1B,CAAAA,IAAAA,EAAAA,YAAAA,EAAR,SAAA,CAAA,EAEA,uBAAQE,WAAR,EAAA,SAEA,CAAA,EAAA,gBAAA,CAAA,IAAA,EAAQ+G,qBAAR,EAAA,SAEA,CAAA,EAAA,gBAAA,CAAA,IAAA,EAAQe,yBAAR,EAAA,SAEA,CAAA,EAAA,gBAAA,CAAA,IAAA,EAAQlI,aAAR,EAAA,SAEA,CAAA,EAAA,gBAAA,CAAA,IAAA,EAAQC,uBAAR,SAAA,CAAA;AAIE,QAAA,IAAI,CAAC5K,aAAAA,CAAc3B,OAAQ4B,CAAAA,MAAM,CAAG,EAAA;AAClC,YAAA,MAAM,IAAI1H,eAAgB,CAAA,+BAAA,CAAA;AAC5B;QAEA,IAAI,CAACgU,YAAY,GAAG,IAAIjD,SAASwJ,IAAKzU,CAAAA,OAAAA,CAAQ4B,MAAM,CAAA,EAAG,IAAI,CAAA;QAE3D,IAAI,CAAC5B,OAAO,GAAGkJ,YACb,CAAA;YACEoL,oCAAsC,EAAA,EAAA;YACtCD,eAAiB,EAAA,IAAA;YACjBH,YAAc,EAAA,IAAA;YACdpD,WAAa,EAAA,EAAA;YACbU,WAAa,EAAA;AACf,SAAA,EACAxR,OACA,EAAA;;AAEE4B,YAAAA,MAAAA,EAAQ5B,OAAQ4B,CAAAA,MAAM,CAACgR,QAAQ,CAAC,GAAO5S,CAAAA,GAAAA,OAAAA,CAAQ4B,MAAM,CAAC3D,KAAK,CAAC,CAAA,EAAG,EAAC,CAAA,GAAK+B,QAAQ4B;AAC/E,SAAA,CAAA;QAGF,IAAI,CAAC0N,IAAI,GAAG,IAAI,CAACtP,OAAO,CAAC0U,UAAU,IAAIjR,OAAAA;QACvC,IAAI,CAAC+I,UAAU,GACb,IAAI,CAACxM,OAAO,CAACwM,UAAU,IAAI,IAAItR,sBAAoC,CAAA,gBAAA,CAAA;QACrE,IAAI,CAACwR,SAAS,GAAG,IAAI,CAAC1M,OAAO,CAAC0M,SAAS,IAAI,IAAI9P,kBAAAA,EAAAA;AAE/C,QAAA,IAAI,IAAI,CAACoD,OAAO,CAACqU,eAAe,EAAE;YAChC,IAAI,CAACG,uBAAuB,GAAG,IAAIrW,KAAAA,EAAAA;AACrC;AAEA,QAAA,IAAI,CAACZ,EAAE,CAAC3D,MAAAA,CAAOC,WAAW,EAAE,UAAA;YAC1B,IAAI,CAAC4W,IAAI,GAAGxH,SAAAA;YACZ,IAAI,CAACU,MAAM,GAAGV,SAAAA;YACd,IAAI,CAACkK,WAAW,GAAGlK,SAAAA;YACnB,IAAI,CAAC8K,OAAO,GAAG9K,SAAAA;YACf,IAAI,CAACgL,YAAY,GAAGhL,SAAAA;AACpB,YAAA,MAAM,IAAI,CAACyD,SAAS,CAACxQ,KAAK,EAAA;AAC5B,SAAA,CAAA;AAEA,QAAA,IAAI,CAACgS,YAAY,CAACrC,kBAAkB,CAACjS,MAAOE,CAAAA,UAAU,EAAE,IAAI,CAACoT,WAAW,CAACyH,IAAI,CAAC,IAAI,CAAA,CAAA;AACpF;AA0uBF;;AC91BA;;;IAIe,SAASC,gBAAAA,CAAiB5U,OAA+B,EAAA;IACtE,OAAO,IAAImM,UAAWnM,CAAAA,OAAAA,CAAAA,CAASoM,UAAU,EAAA;AAC3C;;;;","x_google_ignoreList":[8]}